//#ifndef INTERPRET_TYPES_H
//#define INTERPRET_TYPES_H

#include "Commands.h"

class Type{
public:
    enum C_Type{
        Void,
        Pointer,
        U_Int,
        U_Long,
        U_Short,
        Double,
        Float,
        U_Char,
        Char,
        Int,
        Long,
        Short,
        Longlong,
        U_Longlong,
        LongDouble,
    };
private:
    C_Type type_name;
    int address;
    int size;
    int point_to_type;
    int pointer_degree;
public:
    Type() = default;
    Type( int p, int d, int s = 4 ){
        type_name = Pointer;
        size = s;
        address = -1;
        point_to_type = p;
        pointer_degree = d;
    }
    Type (C_Type t, int s, int p = 0){
        type_name = t;
        size = s;
        address = -1;
        point_to_type = -1;
        pointer_degree = p;
    }
    C_Type get_type() const{
        return type_name;
    }
    void set_address(int& a){
        address = a;
    }
    int get_size() const{
        return size;
    }
    int get_address_type() const{
        return address;
    }
    int get_point_to_type() const{
        return point_to_type;
    }
    int get_pointer_degree() const{
        return pointer_degree;
    }
};

class Type_Table{
public:
    const int VOID = 0;
    const int SIGNED_CHAR = 1;
    const int UNSIGNED_CHAR = 2;
    const int SIGNED_SHORT = 3;
    const int UNSIGNED_SHORT = 4;
    const int SIGNED_INT = 5;
    const int UNSIGNED_INT = 6;
    const int SIGNED_LONG = 7;
    const int UNSIGNED_LONG = 8;
    const int SIGNED_LONG_LONG = 9;
    const int UNSIGNED_LONG_LONG = 10;
    const int FLOAT = 11;
    const int DOUBLE = 12;
    const int LONG_DOUBLE = 13;
    const int CONST_CHAR_POINTER = 14;
    int counter = 15;
    std::map<std::string, std::pair<int, Type>> table_names = {
            {"void", {VOID, Type(Type::Void, 0)}},
            {"char", {SIGNED_CHAR, Type(Type::Char, 1)}},
            {"unsigned char", {UNSIGNED_CHAR, Type(Type::U_Char, 1)}},
            {"short", {SIGNED_SHORT, Type(Type::Short, 2)}},
            {"unsigned short", {UNSIGNED_SHORT, Type(Type::U_Short, 2)}},
            {"int", {SIGNED_INT, Type(Type::Int, 4)}},
            {"unsigned int", {UNSIGNED_INT, Type(Type::U_Int, 4)}},
            {"long", {SIGNED_LONG, Type(Type::Long, 4)}},
            {"unsigned long", {UNSIGNED_LONG, Type(Type::U_Long, 4)}},
            {"long long", {SIGNED_LONG_LONG, Type(Type::Longlong, 8)}},
            {"unsigned long long", {UNSIGNED_LONG_LONG, Type(Type::U_Longlong, 8)}},
            {"float", {FLOAT, Type(Type::Float, 4)}},
            {"double", {DOUBLE, Type(Type::Double, 8)}},
            {"long double", {LONG_DOUBLE, Type(Type::LongDouble, 10)}},
            {"const char*", {CONST_CHAR_POINTER, Type(Type::Pointer, 4, 1)}},
    };
    std::vector<std::string> table_ID = {
            "void",
            "char",
            "unsigned char",
            "short",
            "unsigned short",
            "int",
            "unsigned int",
            "long",
            "unsigned long",
            "long long",
            "unsigned long long",
            "float",
            "double",
            "long double",
            "const char*",
    };
    std::map<std::tuple<int, int>, std::shared_ptr<Commander>> type_cast_table;
    std::map<std::tuple<int, LexemeType>, std::shared_ptr<Commander>> command_matching_table_1;
    std::map<std::tuple<int, int, LexemeType>, std::shared_ptr<Commander>> command_matching_table_2;
    std::map<std::tuple<int, int>, std::shared_ptr<Commander>> command_matching_table_3;
    int AddMember(const std::string& name, Type t) {
        table_names[name] = {counter, t};
        table_ID.emplace_back(name);
        return counter++;
    }
    bool FindMember(const std::string& name){
        return !(table_names.find(name) == table_names.end());
    }
    void add_to_type_cast_table( int a, int b, Commander* c){
        type_cast_table[std::make_tuple(a, b)].reset(c);
    };
    void add_to_command_table_3( int a, int b, Commander* c){
        command_matching_table_3[std::make_tuple(a, b)].reset(c);
    };
    void add_to_command_table_2( int a, int b, LexemeType c, Commander* d){
        command_matching_table_2[std::make_tuple(a, b, c)].reset(d);
    };
    void add_to_command_table_1(int a, LexemeType b, Commander* c){
        command_matching_table_1[std::make_tuple(a, b)].reset(c);
    }
    void set_address(int& a, int& b){
        table_names[table_ID[a]].second.set_address(b);
    }
    std::shared_ptr<Commander>& get_command_table_1(int a, LexemeType b){
        try {
            return command_matching_table_1.at(std::make_tuple(a, b));
        } catch (std::out_of_range&){
            ///////////////////////////////////////////////////////////////////////
            throw "Invalid operand types";
            ///////////////////////////////////////////////////////////////////////
        }
    }
    std::shared_ptr<Commander>& get_command_table_2(int a, int b, LexemeType c){
        try {
            return command_matching_table_2.at(std::make_tuple(a, b, c));
        } catch (std::out_of_range&){
            ///////////////////////////////////////////////////////////////////////
            throw "Invalid operand types";
            ///////////////////////////////////////////////////////////////////////
        }
    }
    std::shared_ptr<Commander>& get_command_table_3(int a, int b){
        try {
            return command_matching_table_3.at(std::make_tuple(a, b));
        } catch (std::out_of_range&){
            ///////////////////////////////////////////////////////////////////////
            throw "Invalid operand types";
            ///////////////////////////////////////////////////////////////////////
        }
    }
    std::shared_ptr<Commander>& get_command_table_type_cast(int a, int b){
        try {
            return type_cast_table.at(std::make_tuple(a, b));
        } catch (std::out_of_range&){
            ///////////////////////////////////////////////////////////////////////
            throw "Invalid operand types";
            ///////////////////////////////////////////////////////////////////////
        }
    }

    Type_Table();

};

Type_Table::Type_Table() {

    //Add,Sub,Mul,Div code_generator_1

    add_to_command_table_2( 1 , 1 , LexemPlus , new Add < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemPlus , new Add < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemPlus , new Add < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemPlus , new Add < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemPlus , new Add < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemPlus , new Add < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemPlus , new Add < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemPlus , new Add < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemPlus , new Add < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemPlus , new Add < signed char , unsigned long long >);
    add_to_command_table_2( 1 , 11 , LexemPlus , new Add < signed char , float >);
    add_to_command_table_2( 1 , 12 , LexemPlus , new Add < signed char , double >);
    add_to_command_table_2( 1 , 13 , LexemPlus , new Add < signed char , long double >);
    add_to_command_table_2( 2 , 1 , LexemPlus , new Add < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemPlus , new Add < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemPlus , new Add < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemPlus , new Add < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemPlus , new Add < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemPlus , new Add < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemPlus , new Add < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemPlus , new Add < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemPlus , new Add < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemPlus , new Add < unsigned char , unsigned long long >);
    add_to_command_table_2( 2 , 11 , LexemPlus , new Add < unsigned char , float >);
    add_to_command_table_2( 2 , 12 , LexemPlus , new Add < unsigned char , double >);
    add_to_command_table_2( 2 , 13 , LexemPlus , new Add < unsigned char , long double >);
    add_to_command_table_2( 3 , 1 , LexemPlus , new Add < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemPlus , new Add < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemPlus , new Add < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemPlus , new Add < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemPlus , new Add < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemPlus , new Add < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemPlus , new Add < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemPlus , new Add < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemPlus , new Add < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemPlus , new Add < signed short , unsigned long long >);
    add_to_command_table_2( 3 , 11 , LexemPlus , new Add < signed short , float >);
    add_to_command_table_2( 3 , 12 , LexemPlus , new Add < signed short , double >);
    add_to_command_table_2( 3 , 13 , LexemPlus , new Add < signed short , long double >);
    add_to_command_table_2( 4 , 1 , LexemPlus , new Add < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemPlus , new Add < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemPlus , new Add < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemPlus , new Add < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemPlus , new Add < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemPlus , new Add < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemPlus , new Add < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemPlus , new Add < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemPlus , new Add < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemPlus , new Add < unsigned short , unsigned long long >);
    add_to_command_table_2( 4 , 11 , LexemPlus , new Add < unsigned short , float >);
    add_to_command_table_2( 4 , 12 , LexemPlus , new Add < unsigned short , double >);
    add_to_command_table_2( 4 , 13 , LexemPlus , new Add < unsigned short , long double >);
    add_to_command_table_2( 5 , 1 , LexemPlus , new Add < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemPlus , new Add < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemPlus , new Add < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemPlus , new Add < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemPlus , new Add < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemPlus , new Add < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemPlus , new Add < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemPlus , new Add < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemPlus , new Add < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemPlus , new Add < signed int , unsigned long long >);
    add_to_command_table_2( 5 , 11 , LexemPlus , new Add < signed int , float >);
    add_to_command_table_2( 5 , 12 , LexemPlus , new Add < signed int , double >);
    add_to_command_table_2( 5 , 13 , LexemPlus , new Add < signed int , long double >);
    add_to_command_table_2( 6 , 1 , LexemPlus , new Add < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemPlus , new Add < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemPlus , new Add < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemPlus , new Add < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemPlus , new Add < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemPlus , new Add < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemPlus , new Add < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemPlus , new Add < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemPlus , new Add < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemPlus , new Add < unsigned int , unsigned long long >);
    add_to_command_table_2( 6 , 11 , LexemPlus , new Add < unsigned int , float >);
    add_to_command_table_2( 6 , 12 , LexemPlus , new Add < unsigned int , double >);
    add_to_command_table_2( 6 , 13 , LexemPlus , new Add < unsigned int , long double >);
    add_to_command_table_2( 7 , 1 , LexemPlus , new Add < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemPlus , new Add < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemPlus , new Add < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemPlus , new Add < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemPlus , new Add < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemPlus , new Add < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemPlus , new Add < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemPlus , new Add < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemPlus , new Add < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemPlus , new Add < signed long , unsigned long long >);
    add_to_command_table_2( 7 , 11 , LexemPlus , new Add < signed long , float >);
    add_to_command_table_2( 7 , 12 , LexemPlus , new Add < signed long , double >);
    add_to_command_table_2( 7 , 13 , LexemPlus , new Add < signed long , long double >);
    add_to_command_table_2( 8 , 1 , LexemPlus , new Add < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemPlus , new Add < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemPlus , new Add < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemPlus , new Add < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemPlus , new Add < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemPlus , new Add < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemPlus , new Add < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemPlus , new Add < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemPlus , new Add < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemPlus , new Add < unsigned long , unsigned long long >);
    add_to_command_table_2( 8 , 11 , LexemPlus , new Add < unsigned long , float >);
    add_to_command_table_2( 8 , 12 , LexemPlus , new Add < unsigned long , double >);
    add_to_command_table_2( 8 , 13 , LexemPlus , new Add < unsigned long , long double >);
    add_to_command_table_2( 9 , 1 , LexemPlus , new Add < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemPlus , new Add < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemPlus , new Add < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemPlus , new Add < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemPlus , new Add < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemPlus , new Add < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemPlus , new Add < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemPlus , new Add < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemPlus , new Add < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemPlus , new Add < signed long long , unsigned long long >);
    add_to_command_table_2( 9 , 11 , LexemPlus , new Add < signed long long , float >);
    add_to_command_table_2( 9 , 12 , LexemPlus , new Add < signed long long , double >);
    add_to_command_table_2( 9 , 13 , LexemPlus , new Add < signed long long , long double >);
    add_to_command_table_2( 10 , 1 , LexemPlus , new Add < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemPlus , new Add < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemPlus , new Add < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemPlus , new Add < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemPlus , new Add < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemPlus , new Add < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemPlus , new Add < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemPlus , new Add < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemPlus , new Add < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemPlus , new Add < unsigned long long , unsigned long long >);
    add_to_command_table_2( 10 , 11 , LexemPlus , new Add < unsigned long long , float >);
    add_to_command_table_2( 10 , 12 , LexemPlus , new Add < unsigned long long , double >);
    add_to_command_table_2( 10 , 13 , LexemPlus , new Add < unsigned long long , long double >);
    add_to_command_table_2( 11 , 1 , LexemPlus , new Add < float , signed char >);
    add_to_command_table_2( 11 , 2 , LexemPlus , new Add < float , unsigned char >);
    add_to_command_table_2( 11 , 3 , LexemPlus , new Add < float , signed short >);
    add_to_command_table_2( 11 , 4 , LexemPlus , new Add < float , unsigned short >);
    add_to_command_table_2( 11 , 5 , LexemPlus , new Add < float , signed int >);
    add_to_command_table_2( 11 , 6 , LexemPlus , new Add < float , unsigned int >);
    add_to_command_table_2( 11 , 7 , LexemPlus , new Add < float , signed long >);
    add_to_command_table_2( 11 , 8 , LexemPlus , new Add < float , unsigned long >);
    add_to_command_table_2( 11 , 9 , LexemPlus , new Add < float , signed long long >);
    add_to_command_table_2( 11 , 10 , LexemPlus , new Add < float , unsigned long long >);
    add_to_command_table_2( 11 , 11 , LexemPlus , new Add < float , float >);
    add_to_command_table_2( 11 , 12 , LexemPlus , new Add < float , double >);
    add_to_command_table_2( 11 , 13 , LexemPlus , new Add < float , long double >);
    add_to_command_table_2( 12 , 1 , LexemPlus , new Add < double , signed char >);
    add_to_command_table_2( 12 , 2 , LexemPlus , new Add < double , unsigned char >);
    add_to_command_table_2( 12 , 3 , LexemPlus , new Add < double , signed short >);
    add_to_command_table_2( 12 , 4 , LexemPlus , new Add < double , unsigned short >);
    add_to_command_table_2( 12 , 5 , LexemPlus , new Add < double , signed int >);
    add_to_command_table_2( 12 , 6 , LexemPlus , new Add < double , unsigned int >);
    add_to_command_table_2( 12 , 7 , LexemPlus , new Add < double , signed long >);
    add_to_command_table_2( 12 , 8 , LexemPlus , new Add < double , unsigned long >);
    add_to_command_table_2( 12 , 9 , LexemPlus , new Add < double , signed long long >);
    add_to_command_table_2( 12 , 10 , LexemPlus , new Add < double , unsigned long long >);
    add_to_command_table_2( 12 , 11 , LexemPlus , new Add < double , float >);
    add_to_command_table_2( 12 , 12 , LexemPlus , new Add < double , double >);
    add_to_command_table_2( 12 , 13 , LexemPlus , new Add < double , long double >);
    add_to_command_table_2( 13 , 1 , LexemPlus , new Add < long double , signed char >);
    add_to_command_table_2( 13 , 2 , LexemPlus , new Add < long double , unsigned char >);
    add_to_command_table_2( 13 , 3 , LexemPlus , new Add < long double , signed short >);
    add_to_command_table_2( 13 , 4 , LexemPlus , new Add < long double , unsigned short >);
    add_to_command_table_2( 13 , 5 , LexemPlus , new Add < long double , signed int >);
    add_to_command_table_2( 13 , 6 , LexemPlus , new Add < long double , unsigned int >);
    add_to_command_table_2( 13 , 7 , LexemPlus , new Add < long double , signed long >);
    add_to_command_table_2( 13 , 8 , LexemPlus , new Add < long double , unsigned long >);
    add_to_command_table_2( 13 , 9 , LexemPlus , new Add < long double , signed long long >);
    add_to_command_table_2( 13 , 10 , LexemPlus , new Add < long double , unsigned long long >);
    add_to_command_table_2( 13 , 11 , LexemPlus , new Add < long double , float >);
    add_to_command_table_2( 13 , 12 , LexemPlus , new Add < long double , double >);
    add_to_command_table_2( 13 , 13 , LexemPlus , new Add < long double , long double >);
    add_to_command_table_2( 1 , 1 , LexemMinus , new Sub < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemMinus , new Sub < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemMinus , new Sub < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemMinus , new Sub < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemMinus , new Sub < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemMinus , new Sub < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemMinus , new Sub < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemMinus , new Sub < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemMinus , new Sub < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemMinus , new Sub < signed char , unsigned long long >);
    add_to_command_table_2( 1 , 11 , LexemMinus , new Sub < signed char , float >);
    add_to_command_table_2( 1 , 12 , LexemMinus , new Sub < signed char , double >);
    add_to_command_table_2( 1 , 13 , LexemMinus , new Sub < signed char , long double >);
    add_to_command_table_2( 2 , 1 , LexemMinus , new Sub < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemMinus , new Sub < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemMinus , new Sub < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemMinus , new Sub < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemMinus , new Sub < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemMinus , new Sub < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemMinus , new Sub < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemMinus , new Sub < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemMinus , new Sub < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemMinus , new Sub < unsigned char , unsigned long long >);
    add_to_command_table_2( 2 , 11 , LexemMinus , new Sub < unsigned char , float >);
    add_to_command_table_2( 2 , 12 , LexemMinus , new Sub < unsigned char , double >);
    add_to_command_table_2( 2 , 13 , LexemMinus , new Sub < unsigned char , long double >);
    add_to_command_table_2( 3 , 1 , LexemMinus , new Sub < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemMinus , new Sub < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemMinus , new Sub < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemMinus , new Sub < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemMinus , new Sub < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemMinus , new Sub < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemMinus , new Sub < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemMinus , new Sub < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemMinus , new Sub < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemMinus , new Sub < signed short , unsigned long long >);
    add_to_command_table_2( 3 , 11 , LexemMinus , new Sub < signed short , float >);
    add_to_command_table_2( 3 , 12 , LexemMinus , new Sub < signed short , double >);
    add_to_command_table_2( 3 , 13 , LexemMinus , new Sub < signed short , long double >);
    add_to_command_table_2( 4 , 1 , LexemMinus , new Sub < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemMinus , new Sub < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemMinus , new Sub < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemMinus , new Sub < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemMinus , new Sub < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemMinus , new Sub < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemMinus , new Sub < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemMinus , new Sub < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemMinus , new Sub < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemMinus , new Sub < unsigned short , unsigned long long >);
    add_to_command_table_2( 4 , 11 , LexemMinus , new Sub < unsigned short , float >);
    add_to_command_table_2( 4 , 12 , LexemMinus , new Sub < unsigned short , double >);
    add_to_command_table_2( 4 , 13 , LexemMinus , new Sub < unsigned short , long double >);
    add_to_command_table_2( 5 , 1 , LexemMinus , new Sub < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemMinus , new Sub < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemMinus , new Sub < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemMinus , new Sub < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemMinus , new Sub < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemMinus , new Sub < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemMinus , new Sub < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemMinus , new Sub < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemMinus , new Sub < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemMinus , new Sub < signed int , unsigned long long >);
    add_to_command_table_2( 5 , 11 , LexemMinus , new Sub < signed int , float >);
    add_to_command_table_2( 5 , 12 , LexemMinus , new Sub < signed int , double >);
    add_to_command_table_2( 5 , 13 , LexemMinus , new Sub < signed int , long double >);
    add_to_command_table_2( 6 , 1 , LexemMinus , new Sub < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemMinus , new Sub < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemMinus , new Sub < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemMinus , new Sub < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemMinus , new Sub < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemMinus , new Sub < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemMinus , new Sub < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemMinus , new Sub < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemMinus , new Sub < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemMinus , new Sub < unsigned int , unsigned long long >);
    add_to_command_table_2( 6 , 11 , LexemMinus , new Sub < unsigned int , float >);
    add_to_command_table_2( 6 , 12 , LexemMinus , new Sub < unsigned int , double >);
    add_to_command_table_2( 6 , 13 , LexemMinus , new Sub < unsigned int , long double >);
    add_to_command_table_2( 7 , 1 , LexemMinus , new Sub < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemMinus , new Sub < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemMinus , new Sub < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemMinus , new Sub < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemMinus , new Sub < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemMinus , new Sub < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemMinus , new Sub < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemMinus , new Sub < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemMinus , new Sub < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemMinus , new Sub < signed long , unsigned long long >);
    add_to_command_table_2( 7 , 11 , LexemMinus , new Sub < signed long , float >);
    add_to_command_table_2( 7 , 12 , LexemMinus , new Sub < signed long , double >);
    add_to_command_table_2( 7 , 13 , LexemMinus , new Sub < signed long , long double >);
    add_to_command_table_2( 8 , 1 , LexemMinus , new Sub < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemMinus , new Sub < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemMinus , new Sub < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemMinus , new Sub < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemMinus , new Sub < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemMinus , new Sub < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemMinus , new Sub < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemMinus , new Sub < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemMinus , new Sub < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemMinus , new Sub < unsigned long , unsigned long long >);
    add_to_command_table_2( 8 , 11 , LexemMinus , new Sub < unsigned long , float >);
    add_to_command_table_2( 8 , 12 , LexemMinus , new Sub < unsigned long , double >);
    add_to_command_table_2( 8 , 13 , LexemMinus , new Sub < unsigned long , long double >);
    add_to_command_table_2( 9 , 1 , LexemMinus , new Sub < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemMinus , new Sub < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemMinus , new Sub < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemMinus , new Sub < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemMinus , new Sub < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemMinus , new Sub < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemMinus , new Sub < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemMinus , new Sub < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemMinus , new Sub < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemMinus , new Sub < signed long long , unsigned long long >);
    add_to_command_table_2( 9 , 11 , LexemMinus , new Sub < signed long long , float >);
    add_to_command_table_2( 9 , 12 , LexemMinus , new Sub < signed long long , double >);
    add_to_command_table_2( 9 , 13 , LexemMinus , new Sub < signed long long , long double >);
    add_to_command_table_2( 10 , 1 , LexemMinus , new Sub < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemMinus , new Sub < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemMinus , new Sub < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemMinus , new Sub < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemMinus , new Sub < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemMinus , new Sub < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemMinus , new Sub < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemMinus , new Sub < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemMinus , new Sub < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemMinus , new Sub < unsigned long long , unsigned long long >);
    add_to_command_table_2( 10 , 11 , LexemMinus , new Sub < unsigned long long , float >);
    add_to_command_table_2( 10 , 12 , LexemMinus , new Sub < unsigned long long , double >);
    add_to_command_table_2( 10 , 13 , LexemMinus , new Sub < unsigned long long , long double >);
    add_to_command_table_2( 11 , 1 , LexemMinus , new Sub < float , signed char >);
    add_to_command_table_2( 11 , 2 , LexemMinus , new Sub < float , unsigned char >);
    add_to_command_table_2( 11 , 3 , LexemMinus , new Sub < float , signed short >);
    add_to_command_table_2( 11 , 4 , LexemMinus , new Sub < float , unsigned short >);
    add_to_command_table_2( 11 , 5 , LexemMinus , new Sub < float , signed int >);
    add_to_command_table_2( 11 , 6 , LexemMinus , new Sub < float , unsigned int >);
    add_to_command_table_2( 11 , 7 , LexemMinus , new Sub < float , signed long >);
    add_to_command_table_2( 11 , 8 , LexemMinus , new Sub < float , unsigned long >);
    add_to_command_table_2( 11 , 9 , LexemMinus , new Sub < float , signed long long >);
    add_to_command_table_2( 11 , 10 , LexemMinus , new Sub < float , unsigned long long >);
    add_to_command_table_2( 11 , 11 , LexemMinus , new Sub < float , float >);
    add_to_command_table_2( 11 , 12 , LexemMinus , new Sub < float , double >);
    add_to_command_table_2( 11 , 13 , LexemMinus , new Sub < float , long double >);
    add_to_command_table_2( 12 , 1 , LexemMinus , new Sub < double , signed char >);
    add_to_command_table_2( 12 , 2 , LexemMinus , new Sub < double , unsigned char >);
    add_to_command_table_2( 12 , 3 , LexemMinus , new Sub < double , signed short >);
    add_to_command_table_2( 12 , 4 , LexemMinus , new Sub < double , unsigned short >);
    add_to_command_table_2( 12 , 5 , LexemMinus , new Sub < double , signed int >);
    add_to_command_table_2( 12 , 6 , LexemMinus , new Sub < double , unsigned int >);
    add_to_command_table_2( 12 , 7 , LexemMinus , new Sub < double , signed long >);
    add_to_command_table_2( 12 , 8 , LexemMinus , new Sub < double , unsigned long >);
    add_to_command_table_2( 12 , 9 , LexemMinus , new Sub < double , signed long long >);
    add_to_command_table_2( 12 , 10 , LexemMinus , new Sub < double , unsigned long long >);
    add_to_command_table_2( 12 , 11 , LexemMinus , new Sub < double , float >);
    add_to_command_table_2( 12 , 12 , LexemMinus , new Sub < double , double >);
    add_to_command_table_2( 12 , 13 , LexemMinus , new Sub < double , long double >);
    add_to_command_table_2( 13 , 1 , LexemMinus , new Sub < long double , signed char >);
    add_to_command_table_2( 13 , 2 , LexemMinus , new Sub < long double , unsigned char >);
    add_to_command_table_2( 13 , 3 , LexemMinus , new Sub < long double , signed short >);
    add_to_command_table_2( 13 , 4 , LexemMinus , new Sub < long double , unsigned short >);
    add_to_command_table_2( 13 , 5 , LexemMinus , new Sub < long double , signed int >);
    add_to_command_table_2( 13 , 6 , LexemMinus , new Sub < long double , unsigned int >);
    add_to_command_table_2( 13 , 7 , LexemMinus , new Sub < long double , signed long >);
    add_to_command_table_2( 13 , 8 , LexemMinus , new Sub < long double , unsigned long >);
    add_to_command_table_2( 13 , 9 , LexemMinus , new Sub < long double , signed long long >);
    add_to_command_table_2( 13 , 10 , LexemMinus , new Sub < long double , unsigned long long >);
    add_to_command_table_2( 13 , 11 , LexemMinus , new Sub < long double , float >);
    add_to_command_table_2( 13 , 12 , LexemMinus , new Sub < long double , double >);
    add_to_command_table_2( 13 , 13 , LexemMinus , new Sub < long double , long double >);
    add_to_command_table_2( 1 , 1 , LexemAsterisk , new Mul < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemAsterisk , new Mul < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemAsterisk , new Mul < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemAsterisk , new Mul < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemAsterisk , new Mul < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemAsterisk , new Mul < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemAsterisk , new Mul < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemAsterisk , new Mul < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemAsterisk , new Mul < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemAsterisk , new Mul < signed char , unsigned long long >);
    add_to_command_table_2( 1 , 11 , LexemAsterisk , new Mul < signed char , float >);
    add_to_command_table_2( 1 , 12 , LexemAsterisk , new Mul < signed char , double >);
    add_to_command_table_2( 1 , 13 , LexemAsterisk , new Mul < signed char , long double >);
    add_to_command_table_2( 2 , 1 , LexemAsterisk , new Mul < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemAsterisk , new Mul < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemAsterisk , new Mul < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemAsterisk , new Mul < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemAsterisk , new Mul < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemAsterisk , new Mul < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemAsterisk , new Mul < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemAsterisk , new Mul < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemAsterisk , new Mul < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemAsterisk , new Mul < unsigned char , unsigned long long >);
    add_to_command_table_2( 2 , 11 , LexemAsterisk , new Mul < unsigned char , float >);
    add_to_command_table_2( 2 , 12 , LexemAsterisk , new Mul < unsigned char , double >);
    add_to_command_table_2( 2 , 13 , LexemAsterisk , new Mul < unsigned char , long double >);
    add_to_command_table_2( 3 , 1 , LexemAsterisk , new Mul < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemAsterisk , new Mul < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemAsterisk , new Mul < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemAsterisk , new Mul < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemAsterisk , new Mul < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemAsterisk , new Mul < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemAsterisk , new Mul < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemAsterisk , new Mul < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemAsterisk , new Mul < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemAsterisk , new Mul < signed short , unsigned long long >);
    add_to_command_table_2( 3 , 11 , LexemAsterisk , new Mul < signed short , float >);
    add_to_command_table_2( 3 , 12 , LexemAsterisk , new Mul < signed short , double >);
    add_to_command_table_2( 3 , 13 , LexemAsterisk , new Mul < signed short , long double >);
    add_to_command_table_2( 4 , 1 , LexemAsterisk , new Mul < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemAsterisk , new Mul < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemAsterisk , new Mul < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemAsterisk , new Mul < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemAsterisk , new Mul < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemAsterisk , new Mul < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemAsterisk , new Mul < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemAsterisk , new Mul < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemAsterisk , new Mul < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemAsterisk , new Mul < unsigned short , unsigned long long >);
    add_to_command_table_2( 4 , 11 , LexemAsterisk , new Mul < unsigned short , float >);
    add_to_command_table_2( 4 , 12 , LexemAsterisk , new Mul < unsigned short , double >);
    add_to_command_table_2( 4 , 13 , LexemAsterisk , new Mul < unsigned short , long double >);
    add_to_command_table_2( 5 , 1 , LexemAsterisk , new Mul < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemAsterisk , new Mul < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemAsterisk , new Mul < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemAsterisk , new Mul < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemAsterisk , new Mul < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemAsterisk , new Mul < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemAsterisk , new Mul < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemAsterisk , new Mul < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemAsterisk , new Mul < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemAsterisk , new Mul < signed int , unsigned long long >);
    add_to_command_table_2( 5 , 11 , LexemAsterisk , new Mul < signed int , float >);
    add_to_command_table_2( 5 , 12 , LexemAsterisk , new Mul < signed int , double >);
    add_to_command_table_2( 5 , 13 , LexemAsterisk , new Mul < signed int , long double >);
    add_to_command_table_2( 6 , 1 , LexemAsterisk , new Mul < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemAsterisk , new Mul < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemAsterisk , new Mul < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemAsterisk , new Mul < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemAsterisk , new Mul < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemAsterisk , new Mul < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemAsterisk , new Mul < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemAsterisk , new Mul < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemAsterisk , new Mul < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemAsterisk , new Mul < unsigned int , unsigned long long >);
    add_to_command_table_2( 6 , 11 , LexemAsterisk , new Mul < unsigned int , float >);
    add_to_command_table_2( 6 , 12 , LexemAsterisk , new Mul < unsigned int , double >);
    add_to_command_table_2( 6 , 13 , LexemAsterisk , new Mul < unsigned int , long double >);
    add_to_command_table_2( 7 , 1 , LexemAsterisk , new Mul < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemAsterisk , new Mul < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemAsterisk , new Mul < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemAsterisk , new Mul < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemAsterisk , new Mul < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemAsterisk , new Mul < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemAsterisk , new Mul < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemAsterisk , new Mul < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemAsterisk , new Mul < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemAsterisk , new Mul < signed long , unsigned long long >);
    add_to_command_table_2( 7 , 11 , LexemAsterisk , new Mul < signed long , float >);
    add_to_command_table_2( 7 , 12 , LexemAsterisk , new Mul < signed long , double >);
    add_to_command_table_2( 7 , 13 , LexemAsterisk , new Mul < signed long , long double >);
    add_to_command_table_2( 8 , 1 , LexemAsterisk , new Mul < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemAsterisk , new Mul < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemAsterisk , new Mul < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemAsterisk , new Mul < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemAsterisk , new Mul < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemAsterisk , new Mul < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemAsterisk , new Mul < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemAsterisk , new Mul < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemAsterisk , new Mul < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemAsterisk , new Mul < unsigned long , unsigned long long >);
    add_to_command_table_2( 8 , 11 , LexemAsterisk , new Mul < unsigned long , float >);
    add_to_command_table_2( 8 , 12 , LexemAsterisk , new Mul < unsigned long , double >);
    add_to_command_table_2( 8 , 13 , LexemAsterisk , new Mul < unsigned long , long double >);
    add_to_command_table_2( 9 , 1 , LexemAsterisk , new Mul < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemAsterisk , new Mul < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemAsterisk , new Mul < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemAsterisk , new Mul < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemAsterisk , new Mul < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemAsterisk , new Mul < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemAsterisk , new Mul < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemAsterisk , new Mul < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemAsterisk , new Mul < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemAsterisk , new Mul < signed long long , unsigned long long >);
    add_to_command_table_2( 9 , 11 , LexemAsterisk , new Mul < signed long long , float >);
    add_to_command_table_2( 9 , 12 , LexemAsterisk , new Mul < signed long long , double >);
    add_to_command_table_2( 9 , 13 , LexemAsterisk , new Mul < signed long long , long double >);
    add_to_command_table_2( 10 , 1 , LexemAsterisk , new Mul < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemAsterisk , new Mul < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemAsterisk , new Mul < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemAsterisk , new Mul < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemAsterisk , new Mul < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemAsterisk , new Mul < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemAsterisk , new Mul < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemAsterisk , new Mul < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemAsterisk , new Mul < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemAsterisk , new Mul < unsigned long long , unsigned long long >);
    add_to_command_table_2( 10 , 11 , LexemAsterisk , new Mul < unsigned long long , float >);
    add_to_command_table_2( 10 , 12 , LexemAsterisk , new Mul < unsigned long long , double >);
    add_to_command_table_2( 10 , 13 , LexemAsterisk , new Mul < unsigned long long , long double >);
    add_to_command_table_2( 11 , 1 , LexemAsterisk , new Mul < float , signed char >);
    add_to_command_table_2( 11 , 2 , LexemAsterisk , new Mul < float , unsigned char >);
    add_to_command_table_2( 11 , 3 , LexemAsterisk , new Mul < float , signed short >);
    add_to_command_table_2( 11 , 4 , LexemAsterisk , new Mul < float , unsigned short >);
    add_to_command_table_2( 11 , 5 , LexemAsterisk , new Mul < float , signed int >);
    add_to_command_table_2( 11 , 6 , LexemAsterisk , new Mul < float , unsigned int >);
    add_to_command_table_2( 11 , 7 , LexemAsterisk , new Mul < float , signed long >);
    add_to_command_table_2( 11 , 8 , LexemAsterisk , new Mul < float , unsigned long >);
    add_to_command_table_2( 11 , 9 , LexemAsterisk , new Mul < float , signed long long >);
    add_to_command_table_2( 11 , 10 , LexemAsterisk , new Mul < float , unsigned long long >);
    add_to_command_table_2( 11 , 11 , LexemAsterisk , new Mul < float , float >);
    add_to_command_table_2( 11 , 12 , LexemAsterisk , new Mul < float , double >);
    add_to_command_table_2( 11 , 13 , LexemAsterisk , new Mul < float , long double >);
    add_to_command_table_2( 12 , 1 , LexemAsterisk , new Mul < double , signed char >);
    add_to_command_table_2( 12 , 2 , LexemAsterisk , new Mul < double , unsigned char >);
    add_to_command_table_2( 12 , 3 , LexemAsterisk , new Mul < double , signed short >);
    add_to_command_table_2( 12 , 4 , LexemAsterisk , new Mul < double , unsigned short >);
    add_to_command_table_2( 12 , 5 , LexemAsterisk , new Mul < double , signed int >);
    add_to_command_table_2( 12 , 6 , LexemAsterisk , new Mul < double , unsigned int >);
    add_to_command_table_2( 12 , 7 , LexemAsterisk , new Mul < double , signed long >);
    add_to_command_table_2( 12 , 8 , LexemAsterisk , new Mul < double , unsigned long >);
    add_to_command_table_2( 12 , 9 , LexemAsterisk , new Mul < double , signed long long >);
    add_to_command_table_2( 12 , 10 , LexemAsterisk , new Mul < double , unsigned long long >);
    add_to_command_table_2( 12 , 11 , LexemAsterisk , new Mul < double , float >);
    add_to_command_table_2( 12 , 12 , LexemAsterisk , new Mul < double , double >);
    add_to_command_table_2( 12 , 13 , LexemAsterisk , new Mul < double , long double >);
    add_to_command_table_2( 13 , 1 , LexemAsterisk , new Mul < long double , signed char >);
    add_to_command_table_2( 13 , 2 , LexemAsterisk , new Mul < long double , unsigned char >);
    add_to_command_table_2( 13 , 3 , LexemAsterisk , new Mul < long double , signed short >);
    add_to_command_table_2( 13 , 4 , LexemAsterisk , new Mul < long double , unsigned short >);
    add_to_command_table_2( 13 , 5 , LexemAsterisk , new Mul < long double , signed int >);
    add_to_command_table_2( 13 , 6 , LexemAsterisk , new Mul < long double , unsigned int >);
    add_to_command_table_2( 13 , 7 , LexemAsterisk , new Mul < long double , signed long >);
    add_to_command_table_2( 13 , 8 , LexemAsterisk , new Mul < long double , unsigned long >);
    add_to_command_table_2( 13 , 9 , LexemAsterisk , new Mul < long double , signed long long >);
    add_to_command_table_2( 13 , 10 , LexemAsterisk , new Mul < long double , unsigned long long >);
    add_to_command_table_2( 13 , 11 , LexemAsterisk , new Mul < long double , float >);
    add_to_command_table_2( 13 , 12 , LexemAsterisk , new Mul < long double , double >);
    add_to_command_table_2( 13 , 13 , LexemAsterisk , new Mul < long double , long double >);
    add_to_command_table_2( 1 , 1 , LexemSlash , new Div < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemSlash , new Div < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemSlash , new Div < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemSlash , new Div < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemSlash , new Div < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemSlash , new Div < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemSlash , new Div < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemSlash , new Div < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemSlash , new Div < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemSlash , new Div < signed char , unsigned long long >);
    add_to_command_table_2( 1 , 11 , LexemSlash , new Div < signed char , float >);
    add_to_command_table_2( 1 , 12 , LexemSlash , new Div < signed char , double >);
    add_to_command_table_2( 1 , 13 , LexemSlash , new Div < signed char , long double >);
    add_to_command_table_2( 2 , 1 , LexemSlash , new Div < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemSlash , new Div < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemSlash , new Div < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemSlash , new Div < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemSlash , new Div < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemSlash , new Div < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemSlash , new Div < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemSlash , new Div < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemSlash , new Div < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemSlash , new Div < unsigned char , unsigned long long >);
    add_to_command_table_2( 2 , 11 , LexemSlash , new Div < unsigned char , float >);
    add_to_command_table_2( 2 , 12 , LexemSlash , new Div < unsigned char , double >);
    add_to_command_table_2( 2 , 13 , LexemSlash , new Div < unsigned char , long double >);
    add_to_command_table_2( 3 , 1 , LexemSlash , new Div < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemSlash , new Div < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemSlash , new Div < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemSlash , new Div < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemSlash , new Div < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemSlash , new Div < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemSlash , new Div < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemSlash , new Div < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemSlash , new Div < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemSlash , new Div < signed short , unsigned long long >);
    add_to_command_table_2( 3 , 11 , LexemSlash , new Div < signed short , float >);
    add_to_command_table_2( 3 , 12 , LexemSlash , new Div < signed short , double >);
    add_to_command_table_2( 3 , 13 , LexemSlash , new Div < signed short , long double >);
    add_to_command_table_2( 4 , 1 , LexemSlash , new Div < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemSlash , new Div < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemSlash , new Div < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemSlash , new Div < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemSlash , new Div < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemSlash , new Div < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemSlash , new Div < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemSlash , new Div < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemSlash , new Div < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemSlash , new Div < unsigned short , unsigned long long >);
    add_to_command_table_2( 4 , 11 , LexemSlash , new Div < unsigned short , float >);
    add_to_command_table_2( 4 , 12 , LexemSlash , new Div < unsigned short , double >);
    add_to_command_table_2( 4 , 13 , LexemSlash , new Div < unsigned short , long double >);
    add_to_command_table_2( 5 , 1 , LexemSlash , new Div < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemSlash , new Div < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemSlash , new Div < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemSlash , new Div < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemSlash , new Div < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemSlash , new Div < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemSlash , new Div < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemSlash , new Div < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemSlash , new Div < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemSlash , new Div < signed int , unsigned long long >);
    add_to_command_table_2( 5 , 11 , LexemSlash , new Div < signed int , float >);
    add_to_command_table_2( 5 , 12 , LexemSlash , new Div < signed int , double >);
    add_to_command_table_2( 5 , 13 , LexemSlash , new Div < signed int , long double >);
    add_to_command_table_2( 6 , 1 , LexemSlash , new Div < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemSlash , new Div < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemSlash , new Div < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemSlash , new Div < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemSlash , new Div < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemSlash , new Div < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemSlash , new Div < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemSlash , new Div < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemSlash , new Div < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemSlash , new Div < unsigned int , unsigned long long >);
    add_to_command_table_2( 6 , 11 , LexemSlash , new Div < unsigned int , float >);
    add_to_command_table_2( 6 , 12 , LexemSlash , new Div < unsigned int , double >);
    add_to_command_table_2( 6 , 13 , LexemSlash , new Div < unsigned int , long double >);
    add_to_command_table_2( 7 , 1 , LexemSlash , new Div < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemSlash , new Div < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemSlash , new Div < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemSlash , new Div < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemSlash , new Div < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemSlash , new Div < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemSlash , new Div < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemSlash , new Div < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemSlash , new Div < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemSlash , new Div < signed long , unsigned long long >);
    add_to_command_table_2( 7 , 11 , LexemSlash , new Div < signed long , float >);
    add_to_command_table_2( 7 , 12 , LexemSlash , new Div < signed long , double >);
    add_to_command_table_2( 7 , 13 , LexemSlash , new Div < signed long , long double >);
    add_to_command_table_2( 8 , 1 , LexemSlash , new Div < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemSlash , new Div < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemSlash , new Div < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemSlash , new Div < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemSlash , new Div < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemSlash , new Div < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemSlash , new Div < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemSlash , new Div < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemSlash , new Div < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemSlash , new Div < unsigned long , unsigned long long >);
    add_to_command_table_2( 8 , 11 , LexemSlash , new Div < unsigned long , float >);
    add_to_command_table_2( 8 , 12 , LexemSlash , new Div < unsigned long , double >);
    add_to_command_table_2( 8 , 13 , LexemSlash , new Div < unsigned long , long double >);
    add_to_command_table_2( 9 , 1 , LexemSlash , new Div < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemSlash , new Div < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemSlash , new Div < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemSlash , new Div < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemSlash , new Div < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemSlash , new Div < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemSlash , new Div < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemSlash , new Div < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemSlash , new Div < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemSlash , new Div < signed long long , unsigned long long >);
    add_to_command_table_2( 9 , 11 , LexemSlash , new Div < signed long long , float >);
    add_to_command_table_2( 9 , 12 , LexemSlash , new Div < signed long long , double >);
    add_to_command_table_2( 9 , 13 , LexemSlash , new Div < signed long long , long double >);
    add_to_command_table_2( 10 , 1 , LexemSlash , new Div < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemSlash , new Div < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemSlash , new Div < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemSlash , new Div < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemSlash , new Div < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemSlash , new Div < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemSlash , new Div < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemSlash , new Div < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemSlash , new Div < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemSlash , new Div < unsigned long long , unsigned long long >);
    add_to_command_table_2( 10 , 11 , LexemSlash , new Div < unsigned long long , float >);
    add_to_command_table_2( 10 , 12 , LexemSlash , new Div < unsigned long long , double >);
    add_to_command_table_2( 10 , 13 , LexemSlash , new Div < unsigned long long , long double >);
    add_to_command_table_2( 11 , 1 , LexemSlash , new Div < float , signed char >);
    add_to_command_table_2( 11 , 2 , LexemSlash , new Div < float , unsigned char >);
    add_to_command_table_2( 11 , 3 , LexemSlash , new Div < float , signed short >);
    add_to_command_table_2( 11 , 4 , LexemSlash , new Div < float , unsigned short >);
    add_to_command_table_2( 11 , 5 , LexemSlash , new Div < float , signed int >);
    add_to_command_table_2( 11 , 6 , LexemSlash , new Div < float , unsigned int >);
    add_to_command_table_2( 11 , 7 , LexemSlash , new Div < float , signed long >);
    add_to_command_table_2( 11 , 8 , LexemSlash , new Div < float , unsigned long >);
    add_to_command_table_2( 11 , 9 , LexemSlash , new Div < float , signed long long >);
    add_to_command_table_2( 11 , 10 , LexemSlash , new Div < float , unsigned long long >);
    add_to_command_table_2( 11 , 11 , LexemSlash , new Div < float , float >);
    add_to_command_table_2( 11 , 12 , LexemSlash , new Div < float , double >);
    add_to_command_table_2( 11 , 13 , LexemSlash , new Div < float , long double >);
    add_to_command_table_2( 12 , 1 , LexemSlash , new Div < double , signed char >);
    add_to_command_table_2( 12 , 2 , LexemSlash , new Div < double , unsigned char >);
    add_to_command_table_2( 12 , 3 , LexemSlash , new Div < double , signed short >);
    add_to_command_table_2( 12 , 4 , LexemSlash , new Div < double , unsigned short >);
    add_to_command_table_2( 12 , 5 , LexemSlash , new Div < double , signed int >);
    add_to_command_table_2( 12 , 6 , LexemSlash , new Div < double , unsigned int >);
    add_to_command_table_2( 12 , 7 , LexemSlash , new Div < double , signed long >);
    add_to_command_table_2( 12 , 8 , LexemSlash , new Div < double , unsigned long >);
    add_to_command_table_2( 12 , 9 , LexemSlash , new Div < double , signed long long >);
    add_to_command_table_2( 12 , 10 , LexemSlash , new Div < double , unsigned long long >);
    add_to_command_table_2( 12 , 11 , LexemSlash , new Div < double , float >);
    add_to_command_table_2( 12 , 12 , LexemSlash , new Div < double , double >);
    add_to_command_table_2( 12 , 13 , LexemSlash , new Div < double , long double >);
    add_to_command_table_2( 13 , 1 , LexemSlash , new Div < long double , signed char >);
    add_to_command_table_2( 13 , 2 , LexemSlash , new Div < long double , unsigned char >);
    add_to_command_table_2( 13 , 3 , LexemSlash , new Div < long double , signed short >);
    add_to_command_table_2( 13 , 4 , LexemSlash , new Div < long double , unsigned short >);
    add_to_command_table_2( 13 , 5 , LexemSlash , new Div < long double , signed int >);
    add_to_command_table_2( 13 , 6 , LexemSlash , new Div < long double , unsigned int >);
    add_to_command_table_2( 13 , 7 , LexemSlash , new Div < long double , signed long >);
    add_to_command_table_2( 13 , 8 , LexemSlash , new Div < long double , unsigned long >);
    add_to_command_table_2( 13 , 9 , LexemSlash , new Div < long double , signed long long >);
    add_to_command_table_2( 13 , 10 , LexemSlash , new Div < long double , unsigned long long >);
    add_to_command_table_2( 13 , 11 , LexemSlash , new Div < long double , float >);
    add_to_command_table_2( 13 , 12 , LexemSlash , new Div < long double , double >);
    add_to_command_table_2( 13 , 13 , LexemSlash , new Div < long double , long double >);

    //bool expressions code_generator_2

    add_to_command_table_2( 1 , 1 , LexemLess , new Less < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemLess , new Less < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemLess , new Less < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemLess , new Less < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemLess , new Less < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemLess , new Less < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemLess , new Less < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemLess , new Less < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemLess , new Less < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemLess , new Less < signed char , unsigned long long >);
    add_to_command_table_2( 1 , 11 , LexemLess , new Less < signed char , float >);
    add_to_command_table_2( 1 , 12 , LexemLess , new Less < signed char , double >);
    add_to_command_table_2( 1 , 13 , LexemLess , new Less < signed char , long double >);
    add_to_command_table_2( 2 , 1 , LexemLess , new Less < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemLess , new Less < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemLess , new Less < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemLess , new Less < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemLess , new Less < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemLess , new Less < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemLess , new Less < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemLess , new Less < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemLess , new Less < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemLess , new Less < unsigned char , unsigned long long >);
    add_to_command_table_2( 2 , 11 , LexemLess , new Less < unsigned char , float >);
    add_to_command_table_2( 2 , 12 , LexemLess , new Less < unsigned char , double >);
    add_to_command_table_2( 2 , 13 , LexemLess , new Less < unsigned char , long double >);
    add_to_command_table_2( 3 , 1 , LexemLess , new Less < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemLess , new Less < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemLess , new Less < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemLess , new Less < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemLess , new Less < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemLess , new Less < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemLess , new Less < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemLess , new Less < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemLess , new Less < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemLess , new Less < signed short , unsigned long long >);
    add_to_command_table_2( 3 , 11 , LexemLess , new Less < signed short , float >);
    add_to_command_table_2( 3 , 12 , LexemLess , new Less < signed short , double >);
    add_to_command_table_2( 3 , 13 , LexemLess , new Less < signed short , long double >);
    add_to_command_table_2( 4 , 1 , LexemLess , new Less < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemLess , new Less < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemLess , new Less < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemLess , new Less < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemLess , new Less < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemLess , new Less < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemLess , new Less < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemLess , new Less < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemLess , new Less < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemLess , new Less < unsigned short , unsigned long long >);
    add_to_command_table_2( 4 , 11 , LexemLess , new Less < unsigned short , float >);
    add_to_command_table_2( 4 , 12 , LexemLess , new Less < unsigned short , double >);
    add_to_command_table_2( 4 , 13 , LexemLess , new Less < unsigned short , long double >);
    add_to_command_table_2( 5 , 1 , LexemLess , new Less < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemLess , new Less < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemLess , new Less < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemLess , new Less < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemLess , new Less < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemLess , new Less < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemLess , new Less < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemLess , new Less < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemLess , new Less < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemLess , new Less < signed int , unsigned long long >);
    add_to_command_table_2( 5 , 11 , LexemLess , new Less < signed int , float >);
    add_to_command_table_2( 5 , 12 , LexemLess , new Less < signed int , double >);
    add_to_command_table_2( 5 , 13 , LexemLess , new Less < signed int , long double >);
    add_to_command_table_2( 6 , 1 , LexemLess , new Less < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemLess , new Less < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemLess , new Less < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemLess , new Less < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemLess , new Less < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemLess , new Less < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemLess , new Less < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemLess , new Less < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemLess , new Less < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemLess , new Less < unsigned int , unsigned long long >);
    add_to_command_table_2( 6 , 11 , LexemLess , new Less < unsigned int , float >);
    add_to_command_table_2( 6 , 12 , LexemLess , new Less < unsigned int , double >);
    add_to_command_table_2( 6 , 13 , LexemLess , new Less < unsigned int , long double >);
    add_to_command_table_2( 7 , 1 , LexemLess , new Less < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemLess , new Less < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemLess , new Less < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemLess , new Less < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemLess , new Less < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemLess , new Less < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemLess , new Less < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemLess , new Less < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemLess , new Less < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemLess , new Less < signed long , unsigned long long >);
    add_to_command_table_2( 7 , 11 , LexemLess , new Less < signed long , float >);
    add_to_command_table_2( 7 , 12 , LexemLess , new Less < signed long , double >);
    add_to_command_table_2( 7 , 13 , LexemLess , new Less < signed long , long double >);
    add_to_command_table_2( 8 , 1 , LexemLess , new Less < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemLess , new Less < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemLess , new Less < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemLess , new Less < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemLess , new Less < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemLess , new Less < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemLess , new Less < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemLess , new Less < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemLess , new Less < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemLess , new Less < unsigned long , unsigned long long >);
    add_to_command_table_2( 8 , 11 , LexemLess , new Less < unsigned long , float >);
    add_to_command_table_2( 8 , 12 , LexemLess , new Less < unsigned long , double >);
    add_to_command_table_2( 8 , 13 , LexemLess , new Less < unsigned long , long double >);
    add_to_command_table_2( 9 , 1 , LexemLess , new Less < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemLess , new Less < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemLess , new Less < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemLess , new Less < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemLess , new Less < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemLess , new Less < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemLess , new Less < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemLess , new Less < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemLess , new Less < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemLess , new Less < signed long long , unsigned long long >);
    add_to_command_table_2( 9 , 11 , LexemLess , new Less < signed long long , float >);
    add_to_command_table_2( 9 , 12 , LexemLess , new Less < signed long long , double >);
    add_to_command_table_2( 9 , 13 , LexemLess , new Less < signed long long , long double >);
    add_to_command_table_2( 10 , 1 , LexemLess , new Less < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemLess , new Less < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemLess , new Less < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemLess , new Less < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemLess , new Less < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemLess , new Less < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemLess , new Less < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemLess , new Less < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemLess , new Less < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemLess , new Less < unsigned long long , unsigned long long >);
    add_to_command_table_2( 10 , 11 , LexemLess , new Less < unsigned long long , float >);
    add_to_command_table_2( 10 , 12 , LexemLess , new Less < unsigned long long , double >);
    add_to_command_table_2( 10 , 13 , LexemLess , new Less < unsigned long long , long double >);
    add_to_command_table_2( 11 , 1 , LexemLess , new Less < float , signed char >);
    add_to_command_table_2( 11 , 2 , LexemLess , new Less < float , unsigned char >);
    add_to_command_table_2( 11 , 3 , LexemLess , new Less < float , signed short >);
    add_to_command_table_2( 11 , 4 , LexemLess , new Less < float , unsigned short >);
    add_to_command_table_2( 11 , 5 , LexemLess , new Less < float , signed int >);
    add_to_command_table_2( 11 , 6 , LexemLess , new Less < float , unsigned int >);
    add_to_command_table_2( 11 , 7 , LexemLess , new Less < float , signed long >);
    add_to_command_table_2( 11 , 8 , LexemLess , new Less < float , unsigned long >);
    add_to_command_table_2( 11 , 9 , LexemLess , new Less < float , signed long long >);
    add_to_command_table_2( 11 , 10 , LexemLess , new Less < float , unsigned long long >);
    add_to_command_table_2( 11 , 11 , LexemLess , new Less < float , float >);
    add_to_command_table_2( 11 , 12 , LexemLess , new Less < float , double >);
    add_to_command_table_2( 11 , 13 , LexemLess , new Less < float , long double >);
    add_to_command_table_2( 12 , 1 , LexemLess , new Less < double , signed char >);
    add_to_command_table_2( 12 , 2 , LexemLess , new Less < double , unsigned char >);
    add_to_command_table_2( 12 , 3 , LexemLess , new Less < double , signed short >);
    add_to_command_table_2( 12 , 4 , LexemLess , new Less < double , unsigned short >);
    add_to_command_table_2( 12 , 5 , LexemLess , new Less < double , signed int >);
    add_to_command_table_2( 12 , 6 , LexemLess , new Less < double , unsigned int >);
    add_to_command_table_2( 12 , 7 , LexemLess , new Less < double , signed long >);
    add_to_command_table_2( 12 , 8 , LexemLess , new Less < double , unsigned long >);
    add_to_command_table_2( 12 , 9 , LexemLess , new Less < double , signed long long >);
    add_to_command_table_2( 12 , 10 , LexemLess , new Less < double , unsigned long long >);
    add_to_command_table_2( 12 , 11 , LexemLess , new Less < double , float >);
    add_to_command_table_2( 12 , 12 , LexemLess , new Less < double , double >);
    add_to_command_table_2( 12 , 13 , LexemLess , new Less < double , long double >);
    add_to_command_table_2( 13 , 1 , LexemLess , new Less < long double , signed char >);
    add_to_command_table_2( 13 , 2 , LexemLess , new Less < long double , unsigned char >);
    add_to_command_table_2( 13 , 3 , LexemLess , new Less < long double , signed short >);
    add_to_command_table_2( 13 , 4 , LexemLess , new Less < long double , unsigned short >);
    add_to_command_table_2( 13 , 5 , LexemLess , new Less < long double , signed int >);
    add_to_command_table_2( 13 , 6 , LexemLess , new Less < long double , unsigned int >);
    add_to_command_table_2( 13 , 7 , LexemLess , new Less < long double , signed long >);
    add_to_command_table_2( 13 , 8 , LexemLess , new Less < long double , unsigned long >);
    add_to_command_table_2( 13 , 9 , LexemLess , new Less < long double , signed long long >);
    add_to_command_table_2( 13 , 10 , LexemLess , new Less < long double , unsigned long long >);
    add_to_command_table_2( 13 , 11 , LexemLess , new Less < long double , float >);
    add_to_command_table_2( 13 , 12 , LexemLess , new Less < long double , double >);
    add_to_command_table_2( 13 , 13 , LexemLess , new Less < long double , long double >);
    add_to_command_table_2( 1 , 1 , LexemGreater , new Greater < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemGreater , new Greater < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemGreater , new Greater < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemGreater , new Greater < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemGreater , new Greater < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemGreater , new Greater < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemGreater , new Greater < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemGreater , new Greater < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemGreater , new Greater < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemGreater , new Greater < signed char , unsigned long long >);
    add_to_command_table_2( 1 , 11 , LexemGreater , new Greater < signed char , float >);
    add_to_command_table_2( 1 , 12 , LexemGreater , new Greater < signed char , double >);
    add_to_command_table_2( 1 , 13 , LexemGreater , new Greater < signed char , long double >);
    add_to_command_table_2( 2 , 1 , LexemGreater , new Greater < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemGreater , new Greater < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemGreater , new Greater < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemGreater , new Greater < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemGreater , new Greater < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemGreater , new Greater < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemGreater , new Greater < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemGreater , new Greater < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemGreater , new Greater < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemGreater , new Greater < unsigned char , unsigned long long >);
    add_to_command_table_2( 2 , 11 , LexemGreater , new Greater < unsigned char , float >);
    add_to_command_table_2( 2 , 12 , LexemGreater , new Greater < unsigned char , double >);
    add_to_command_table_2( 2 , 13 , LexemGreater , new Greater < unsigned char , long double >);
    add_to_command_table_2( 3 , 1 , LexemGreater , new Greater < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemGreater , new Greater < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemGreater , new Greater < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemGreater , new Greater < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemGreater , new Greater < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemGreater , new Greater < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemGreater , new Greater < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemGreater , new Greater < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemGreater , new Greater < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemGreater , new Greater < signed short , unsigned long long >);
    add_to_command_table_2( 3 , 11 , LexemGreater , new Greater < signed short , float >);
    add_to_command_table_2( 3 , 12 , LexemGreater , new Greater < signed short , double >);
    add_to_command_table_2( 3 , 13 , LexemGreater , new Greater < signed short , long double >);
    add_to_command_table_2( 4 , 1 , LexemGreater , new Greater < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemGreater , new Greater < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemGreater , new Greater < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemGreater , new Greater < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemGreater , new Greater < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemGreater , new Greater < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemGreater , new Greater < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemGreater , new Greater < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemGreater , new Greater < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemGreater , new Greater < unsigned short , unsigned long long >);
    add_to_command_table_2( 4 , 11 , LexemGreater , new Greater < unsigned short , float >);
    add_to_command_table_2( 4 , 12 , LexemGreater , new Greater < unsigned short , double >);
    add_to_command_table_2( 4 , 13 , LexemGreater , new Greater < unsigned short , long double >);
    add_to_command_table_2( 5 , 1 , LexemGreater , new Greater < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemGreater , new Greater < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemGreater , new Greater < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemGreater , new Greater < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemGreater , new Greater < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemGreater , new Greater < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemGreater , new Greater < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemGreater , new Greater < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemGreater , new Greater < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemGreater , new Greater < signed int , unsigned long long >);
    add_to_command_table_2( 5 , 11 , LexemGreater , new Greater < signed int , float >);
    add_to_command_table_2( 5 , 12 , LexemGreater , new Greater < signed int , double >);
    add_to_command_table_2( 5 , 13 , LexemGreater , new Greater < signed int , long double >);
    add_to_command_table_2( 6 , 1 , LexemGreater , new Greater < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemGreater , new Greater < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemGreater , new Greater < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemGreater , new Greater < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemGreater , new Greater < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemGreater , new Greater < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemGreater , new Greater < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemGreater , new Greater < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemGreater , new Greater < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemGreater , new Greater < unsigned int , unsigned long long >);
    add_to_command_table_2( 6 , 11 , LexemGreater , new Greater < unsigned int , float >);
    add_to_command_table_2( 6 , 12 , LexemGreater , new Greater < unsigned int , double >);
    add_to_command_table_2( 6 , 13 , LexemGreater , new Greater < unsigned int , long double >);
    add_to_command_table_2( 7 , 1 , LexemGreater , new Greater < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemGreater , new Greater < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemGreater , new Greater < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemGreater , new Greater < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemGreater , new Greater < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemGreater , new Greater < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemGreater , new Greater < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemGreater , new Greater < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemGreater , new Greater < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemGreater , new Greater < signed long , unsigned long long >);
    add_to_command_table_2( 7 , 11 , LexemGreater , new Greater < signed long , float >);
    add_to_command_table_2( 7 , 12 , LexemGreater , new Greater < signed long , double >);
    add_to_command_table_2( 7 , 13 , LexemGreater , new Greater < signed long , long double >);
    add_to_command_table_2( 8 , 1 , LexemGreater , new Greater < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemGreater , new Greater < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemGreater , new Greater < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemGreater , new Greater < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemGreater , new Greater < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemGreater , new Greater < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemGreater , new Greater < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemGreater , new Greater < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemGreater , new Greater < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemGreater , new Greater < unsigned long , unsigned long long >);
    add_to_command_table_2( 8 , 11 , LexemGreater , new Greater < unsigned long , float >);
    add_to_command_table_2( 8 , 12 , LexemGreater , new Greater < unsigned long , double >);
    add_to_command_table_2( 8 , 13 , LexemGreater , new Greater < unsigned long , long double >);
    add_to_command_table_2( 9 , 1 , LexemGreater , new Greater < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemGreater , new Greater < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemGreater , new Greater < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemGreater , new Greater < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemGreater , new Greater < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemGreater , new Greater < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemGreater , new Greater < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemGreater , new Greater < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemGreater , new Greater < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemGreater , new Greater < signed long long , unsigned long long >);
    add_to_command_table_2( 9 , 11 , LexemGreater , new Greater < signed long long , float >);
    add_to_command_table_2( 9 , 12 , LexemGreater , new Greater < signed long long , double >);
    add_to_command_table_2( 9 , 13 , LexemGreater , new Greater < signed long long , long double >);
    add_to_command_table_2( 10 , 1 , LexemGreater , new Greater < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemGreater , new Greater < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemGreater , new Greater < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemGreater , new Greater < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemGreater , new Greater < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemGreater , new Greater < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemGreater , new Greater < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemGreater , new Greater < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemGreater , new Greater < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemGreater , new Greater < unsigned long long , unsigned long long >);
    add_to_command_table_2( 10 , 11 , LexemGreater , new Greater < unsigned long long , float >);
    add_to_command_table_2( 10 , 12 , LexemGreater , new Greater < unsigned long long , double >);
    add_to_command_table_2( 10 , 13 , LexemGreater , new Greater < unsigned long long , long double >);
    add_to_command_table_2( 11 , 1 , LexemGreater , new Greater < float , signed char >);
    add_to_command_table_2( 11 , 2 , LexemGreater , new Greater < float , unsigned char >);
    add_to_command_table_2( 11 , 3 , LexemGreater , new Greater < float , signed short >);
    add_to_command_table_2( 11 , 4 , LexemGreater , new Greater < float , unsigned short >);
    add_to_command_table_2( 11 , 5 , LexemGreater , new Greater < float , signed int >);
    add_to_command_table_2( 11 , 6 , LexemGreater , new Greater < float , unsigned int >);
    add_to_command_table_2( 11 , 7 , LexemGreater , new Greater < float , signed long >);
    add_to_command_table_2( 11 , 8 , LexemGreater , new Greater < float , unsigned long >);
    add_to_command_table_2( 11 , 9 , LexemGreater , new Greater < float , signed long long >);
    add_to_command_table_2( 11 , 10 , LexemGreater , new Greater < float , unsigned long long >);
    add_to_command_table_2( 11 , 11 , LexemGreater , new Greater < float , float >);
    add_to_command_table_2( 11 , 12 , LexemGreater , new Greater < float , double >);
    add_to_command_table_2( 11 , 13 , LexemGreater , new Greater < float , long double >);
    add_to_command_table_2( 12 , 1 , LexemGreater , new Greater < double , signed char >);
    add_to_command_table_2( 12 , 2 , LexemGreater , new Greater < double , unsigned char >);
    add_to_command_table_2( 12 , 3 , LexemGreater , new Greater < double , signed short >);
    add_to_command_table_2( 12 , 4 , LexemGreater , new Greater < double , unsigned short >);
    add_to_command_table_2( 12 , 5 , LexemGreater , new Greater < double , signed int >);
    add_to_command_table_2( 12 , 6 , LexemGreater , new Greater < double , unsigned int >);
    add_to_command_table_2( 12 , 7 , LexemGreater , new Greater < double , signed long >);
    add_to_command_table_2( 12 , 8 , LexemGreater , new Greater < double , unsigned long >);
    add_to_command_table_2( 12 , 9 , LexemGreater , new Greater < double , signed long long >);
    add_to_command_table_2( 12 , 10 , LexemGreater , new Greater < double , unsigned long long >);
    add_to_command_table_2( 12 , 11 , LexemGreater , new Greater < double , float >);
    add_to_command_table_2( 12 , 12 , LexemGreater , new Greater < double , double >);
    add_to_command_table_2( 12 , 13 , LexemGreater , new Greater < double , long double >);
    add_to_command_table_2( 13 , 1 , LexemGreater , new Greater < long double , signed char >);
    add_to_command_table_2( 13 , 2 , LexemGreater , new Greater < long double , unsigned char >);
    add_to_command_table_2( 13 , 3 , LexemGreater , new Greater < long double , signed short >);
    add_to_command_table_2( 13 , 4 , LexemGreater , new Greater < long double , unsigned short >);
    add_to_command_table_2( 13 , 5 , LexemGreater , new Greater < long double , signed int >);
    add_to_command_table_2( 13 , 6 , LexemGreater , new Greater < long double , unsigned int >);
    add_to_command_table_2( 13 , 7 , LexemGreater , new Greater < long double , signed long >);
    add_to_command_table_2( 13 , 8 , LexemGreater , new Greater < long double , unsigned long >);
    add_to_command_table_2( 13 , 9 , LexemGreater , new Greater < long double , signed long long >);
    add_to_command_table_2( 13 , 10 , LexemGreater , new Greater < long double , unsigned long long >);
    add_to_command_table_2( 13 , 11 , LexemGreater , new Greater < long double , float >);
    add_to_command_table_2( 13 , 12 , LexemGreater , new Greater < long double , double >);
    add_to_command_table_2( 13 , 13 , LexemGreater , new Greater < long double , long double >);

    //bool not for decimal code_generator_3

    add_to_command_table_2( 1 , 1 , LexemLessEqual , new LessEqual < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemLessEqual , new LessEqual < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemLessEqual , new LessEqual < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemLessEqual , new LessEqual < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemLessEqual , new LessEqual < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemLessEqual , new LessEqual < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemLessEqual , new LessEqual < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemLessEqual , new LessEqual < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemLessEqual , new LessEqual < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemLessEqual , new LessEqual < signed char , unsigned long long >);
    add_to_command_table_2( 2 , 1 , LexemLessEqual , new LessEqual < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemLessEqual , new LessEqual < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemLessEqual , new LessEqual < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemLessEqual , new LessEqual < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemLessEqual , new LessEqual < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemLessEqual , new LessEqual < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemLessEqual , new LessEqual < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemLessEqual , new LessEqual < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemLessEqual , new LessEqual < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemLessEqual , new LessEqual < unsigned char , unsigned long long >);
    add_to_command_table_2( 3 , 1 , LexemLessEqual , new LessEqual < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemLessEqual , new LessEqual < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemLessEqual , new LessEqual < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemLessEqual , new LessEqual < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemLessEqual , new LessEqual < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemLessEqual , new LessEqual < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemLessEqual , new LessEqual < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemLessEqual , new LessEqual < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemLessEqual , new LessEqual < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemLessEqual , new LessEqual < signed short , unsigned long long >);
    add_to_command_table_2( 4 , 1 , LexemLessEqual , new LessEqual < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemLessEqual , new LessEqual < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemLessEqual , new LessEqual < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemLessEqual , new LessEqual < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemLessEqual , new LessEqual < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemLessEqual , new LessEqual < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemLessEqual , new LessEqual < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemLessEqual , new LessEqual < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemLessEqual , new LessEqual < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemLessEqual , new LessEqual < unsigned short , unsigned long long >);
    add_to_command_table_2( 5 , 1 , LexemLessEqual , new LessEqual < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemLessEqual , new LessEqual < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemLessEqual , new LessEqual < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemLessEqual , new LessEqual < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemLessEqual , new LessEqual < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemLessEqual , new LessEqual < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemLessEqual , new LessEqual < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemLessEqual , new LessEqual < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemLessEqual , new LessEqual < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemLessEqual , new LessEqual < signed int , unsigned long long >);
    add_to_command_table_2( 6 , 1 , LexemLessEqual , new LessEqual < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemLessEqual , new LessEqual < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemLessEqual , new LessEqual < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemLessEqual , new LessEqual < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemLessEqual , new LessEqual < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemLessEqual , new LessEqual < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemLessEqual , new LessEqual < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemLessEqual , new LessEqual < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemLessEqual , new LessEqual < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemLessEqual , new LessEqual < unsigned int , unsigned long long >);
    add_to_command_table_2( 7 , 1 , LexemLessEqual , new LessEqual < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemLessEqual , new LessEqual < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemLessEqual , new LessEqual < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemLessEqual , new LessEqual < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemLessEqual , new LessEqual < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemLessEqual , new LessEqual < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemLessEqual , new LessEqual < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemLessEqual , new LessEqual < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemLessEqual , new LessEqual < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemLessEqual , new LessEqual < signed long , unsigned long long >);
    add_to_command_table_2( 8 , 1 , LexemLessEqual , new LessEqual < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemLessEqual , new LessEqual < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemLessEqual , new LessEqual < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemLessEqual , new LessEqual < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemLessEqual , new LessEqual < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemLessEqual , new LessEqual < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemLessEqual , new LessEqual < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemLessEqual , new LessEqual < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemLessEqual , new LessEqual < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemLessEqual , new LessEqual < unsigned long , unsigned long long >);
    add_to_command_table_2( 9 , 1 , LexemLessEqual , new LessEqual < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemLessEqual , new LessEqual < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemLessEqual , new LessEqual < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemLessEqual , new LessEqual < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemLessEqual , new LessEqual < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemLessEqual , new LessEqual < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemLessEqual , new LessEqual < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemLessEqual , new LessEqual < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemLessEqual , new LessEqual < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemLessEqual , new LessEqual < signed long long , unsigned long long >);
    add_to_command_table_2( 10 , 1 , LexemLessEqual , new LessEqual < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemLessEqual , new LessEqual < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemLessEqual , new LessEqual < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemLessEqual , new LessEqual < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemLessEqual , new LessEqual < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemLessEqual , new LessEqual < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemLessEqual , new LessEqual < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemLessEqual , new LessEqual < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemLessEqual , new LessEqual < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemLessEqual , new LessEqual < unsigned long long , unsigned long long >);
    add_to_command_table_2( 1 , 1 , LexemGreaterEqual , new GreaterEqual < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemGreaterEqual , new GreaterEqual < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemGreaterEqual , new GreaterEqual < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemGreaterEqual , new GreaterEqual < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemGreaterEqual , new GreaterEqual < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemGreaterEqual , new GreaterEqual < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemGreaterEqual , new GreaterEqual < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemGreaterEqual , new GreaterEqual < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemGreaterEqual , new GreaterEqual < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemGreaterEqual , new GreaterEqual < signed char , unsigned long long >);
    add_to_command_table_2( 2 , 1 , LexemGreaterEqual , new GreaterEqual < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemGreaterEqual , new GreaterEqual < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemGreaterEqual , new GreaterEqual < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemGreaterEqual , new GreaterEqual < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemGreaterEqual , new GreaterEqual < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemGreaterEqual , new GreaterEqual < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemGreaterEqual , new GreaterEqual < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemGreaterEqual , new GreaterEqual < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemGreaterEqual , new GreaterEqual < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemGreaterEqual , new GreaterEqual < unsigned char , unsigned long long >);
    add_to_command_table_2( 3 , 1 , LexemGreaterEqual , new GreaterEqual < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemGreaterEqual , new GreaterEqual < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemGreaterEqual , new GreaterEqual < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemGreaterEqual , new GreaterEqual < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemGreaterEqual , new GreaterEqual < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemGreaterEqual , new GreaterEqual < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemGreaterEqual , new GreaterEqual < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemGreaterEqual , new GreaterEqual < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemGreaterEqual , new GreaterEqual < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemGreaterEqual , new GreaterEqual < signed short , unsigned long long >);
    add_to_command_table_2( 4 , 1 , LexemGreaterEqual , new GreaterEqual < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemGreaterEqual , new GreaterEqual < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemGreaterEqual , new GreaterEqual < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemGreaterEqual , new GreaterEqual < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemGreaterEqual , new GreaterEqual < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemGreaterEqual , new GreaterEqual < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemGreaterEqual , new GreaterEqual < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemGreaterEqual , new GreaterEqual < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemGreaterEqual , new GreaterEqual < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemGreaterEqual , new GreaterEqual < unsigned short , unsigned long long >);
    add_to_command_table_2( 5 , 1 , LexemGreaterEqual , new GreaterEqual < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemGreaterEqual , new GreaterEqual < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemGreaterEqual , new GreaterEqual < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemGreaterEqual , new GreaterEqual < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemGreaterEqual , new GreaterEqual < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemGreaterEqual , new GreaterEqual < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemGreaterEqual , new GreaterEqual < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemGreaterEqual , new GreaterEqual < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemGreaterEqual , new GreaterEqual < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemGreaterEqual , new GreaterEqual < signed int , unsigned long long >);
    add_to_command_table_2( 6 , 1 , LexemGreaterEqual , new GreaterEqual < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemGreaterEqual , new GreaterEqual < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemGreaterEqual , new GreaterEqual < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemGreaterEqual , new GreaterEqual < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemGreaterEqual , new GreaterEqual < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemGreaterEqual , new GreaterEqual < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemGreaterEqual , new GreaterEqual < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemGreaterEqual , new GreaterEqual < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemGreaterEqual , new GreaterEqual < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemGreaterEqual , new GreaterEqual < unsigned int , unsigned long long >);
    add_to_command_table_2( 7 , 1 , LexemGreaterEqual , new GreaterEqual < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemGreaterEqual , new GreaterEqual < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemGreaterEqual , new GreaterEqual < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemGreaterEqual , new GreaterEqual < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemGreaterEqual , new GreaterEqual < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemGreaterEqual , new GreaterEqual < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemGreaterEqual , new GreaterEqual < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemGreaterEqual , new GreaterEqual < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemGreaterEqual , new GreaterEqual < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemGreaterEqual , new GreaterEqual < signed long , unsigned long long >);
    add_to_command_table_2( 8 , 1 , LexemGreaterEqual , new GreaterEqual < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemGreaterEqual , new GreaterEqual < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemGreaterEqual , new GreaterEqual < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemGreaterEqual , new GreaterEqual < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemGreaterEqual , new GreaterEqual < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemGreaterEqual , new GreaterEqual < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemGreaterEqual , new GreaterEqual < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemGreaterEqual , new GreaterEqual < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemGreaterEqual , new GreaterEqual < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemGreaterEqual , new GreaterEqual < unsigned long , unsigned long long >);
    add_to_command_table_2( 9 , 1 , LexemGreaterEqual , new GreaterEqual < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemGreaterEqual , new GreaterEqual < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemGreaterEqual , new GreaterEqual < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemGreaterEqual , new GreaterEqual < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemGreaterEqual , new GreaterEqual < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemGreaterEqual , new GreaterEqual < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemGreaterEqual , new GreaterEqual < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemGreaterEqual , new GreaterEqual < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemGreaterEqual , new GreaterEqual < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemGreaterEqual , new GreaterEqual < signed long long , unsigned long long >);
    add_to_command_table_2( 10 , 1 , LexemGreaterEqual , new GreaterEqual < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemGreaterEqual , new GreaterEqual < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemGreaterEqual , new GreaterEqual < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemGreaterEqual , new GreaterEqual < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemGreaterEqual , new GreaterEqual < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemGreaterEqual , new GreaterEqual < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemGreaterEqual , new GreaterEqual < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemGreaterEqual , new GreaterEqual < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemGreaterEqual , new GreaterEqual < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemGreaterEqual , new GreaterEqual < unsigned long long , unsigned long long >);
    add_to_command_table_2( 1 , 1 , LexemEqual , new Equal < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemEqual , new Equal < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemEqual , new Equal < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemEqual , new Equal < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemEqual , new Equal < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemEqual , new Equal < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemEqual , new Equal < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemEqual , new Equal < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemEqual , new Equal < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemEqual , new Equal < signed char , unsigned long long >);
    add_to_command_table_2( 2 , 1 , LexemEqual , new Equal < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemEqual , new Equal < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemEqual , new Equal < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemEqual , new Equal < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemEqual , new Equal < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemEqual , new Equal < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemEqual , new Equal < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemEqual , new Equal < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemEqual , new Equal < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemEqual , new Equal < unsigned char , unsigned long long >);
    add_to_command_table_2( 3 , 1 , LexemEqual , new Equal < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemEqual , new Equal < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemEqual , new Equal < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemEqual , new Equal < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemEqual , new Equal < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemEqual , new Equal < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemEqual , new Equal < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemEqual , new Equal < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemEqual , new Equal < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemEqual , new Equal < signed short , unsigned long long >);
    add_to_command_table_2( 4 , 1 , LexemEqual , new Equal < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemEqual , new Equal < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemEqual , new Equal < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemEqual , new Equal < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemEqual , new Equal < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemEqual , new Equal < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemEqual , new Equal < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemEqual , new Equal < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemEqual , new Equal < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemEqual , new Equal < unsigned short , unsigned long long >);
    add_to_command_table_2( 5 , 1 , LexemEqual , new Equal < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemEqual , new Equal < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemEqual , new Equal < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemEqual , new Equal < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemEqual , new Equal < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemEqual , new Equal < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemEqual , new Equal < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemEqual , new Equal < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemEqual , new Equal < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemEqual , new Equal < signed int , unsigned long long >);
    add_to_command_table_2( 6 , 1 , LexemEqual , new Equal < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemEqual , new Equal < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemEqual , new Equal < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemEqual , new Equal < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemEqual , new Equal < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemEqual , new Equal < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemEqual , new Equal < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemEqual , new Equal < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemEqual , new Equal < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemEqual , new Equal < unsigned int , unsigned long long >);
    add_to_command_table_2( 7 , 1 , LexemEqual , new Equal < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemEqual , new Equal < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemEqual , new Equal < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemEqual , new Equal < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemEqual , new Equal < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemEqual , new Equal < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemEqual , new Equal < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemEqual , new Equal < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemEqual , new Equal < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemEqual , new Equal < signed long , unsigned long long >);
    add_to_command_table_2( 8 , 1 , LexemEqual , new Equal < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemEqual , new Equal < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemEqual , new Equal < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemEqual , new Equal < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemEqual , new Equal < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemEqual , new Equal < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemEqual , new Equal < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemEqual , new Equal < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemEqual , new Equal < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemEqual , new Equal < unsigned long , unsigned long long >);
    add_to_command_table_2( 9 , 1 , LexemEqual , new Equal < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemEqual , new Equal < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemEqual , new Equal < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemEqual , new Equal < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemEqual , new Equal < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemEqual , new Equal < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemEqual , new Equal < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemEqual , new Equal < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemEqual , new Equal < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemEqual , new Equal < signed long long , unsigned long long >);
    add_to_command_table_2( 10 , 1 , LexemEqual , new Equal < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemEqual , new Equal < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemEqual , new Equal < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemEqual , new Equal < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemEqual , new Equal < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemEqual , new Equal < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemEqual , new Equal < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemEqual , new Equal < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemEqual , new Equal < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemEqual , new Equal < unsigned long long , unsigned long long >);
    add_to_command_table_2( 1 , 1 , LexemNotEqual , new NotEqual < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemNotEqual , new NotEqual < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemNotEqual , new NotEqual < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemNotEqual , new NotEqual < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemNotEqual , new NotEqual < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemNotEqual , new NotEqual < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemNotEqual , new NotEqual < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemNotEqual , new NotEqual < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemNotEqual , new NotEqual < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemNotEqual , new NotEqual < signed char , unsigned long long >);
    add_to_command_table_2( 2 , 1 , LexemNotEqual , new NotEqual < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemNotEqual , new NotEqual < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemNotEqual , new NotEqual < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemNotEqual , new NotEqual < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemNotEqual , new NotEqual < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemNotEqual , new NotEqual < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemNotEqual , new NotEqual < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemNotEqual , new NotEqual < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemNotEqual , new NotEqual < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemNotEqual , new NotEqual < unsigned char , unsigned long long >);
    add_to_command_table_2( 3 , 1 , LexemNotEqual , new NotEqual < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemNotEqual , new NotEqual < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemNotEqual , new NotEqual < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemNotEqual , new NotEqual < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemNotEqual , new NotEqual < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemNotEqual , new NotEqual < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemNotEqual , new NotEqual < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemNotEqual , new NotEqual < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemNotEqual , new NotEqual < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemNotEqual , new NotEqual < signed short , unsigned long long >);
    add_to_command_table_2( 4 , 1 , LexemNotEqual , new NotEqual < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemNotEqual , new NotEqual < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemNotEqual , new NotEqual < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemNotEqual , new NotEqual < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemNotEqual , new NotEqual < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemNotEqual , new NotEqual < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemNotEqual , new NotEqual < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemNotEqual , new NotEqual < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemNotEqual , new NotEqual < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemNotEqual , new NotEqual < unsigned short , unsigned long long >);
    add_to_command_table_2( 5 , 1 , LexemNotEqual , new NotEqual < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemNotEqual , new NotEqual < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemNotEqual , new NotEqual < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemNotEqual , new NotEqual < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemNotEqual , new NotEqual < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemNotEqual , new NotEqual < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemNotEqual , new NotEqual < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemNotEqual , new NotEqual < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemNotEqual , new NotEqual < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemNotEqual , new NotEqual < signed int , unsigned long long >);
    add_to_command_table_2( 6 , 1 , LexemNotEqual , new NotEqual < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemNotEqual , new NotEqual < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemNotEqual , new NotEqual < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemNotEqual , new NotEqual < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemNotEqual , new NotEqual < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemNotEqual , new NotEqual < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemNotEqual , new NotEqual < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemNotEqual , new NotEqual < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemNotEqual , new NotEqual < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemNotEqual , new NotEqual < unsigned int , unsigned long long >);
    add_to_command_table_2( 7 , 1 , LexemNotEqual , new NotEqual < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemNotEqual , new NotEqual < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemNotEqual , new NotEqual < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemNotEqual , new NotEqual < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemNotEqual , new NotEqual < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemNotEqual , new NotEqual < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemNotEqual , new NotEqual < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemNotEqual , new NotEqual < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemNotEqual , new NotEqual < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemNotEqual , new NotEqual < signed long , unsigned long long >);
    add_to_command_table_2( 8 , 1 , LexemNotEqual , new NotEqual < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemNotEqual , new NotEqual < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemNotEqual , new NotEqual < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemNotEqual , new NotEqual < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemNotEqual , new NotEqual < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemNotEqual , new NotEqual < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemNotEqual , new NotEqual < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemNotEqual , new NotEqual < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemNotEqual , new NotEqual < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemNotEqual , new NotEqual < unsigned long , unsigned long long >);
    add_to_command_table_2( 9 , 1 , LexemNotEqual , new NotEqual < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemNotEqual , new NotEqual < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemNotEqual , new NotEqual < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemNotEqual , new NotEqual < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemNotEqual , new NotEqual < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemNotEqual , new NotEqual < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemNotEqual , new NotEqual < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemNotEqual , new NotEqual < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemNotEqual , new NotEqual < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemNotEqual , new NotEqual < signed long long , unsigned long long >);
    add_to_command_table_2( 10 , 1 , LexemNotEqual , new NotEqual < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemNotEqual , new NotEqual < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemNotEqual , new NotEqual < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemNotEqual , new NotEqual < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemNotEqual , new NotEqual < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemNotEqual , new NotEqual < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemNotEqual , new NotEqual < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemNotEqual , new NotEqual < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemNotEqual , new NotEqual < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemNotEqual , new NotEqual < unsigned long long , unsigned long long >);
    add_to_command_table_2( 1 , 1 , LexemDoubleAmpersand , new LogicalAnd < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemDoubleAmpersand , new LogicalAnd < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemDoubleAmpersand , new LogicalAnd < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemDoubleAmpersand , new LogicalAnd < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemDoubleAmpersand , new LogicalAnd < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemDoubleAmpersand , new LogicalAnd < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemDoubleAmpersand , new LogicalAnd < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemDoubleAmpersand , new LogicalAnd < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemDoubleAmpersand , new LogicalAnd < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemDoubleAmpersand , new LogicalAnd < signed char , unsigned long long >);
    add_to_command_table_2( 2 , 1 , LexemDoubleAmpersand , new LogicalAnd < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemDoubleAmpersand , new LogicalAnd < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemDoubleAmpersand , new LogicalAnd < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemDoubleAmpersand , new LogicalAnd < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemDoubleAmpersand , new LogicalAnd < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemDoubleAmpersand , new LogicalAnd < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemDoubleAmpersand , new LogicalAnd < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemDoubleAmpersand , new LogicalAnd < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemDoubleAmpersand , new LogicalAnd < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemDoubleAmpersand , new LogicalAnd < unsigned char , unsigned long long >);
    add_to_command_table_2( 3 , 1 , LexemDoubleAmpersand , new LogicalAnd < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemDoubleAmpersand , new LogicalAnd < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemDoubleAmpersand , new LogicalAnd < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemDoubleAmpersand , new LogicalAnd < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemDoubleAmpersand , new LogicalAnd < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemDoubleAmpersand , new LogicalAnd < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemDoubleAmpersand , new LogicalAnd < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemDoubleAmpersand , new LogicalAnd < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemDoubleAmpersand , new LogicalAnd < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemDoubleAmpersand , new LogicalAnd < signed short , unsigned long long >);
    add_to_command_table_2( 4 , 1 , LexemDoubleAmpersand , new LogicalAnd < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemDoubleAmpersand , new LogicalAnd < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemDoubleAmpersand , new LogicalAnd < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemDoubleAmpersand , new LogicalAnd < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemDoubleAmpersand , new LogicalAnd < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemDoubleAmpersand , new LogicalAnd < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemDoubleAmpersand , new LogicalAnd < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemDoubleAmpersand , new LogicalAnd < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemDoubleAmpersand , new LogicalAnd < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemDoubleAmpersand , new LogicalAnd < unsigned short , unsigned long long >);
    add_to_command_table_2( 5 , 1 , LexemDoubleAmpersand , new LogicalAnd < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemDoubleAmpersand , new LogicalAnd < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemDoubleAmpersand , new LogicalAnd < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemDoubleAmpersand , new LogicalAnd < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemDoubleAmpersand , new LogicalAnd < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemDoubleAmpersand , new LogicalAnd < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemDoubleAmpersand , new LogicalAnd < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemDoubleAmpersand , new LogicalAnd < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemDoubleAmpersand , new LogicalAnd < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemDoubleAmpersand , new LogicalAnd < signed int , unsigned long long >);
    add_to_command_table_2( 6 , 1 , LexemDoubleAmpersand , new LogicalAnd < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemDoubleAmpersand , new LogicalAnd < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemDoubleAmpersand , new LogicalAnd < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemDoubleAmpersand , new LogicalAnd < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemDoubleAmpersand , new LogicalAnd < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemDoubleAmpersand , new LogicalAnd < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemDoubleAmpersand , new LogicalAnd < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemDoubleAmpersand , new LogicalAnd < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemDoubleAmpersand , new LogicalAnd < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemDoubleAmpersand , new LogicalAnd < unsigned int , unsigned long long >);
    add_to_command_table_2( 7 , 1 , LexemDoubleAmpersand , new LogicalAnd < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemDoubleAmpersand , new LogicalAnd < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemDoubleAmpersand , new LogicalAnd < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemDoubleAmpersand , new LogicalAnd < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemDoubleAmpersand , new LogicalAnd < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemDoubleAmpersand , new LogicalAnd < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemDoubleAmpersand , new LogicalAnd < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemDoubleAmpersand , new LogicalAnd < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemDoubleAmpersand , new LogicalAnd < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemDoubleAmpersand , new LogicalAnd < signed long , unsigned long long >);
    add_to_command_table_2( 8 , 1 , LexemDoubleAmpersand , new LogicalAnd < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemDoubleAmpersand , new LogicalAnd < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemDoubleAmpersand , new LogicalAnd < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemDoubleAmpersand , new LogicalAnd < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemDoubleAmpersand , new LogicalAnd < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemDoubleAmpersand , new LogicalAnd < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemDoubleAmpersand , new LogicalAnd < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemDoubleAmpersand , new LogicalAnd < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemDoubleAmpersand , new LogicalAnd < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemDoubleAmpersand , new LogicalAnd < unsigned long , unsigned long long >);
    add_to_command_table_2( 9 , 1 , LexemDoubleAmpersand , new LogicalAnd < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemDoubleAmpersand , new LogicalAnd < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemDoubleAmpersand , new LogicalAnd < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemDoubleAmpersand , new LogicalAnd < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemDoubleAmpersand , new LogicalAnd < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemDoubleAmpersand , new LogicalAnd < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemDoubleAmpersand , new LogicalAnd < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemDoubleAmpersand , new LogicalAnd < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemDoubleAmpersand , new LogicalAnd < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemDoubleAmpersand , new LogicalAnd < signed long long , unsigned long long >);
    add_to_command_table_2( 10 , 1 , LexemDoubleAmpersand , new LogicalAnd < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemDoubleAmpersand , new LogicalAnd < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemDoubleAmpersand , new LogicalAnd < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemDoubleAmpersand , new LogicalAnd < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemDoubleAmpersand , new LogicalAnd < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemDoubleAmpersand , new LogicalAnd < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemDoubleAmpersand , new LogicalAnd < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemDoubleAmpersand , new LogicalAnd < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemDoubleAmpersand , new LogicalAnd < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemDoubleAmpersand , new LogicalAnd < unsigned long long , unsigned long long >);
    add_to_command_table_2( 1 , 1 , LexemDoubleStraightSlash , new LogicalOr < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemDoubleStraightSlash , new LogicalOr < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemDoubleStraightSlash , new LogicalOr < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemDoubleStraightSlash , new LogicalOr < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemDoubleStraightSlash , new LogicalOr < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemDoubleStraightSlash , new LogicalOr < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemDoubleStraightSlash , new LogicalOr < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemDoubleStraightSlash , new LogicalOr < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemDoubleStraightSlash , new LogicalOr < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemDoubleStraightSlash , new LogicalOr < signed char , unsigned long long >);
    add_to_command_table_2( 2 , 1 , LexemDoubleStraightSlash , new LogicalOr < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemDoubleStraightSlash , new LogicalOr < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemDoubleStraightSlash , new LogicalOr < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemDoubleStraightSlash , new LogicalOr < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemDoubleStraightSlash , new LogicalOr < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemDoubleStraightSlash , new LogicalOr < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemDoubleStraightSlash , new LogicalOr < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemDoubleStraightSlash , new LogicalOr < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemDoubleStraightSlash , new LogicalOr < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemDoubleStraightSlash , new LogicalOr < unsigned char , unsigned long long >);
    add_to_command_table_2( 3 , 1 , LexemDoubleStraightSlash , new LogicalOr < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemDoubleStraightSlash , new LogicalOr < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemDoubleStraightSlash , new LogicalOr < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemDoubleStraightSlash , new LogicalOr < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemDoubleStraightSlash , new LogicalOr < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemDoubleStraightSlash , new LogicalOr < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemDoubleStraightSlash , new LogicalOr < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemDoubleStraightSlash , new LogicalOr < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemDoubleStraightSlash , new LogicalOr < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemDoubleStraightSlash , new LogicalOr < signed short , unsigned long long >);
    add_to_command_table_2( 4 , 1 , LexemDoubleStraightSlash , new LogicalOr < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemDoubleStraightSlash , new LogicalOr < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemDoubleStraightSlash , new LogicalOr < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemDoubleStraightSlash , new LogicalOr < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemDoubleStraightSlash , new LogicalOr < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemDoubleStraightSlash , new LogicalOr < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemDoubleStraightSlash , new LogicalOr < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemDoubleStraightSlash , new LogicalOr < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemDoubleStraightSlash , new LogicalOr < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemDoubleStraightSlash , new LogicalOr < unsigned short , unsigned long long >);
    add_to_command_table_2( 5 , 1 , LexemDoubleStraightSlash , new LogicalOr < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemDoubleStraightSlash , new LogicalOr < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemDoubleStraightSlash , new LogicalOr < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemDoubleStraightSlash , new LogicalOr < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemDoubleStraightSlash , new LogicalOr < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemDoubleStraightSlash , new LogicalOr < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemDoubleStraightSlash , new LogicalOr < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemDoubleStraightSlash , new LogicalOr < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemDoubleStraightSlash , new LogicalOr < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemDoubleStraightSlash , new LogicalOr < signed int , unsigned long long >);
    add_to_command_table_2( 6 , 1 , LexemDoubleStraightSlash , new LogicalOr < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemDoubleStraightSlash , new LogicalOr < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemDoubleStraightSlash , new LogicalOr < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemDoubleStraightSlash , new LogicalOr < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemDoubleStraightSlash , new LogicalOr < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemDoubleStraightSlash , new LogicalOr < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemDoubleStraightSlash , new LogicalOr < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemDoubleStraightSlash , new LogicalOr < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemDoubleStraightSlash , new LogicalOr < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemDoubleStraightSlash , new LogicalOr < unsigned int , unsigned long long >);
    add_to_command_table_2( 7 , 1 , LexemDoubleStraightSlash , new LogicalOr < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemDoubleStraightSlash , new LogicalOr < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemDoubleStraightSlash , new LogicalOr < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemDoubleStraightSlash , new LogicalOr < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemDoubleStraightSlash , new LogicalOr < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemDoubleStraightSlash , new LogicalOr < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemDoubleStraightSlash , new LogicalOr < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemDoubleStraightSlash , new LogicalOr < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemDoubleStraightSlash , new LogicalOr < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemDoubleStraightSlash , new LogicalOr < signed long , unsigned long long >);
    add_to_command_table_2( 8 , 1 , LexemDoubleStraightSlash , new LogicalOr < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemDoubleStraightSlash , new LogicalOr < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemDoubleStraightSlash , new LogicalOr < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemDoubleStraightSlash , new LogicalOr < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemDoubleStraightSlash , new LogicalOr < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemDoubleStraightSlash , new LogicalOr < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemDoubleStraightSlash , new LogicalOr < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemDoubleStraightSlash , new LogicalOr < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemDoubleStraightSlash , new LogicalOr < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemDoubleStraightSlash , new LogicalOr < unsigned long , unsigned long long >);
    add_to_command_table_2( 9 , 1 , LexemDoubleStraightSlash , new LogicalOr < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemDoubleStraightSlash , new LogicalOr < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemDoubleStraightSlash , new LogicalOr < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemDoubleStraightSlash , new LogicalOr < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemDoubleStraightSlash , new LogicalOr < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemDoubleStraightSlash , new LogicalOr < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemDoubleStraightSlash , new LogicalOr < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemDoubleStraightSlash , new LogicalOr < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemDoubleStraightSlash , new LogicalOr < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemDoubleStraightSlash , new LogicalOr < signed long long , unsigned long long >);
    add_to_command_table_2( 10 , 1 , LexemDoubleStraightSlash , new LogicalOr < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemDoubleStraightSlash , new LogicalOr < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemDoubleStraightSlash , new LogicalOr < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemDoubleStraightSlash , new LogicalOr < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemDoubleStraightSlash , new LogicalOr < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemDoubleStraightSlash , new LogicalOr < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemDoubleStraightSlash , new LogicalOr < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemDoubleStraightSlash , new LogicalOr < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemDoubleStraightSlash , new LogicalOr < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemDoubleStraightSlash , new LogicalOr < unsigned long long , unsigned long long >);

    //Mod code_generator_4

    add_to_command_table_2( 1 , 1 , LexemPercent , new Mod < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemPercent , new Mod < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemPercent , new Mod < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemPercent , new Mod < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemPercent , new Mod < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemPercent , new Mod < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemPercent , new Mod < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemPercent , new Mod < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemPercent , new Mod < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemPercent , new Mod < signed char , unsigned long long >);
    add_to_command_table_2( 2 , 1 , LexemPercent , new Mod < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemPercent , new Mod < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemPercent , new Mod < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemPercent , new Mod < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemPercent , new Mod < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemPercent , new Mod < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemPercent , new Mod < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemPercent , new Mod < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemPercent , new Mod < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemPercent , new Mod < unsigned char , unsigned long long >);
    add_to_command_table_2( 3 , 1 , LexemPercent , new Mod < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemPercent , new Mod < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemPercent , new Mod < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemPercent , new Mod < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemPercent , new Mod < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemPercent , new Mod < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemPercent , new Mod < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemPercent , new Mod < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemPercent , new Mod < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemPercent , new Mod < signed short , unsigned long long >);
    add_to_command_table_2( 4 , 1 , LexemPercent , new Mod < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemPercent , new Mod < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemPercent , new Mod < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemPercent , new Mod < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemPercent , new Mod < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemPercent , new Mod < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemPercent , new Mod < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemPercent , new Mod < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemPercent , new Mod < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemPercent , new Mod < unsigned short , unsigned long long >);
    add_to_command_table_2( 5 , 1 , LexemPercent , new Mod < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemPercent , new Mod < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemPercent , new Mod < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemPercent , new Mod < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemPercent , new Mod < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemPercent , new Mod < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemPercent , new Mod < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemPercent , new Mod < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemPercent , new Mod < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemPercent , new Mod < signed int , unsigned long long >);
    add_to_command_table_2( 6 , 1 , LexemPercent , new Mod < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemPercent , new Mod < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemPercent , new Mod < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemPercent , new Mod < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemPercent , new Mod < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemPercent , new Mod < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemPercent , new Mod < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemPercent , new Mod < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemPercent , new Mod < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemPercent , new Mod < unsigned int , unsigned long long >);
    add_to_command_table_2( 7 , 1 , LexemPercent , new Mod < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemPercent , new Mod < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemPercent , new Mod < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemPercent , new Mod < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemPercent , new Mod < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemPercent , new Mod < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemPercent , new Mod < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemPercent , new Mod < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemPercent , new Mod < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemPercent , new Mod < signed long , unsigned long long >);
    add_to_command_table_2( 8 , 1 , LexemPercent , new Mod < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemPercent , new Mod < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemPercent , new Mod < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemPercent , new Mod < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemPercent , new Mod < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemPercent , new Mod < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemPercent , new Mod < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemPercent , new Mod < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemPercent , new Mod < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemPercent , new Mod < unsigned long , unsigned long long >);
    add_to_command_table_2( 9 , 1 , LexemPercent , new Mod < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemPercent , new Mod < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemPercent , new Mod < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemPercent , new Mod < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemPercent , new Mod < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemPercent , new Mod < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemPercent , new Mod < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemPercent , new Mod < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemPercent , new Mod < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemPercent , new Mod < signed long long , unsigned long long >);
    add_to_command_table_2( 10 , 1 , LexemPercent , new Mod < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemPercent , new Mod < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemPercent , new Mod < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemPercent , new Mod < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemPercent , new Mod < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemPercent , new Mod < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemPercent , new Mod < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemPercent , new Mod < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemPercent , new Mod < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemPercent , new Mod < unsigned long long , unsigned long long >);

    //byte operations code_generator_5

    add_to_command_table_2( 1 , 1 , LexemMoveLeft , new MoveLeft < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemMoveLeft , new MoveLeft < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemMoveLeft , new MoveLeft < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemMoveLeft , new MoveLeft < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemMoveLeft , new MoveLeft < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemMoveLeft , new MoveLeft < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemMoveLeft , new MoveLeft < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemMoveLeft , new MoveLeft < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemMoveLeft , new MoveLeft < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemMoveLeft , new MoveLeft < signed char , unsigned long long >);
    add_to_command_table_2( 2 , 1 , LexemMoveLeft , new MoveLeft < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemMoveLeft , new MoveLeft < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemMoveLeft , new MoveLeft < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemMoveLeft , new MoveLeft < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemMoveLeft , new MoveLeft < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemMoveLeft , new MoveLeft < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemMoveLeft , new MoveLeft < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemMoveLeft , new MoveLeft < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemMoveLeft , new MoveLeft < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemMoveLeft , new MoveLeft < unsigned char , unsigned long long >);
    add_to_command_table_2( 3 , 1 , LexemMoveLeft , new MoveLeft < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemMoveLeft , new MoveLeft < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemMoveLeft , new MoveLeft < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemMoveLeft , new MoveLeft < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemMoveLeft , new MoveLeft < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemMoveLeft , new MoveLeft < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemMoveLeft , new MoveLeft < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemMoveLeft , new MoveLeft < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemMoveLeft , new MoveLeft < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemMoveLeft , new MoveLeft < signed short , unsigned long long >);
    add_to_command_table_2( 4 , 1 , LexemMoveLeft , new MoveLeft < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemMoveLeft , new MoveLeft < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemMoveLeft , new MoveLeft < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemMoveLeft , new MoveLeft < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemMoveLeft , new MoveLeft < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemMoveLeft , new MoveLeft < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemMoveLeft , new MoveLeft < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemMoveLeft , new MoveLeft < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemMoveLeft , new MoveLeft < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemMoveLeft , new MoveLeft < unsigned short , unsigned long long >);
    add_to_command_table_2( 5 , 1 , LexemMoveLeft , new MoveLeft < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemMoveLeft , new MoveLeft < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemMoveLeft , new MoveLeft < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemMoveLeft , new MoveLeft < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemMoveLeft , new MoveLeft < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemMoveLeft , new MoveLeft < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemMoveLeft , new MoveLeft < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemMoveLeft , new MoveLeft < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemMoveLeft , new MoveLeft < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemMoveLeft , new MoveLeft < signed int , unsigned long long >);
    add_to_command_table_2( 6 , 1 , LexemMoveLeft , new MoveLeft < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemMoveLeft , new MoveLeft < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemMoveLeft , new MoveLeft < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemMoveLeft , new MoveLeft < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemMoveLeft , new MoveLeft < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemMoveLeft , new MoveLeft < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemMoveLeft , new MoveLeft < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemMoveLeft , new MoveLeft < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemMoveLeft , new MoveLeft < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemMoveLeft , new MoveLeft < unsigned int , unsigned long long >);
    add_to_command_table_2( 7 , 1 , LexemMoveLeft , new MoveLeft < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemMoveLeft , new MoveLeft < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemMoveLeft , new MoveLeft < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemMoveLeft , new MoveLeft < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemMoveLeft , new MoveLeft < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemMoveLeft , new MoveLeft < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemMoveLeft , new MoveLeft < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemMoveLeft , new MoveLeft < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemMoveLeft , new MoveLeft < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemMoveLeft , new MoveLeft < signed long , unsigned long long >);
    add_to_command_table_2( 8 , 1 , LexemMoveLeft , new MoveLeft < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemMoveLeft , new MoveLeft < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemMoveLeft , new MoveLeft < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemMoveLeft , new MoveLeft < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemMoveLeft , new MoveLeft < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemMoveLeft , new MoveLeft < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemMoveLeft , new MoveLeft < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemMoveLeft , new MoveLeft < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemMoveLeft , new MoveLeft < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemMoveLeft , new MoveLeft < unsigned long , unsigned long long >);
    add_to_command_table_2( 9 , 1 , LexemMoveLeft , new MoveLeft < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemMoveLeft , new MoveLeft < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemMoveLeft , new MoveLeft < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemMoveLeft , new MoveLeft < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemMoveLeft , new MoveLeft < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemMoveLeft , new MoveLeft < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemMoveLeft , new MoveLeft < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemMoveLeft , new MoveLeft < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemMoveLeft , new MoveLeft < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemMoveLeft , new MoveLeft < signed long long , unsigned long long >);
    add_to_command_table_2( 10 , 1 , LexemMoveLeft , new MoveLeft < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemMoveLeft , new MoveLeft < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemMoveLeft , new MoveLeft < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemMoveLeft , new MoveLeft < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemMoveLeft , new MoveLeft < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemMoveLeft , new MoveLeft < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemMoveLeft , new MoveLeft < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemMoveLeft , new MoveLeft < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemMoveLeft , new MoveLeft < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemMoveLeft , new MoveLeft < unsigned long long , unsigned long long >);
    add_to_command_table_2( 1 , 1 , LexemMoveRight , new MoveRight < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemMoveRight , new MoveRight < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemMoveRight , new MoveRight < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemMoveRight , new MoveRight < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemMoveRight , new MoveRight < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemMoveRight , new MoveRight < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemMoveRight , new MoveRight < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemMoveRight , new MoveRight < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemMoveRight , new MoveRight < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemMoveRight , new MoveRight < signed char , unsigned long long >);
    add_to_command_table_2( 2 , 1 , LexemMoveRight , new MoveRight < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemMoveRight , new MoveRight < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemMoveRight , new MoveRight < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemMoveRight , new MoveRight < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemMoveRight , new MoveRight < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemMoveRight , new MoveRight < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemMoveRight , new MoveRight < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemMoveRight , new MoveRight < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemMoveRight , new MoveRight < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemMoveRight , new MoveRight < unsigned char , unsigned long long >);
    add_to_command_table_2( 3 , 1 , LexemMoveRight , new MoveRight < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemMoveRight , new MoveRight < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemMoveRight , new MoveRight < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemMoveRight , new MoveRight < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemMoveRight , new MoveRight < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemMoveRight , new MoveRight < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemMoveRight , new MoveRight < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemMoveRight , new MoveRight < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemMoveRight , new MoveRight < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemMoveRight , new MoveRight < signed short , unsigned long long >);
    add_to_command_table_2( 4 , 1 , LexemMoveRight , new MoveRight < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemMoveRight , new MoveRight < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemMoveRight , new MoveRight < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemMoveRight , new MoveRight < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemMoveRight , new MoveRight < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemMoveRight , new MoveRight < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemMoveRight , new MoveRight < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemMoveRight , new MoveRight < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemMoveRight , new MoveRight < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemMoveRight , new MoveRight < unsigned short , unsigned long long >);
    add_to_command_table_2( 5 , 1 , LexemMoveRight , new MoveRight < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemMoveRight , new MoveRight < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemMoveRight , new MoveRight < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemMoveRight , new MoveRight < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemMoveRight , new MoveRight < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemMoveRight , new MoveRight < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemMoveRight , new MoveRight < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemMoveRight , new MoveRight < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemMoveRight , new MoveRight < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemMoveRight , new MoveRight < signed int , unsigned long long >);
    add_to_command_table_2( 6 , 1 , LexemMoveRight , new MoveRight < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemMoveRight , new MoveRight < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemMoveRight , new MoveRight < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemMoveRight , new MoveRight < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemMoveRight , new MoveRight < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemMoveRight , new MoveRight < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemMoveRight , new MoveRight < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemMoveRight , new MoveRight < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemMoveRight , new MoveRight < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemMoveRight , new MoveRight < unsigned int , unsigned long long >);
    add_to_command_table_2( 7 , 1 , LexemMoveRight , new MoveRight < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemMoveRight , new MoveRight < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemMoveRight , new MoveRight < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemMoveRight , new MoveRight < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemMoveRight , new MoveRight < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemMoveRight , new MoveRight < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemMoveRight , new MoveRight < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemMoveRight , new MoveRight < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemMoveRight , new MoveRight < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemMoveRight , new MoveRight < signed long , unsigned long long >);
    add_to_command_table_2( 8 , 1 , LexemMoveRight , new MoveRight < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemMoveRight , new MoveRight < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemMoveRight , new MoveRight < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemMoveRight , new MoveRight < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemMoveRight , new MoveRight < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemMoveRight , new MoveRight < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemMoveRight , new MoveRight < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemMoveRight , new MoveRight < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemMoveRight , new MoveRight < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemMoveRight , new MoveRight < unsigned long , unsigned long long >);
    add_to_command_table_2( 9 , 1 , LexemMoveRight , new MoveRight < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemMoveRight , new MoveRight < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemMoveRight , new MoveRight < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemMoveRight , new MoveRight < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemMoveRight , new MoveRight < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemMoveRight , new MoveRight < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemMoveRight , new MoveRight < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemMoveRight , new MoveRight < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemMoveRight , new MoveRight < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemMoveRight , new MoveRight < signed long long , unsigned long long >);
    add_to_command_table_2( 10 , 1 , LexemMoveRight , new MoveRight < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemMoveRight , new MoveRight < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemMoveRight , new MoveRight < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemMoveRight , new MoveRight < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemMoveRight , new MoveRight < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemMoveRight , new MoveRight < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemMoveRight , new MoveRight < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemMoveRight , new MoveRight < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemMoveRight , new MoveRight < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemMoveRight , new MoveRight < unsigned long long , unsigned long long >);
    add_to_command_table_2( 1 , 1 , LexemAmpersand , new ByteAnd < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemAmpersand , new ByteAnd < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemAmpersand , new ByteAnd < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemAmpersand , new ByteAnd < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemAmpersand , new ByteAnd < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemAmpersand , new ByteAnd < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemAmpersand , new ByteAnd < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemAmpersand , new ByteAnd < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemAmpersand , new ByteAnd < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemAmpersand , new ByteAnd < signed char , unsigned long long >);
    add_to_command_table_2( 2 , 1 , LexemAmpersand , new ByteAnd < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemAmpersand , new ByteAnd < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemAmpersand , new ByteAnd < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemAmpersand , new ByteAnd < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemAmpersand , new ByteAnd < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemAmpersand , new ByteAnd < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemAmpersand , new ByteAnd < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemAmpersand , new ByteAnd < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemAmpersand , new ByteAnd < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemAmpersand , new ByteAnd < unsigned char , unsigned long long >);
    add_to_command_table_2( 3 , 1 , LexemAmpersand , new ByteAnd < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemAmpersand , new ByteAnd < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemAmpersand , new ByteAnd < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemAmpersand , new ByteAnd < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemAmpersand , new ByteAnd < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemAmpersand , new ByteAnd < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemAmpersand , new ByteAnd < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemAmpersand , new ByteAnd < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemAmpersand , new ByteAnd < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemAmpersand , new ByteAnd < signed short , unsigned long long >);
    add_to_command_table_2( 4 , 1 , LexemAmpersand , new ByteAnd < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemAmpersand , new ByteAnd < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemAmpersand , new ByteAnd < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemAmpersand , new ByteAnd < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemAmpersand , new ByteAnd < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemAmpersand , new ByteAnd < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemAmpersand , new ByteAnd < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemAmpersand , new ByteAnd < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemAmpersand , new ByteAnd < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemAmpersand , new ByteAnd < unsigned short , unsigned long long >);
    add_to_command_table_2( 5 , 1 , LexemAmpersand , new ByteAnd < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemAmpersand , new ByteAnd < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemAmpersand , new ByteAnd < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemAmpersand , new ByteAnd < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemAmpersand , new ByteAnd < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemAmpersand , new ByteAnd < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemAmpersand , new ByteAnd < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemAmpersand , new ByteAnd < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemAmpersand , new ByteAnd < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemAmpersand , new ByteAnd < signed int , unsigned long long >);
    add_to_command_table_2( 6 , 1 , LexemAmpersand , new ByteAnd < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemAmpersand , new ByteAnd < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemAmpersand , new ByteAnd < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemAmpersand , new ByteAnd < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemAmpersand , new ByteAnd < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemAmpersand , new ByteAnd < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemAmpersand , new ByteAnd < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemAmpersand , new ByteAnd < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemAmpersand , new ByteAnd < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemAmpersand , new ByteAnd < unsigned int , unsigned long long >);
    add_to_command_table_2( 7 , 1 , LexemAmpersand , new ByteAnd < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemAmpersand , new ByteAnd < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemAmpersand , new ByteAnd < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemAmpersand , new ByteAnd < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemAmpersand , new ByteAnd < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemAmpersand , new ByteAnd < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemAmpersand , new ByteAnd < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemAmpersand , new ByteAnd < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemAmpersand , new ByteAnd < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemAmpersand , new ByteAnd < signed long , unsigned long long >);
    add_to_command_table_2( 8 , 1 , LexemAmpersand , new ByteAnd < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemAmpersand , new ByteAnd < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemAmpersand , new ByteAnd < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemAmpersand , new ByteAnd < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemAmpersand , new ByteAnd < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemAmpersand , new ByteAnd < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemAmpersand , new ByteAnd < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemAmpersand , new ByteAnd < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemAmpersand , new ByteAnd < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemAmpersand , new ByteAnd < unsigned long , unsigned long long >);
    add_to_command_table_2( 9 , 1 , LexemAmpersand , new ByteAnd < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemAmpersand , new ByteAnd < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemAmpersand , new ByteAnd < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemAmpersand , new ByteAnd < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemAmpersand , new ByteAnd < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemAmpersand , new ByteAnd < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemAmpersand , new ByteAnd < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemAmpersand , new ByteAnd < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemAmpersand , new ByteAnd < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemAmpersand , new ByteAnd < signed long long , unsigned long long >);
    add_to_command_table_2( 10 , 1 , LexemAmpersand , new ByteAnd < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemAmpersand , new ByteAnd < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemAmpersand , new ByteAnd < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemAmpersand , new ByteAnd < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemAmpersand , new ByteAnd < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemAmpersand , new ByteAnd < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemAmpersand , new ByteAnd < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemAmpersand , new ByteAnd < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemAmpersand , new ByteAnd < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemAmpersand , new ByteAnd < unsigned long long , unsigned long long >);
    add_to_command_table_2( 1 , 1 , LexemSuffix , new ByteXor < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemSuffix , new ByteXor < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemSuffix , new ByteXor < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemSuffix , new ByteXor < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemSuffix , new ByteXor < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemSuffix , new ByteXor < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemSuffix , new ByteXor < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemSuffix , new ByteXor < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemSuffix , new ByteXor < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemSuffix , new ByteXor < signed char , unsigned long long >);
    add_to_command_table_2( 2 , 1 , LexemSuffix , new ByteXor < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemSuffix , new ByteXor < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemSuffix , new ByteXor < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemSuffix , new ByteXor < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemSuffix , new ByteXor < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemSuffix , new ByteXor < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemSuffix , new ByteXor < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemSuffix , new ByteXor < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemSuffix , new ByteXor < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemSuffix , new ByteXor < unsigned char , unsigned long long >);
    add_to_command_table_2( 3 , 1 , LexemSuffix , new ByteXor < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemSuffix , new ByteXor < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemSuffix , new ByteXor < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemSuffix , new ByteXor < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemSuffix , new ByteXor < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemSuffix , new ByteXor < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemSuffix , new ByteXor < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemSuffix , new ByteXor < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemSuffix , new ByteXor < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemSuffix , new ByteXor < signed short , unsigned long long >);
    add_to_command_table_2( 4 , 1 , LexemSuffix , new ByteXor < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemSuffix , new ByteXor < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemSuffix , new ByteXor < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemSuffix , new ByteXor < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemSuffix , new ByteXor < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemSuffix , new ByteXor < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemSuffix , new ByteXor < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemSuffix , new ByteXor < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemSuffix , new ByteXor < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemSuffix , new ByteXor < unsigned short , unsigned long long >);
    add_to_command_table_2( 5 , 1 , LexemSuffix , new ByteXor < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemSuffix , new ByteXor < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemSuffix , new ByteXor < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemSuffix , new ByteXor < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemSuffix , new ByteXor < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemSuffix , new ByteXor < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemSuffix , new ByteXor < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemSuffix , new ByteXor < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemSuffix , new ByteXor < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemSuffix , new ByteXor < signed int , unsigned long long >);
    add_to_command_table_2( 6 , 1 , LexemSuffix , new ByteXor < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemSuffix , new ByteXor < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemSuffix , new ByteXor < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemSuffix , new ByteXor < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemSuffix , new ByteXor < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemSuffix , new ByteXor < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemSuffix , new ByteXor < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemSuffix , new ByteXor < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemSuffix , new ByteXor < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemSuffix , new ByteXor < unsigned int , unsigned long long >);
    add_to_command_table_2( 7 , 1 , LexemSuffix , new ByteXor < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemSuffix , new ByteXor < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemSuffix , new ByteXor < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemSuffix , new ByteXor < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemSuffix , new ByteXor < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemSuffix , new ByteXor < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemSuffix , new ByteXor < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemSuffix , new ByteXor < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemSuffix , new ByteXor < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemSuffix , new ByteXor < signed long , unsigned long long >);
    add_to_command_table_2( 8 , 1 , LexemSuffix , new ByteXor < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemSuffix , new ByteXor < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemSuffix , new ByteXor < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemSuffix , new ByteXor < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemSuffix , new ByteXor < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemSuffix , new ByteXor < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemSuffix , new ByteXor < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemSuffix , new ByteXor < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemSuffix , new ByteXor < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemSuffix , new ByteXor < unsigned long , unsigned long long >);
    add_to_command_table_2( 9 , 1 , LexemSuffix , new ByteXor < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemSuffix , new ByteXor < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemSuffix , new ByteXor < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemSuffix , new ByteXor < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemSuffix , new ByteXor < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemSuffix , new ByteXor < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemSuffix , new ByteXor < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemSuffix , new ByteXor < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemSuffix , new ByteXor < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemSuffix , new ByteXor < signed long long , unsigned long long >);
    add_to_command_table_2( 10 , 1 , LexemSuffix , new ByteXor < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemSuffix , new ByteXor < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemSuffix , new ByteXor < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemSuffix , new ByteXor < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemSuffix , new ByteXor < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemSuffix , new ByteXor < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemSuffix , new ByteXor < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemSuffix , new ByteXor < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemSuffix , new ByteXor < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemSuffix , new ByteXor < unsigned long long , unsigned long long >);
    add_to_command_table_2( 1 , 1 , LexemStraightSlash , new ByteOr < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemStraightSlash , new ByteOr < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemStraightSlash , new ByteOr < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemStraightSlash , new ByteOr < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemStraightSlash , new ByteOr < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemStraightSlash , new ByteOr < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemStraightSlash , new ByteOr < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemStraightSlash , new ByteOr < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemStraightSlash , new ByteOr < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemStraightSlash , new ByteOr < signed char , unsigned long long >);
    add_to_command_table_2( 2 , 1 , LexemStraightSlash , new ByteOr < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemStraightSlash , new ByteOr < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemStraightSlash , new ByteOr < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemStraightSlash , new ByteOr < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemStraightSlash , new ByteOr < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemStraightSlash , new ByteOr < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemStraightSlash , new ByteOr < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemStraightSlash , new ByteOr < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemStraightSlash , new ByteOr < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemStraightSlash , new ByteOr < unsigned char , unsigned long long >);
    add_to_command_table_2( 3 , 1 , LexemStraightSlash , new ByteOr < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemStraightSlash , new ByteOr < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemStraightSlash , new ByteOr < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemStraightSlash , new ByteOr < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemStraightSlash , new ByteOr < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemStraightSlash , new ByteOr < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemStraightSlash , new ByteOr < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemStraightSlash , new ByteOr < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemStraightSlash , new ByteOr < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemStraightSlash , new ByteOr < signed short , unsigned long long >);
    add_to_command_table_2( 4 , 1 , LexemStraightSlash , new ByteOr < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemStraightSlash , new ByteOr < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemStraightSlash , new ByteOr < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemStraightSlash , new ByteOr < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemStraightSlash , new ByteOr < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemStraightSlash , new ByteOr < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemStraightSlash , new ByteOr < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemStraightSlash , new ByteOr < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemStraightSlash , new ByteOr < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemStraightSlash , new ByteOr < unsigned short , unsigned long long >);
    add_to_command_table_2( 5 , 1 , LexemStraightSlash , new ByteOr < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemStraightSlash , new ByteOr < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemStraightSlash , new ByteOr < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemStraightSlash , new ByteOr < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemStraightSlash , new ByteOr < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemStraightSlash , new ByteOr < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemStraightSlash , new ByteOr < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemStraightSlash , new ByteOr < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemStraightSlash , new ByteOr < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemStraightSlash , new ByteOr < signed int , unsigned long long >);
    add_to_command_table_2( 6 , 1 , LexemStraightSlash , new ByteOr < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemStraightSlash , new ByteOr < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemStraightSlash , new ByteOr < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemStraightSlash , new ByteOr < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemStraightSlash , new ByteOr < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemStraightSlash , new ByteOr < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemStraightSlash , new ByteOr < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemStraightSlash , new ByteOr < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemStraightSlash , new ByteOr < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemStraightSlash , new ByteOr < unsigned int , unsigned long long >);
    add_to_command_table_2( 7 , 1 , LexemStraightSlash , new ByteOr < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemStraightSlash , new ByteOr < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemStraightSlash , new ByteOr < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemStraightSlash , new ByteOr < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemStraightSlash , new ByteOr < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemStraightSlash , new ByteOr < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemStraightSlash , new ByteOr < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemStraightSlash , new ByteOr < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemStraightSlash , new ByteOr < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemStraightSlash , new ByteOr < signed long , unsigned long long >);
    add_to_command_table_2( 8 , 1 , LexemStraightSlash , new ByteOr < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemStraightSlash , new ByteOr < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemStraightSlash , new ByteOr < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemStraightSlash , new ByteOr < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemStraightSlash , new ByteOr < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemStraightSlash , new ByteOr < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemStraightSlash , new ByteOr < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemStraightSlash , new ByteOr < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemStraightSlash , new ByteOr < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemStraightSlash , new ByteOr < unsigned long , unsigned long long >);
    add_to_command_table_2( 9 , 1 , LexemStraightSlash , new ByteOr < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemStraightSlash , new ByteOr < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemStraightSlash , new ByteOr < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemStraightSlash , new ByteOr < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemStraightSlash , new ByteOr < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemStraightSlash , new ByteOr < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemStraightSlash , new ByteOr < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemStraightSlash , new ByteOr < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemStraightSlash , new ByteOr < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemStraightSlash , new ByteOr < signed long long , unsigned long long >);
    add_to_command_table_2( 10 , 1 , LexemStraightSlash , new ByteOr < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemStraightSlash , new ByteOr < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemStraightSlash , new ByteOr < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemStraightSlash , new ByteOr < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemStraightSlash , new ByteOr < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemStraightSlash , new ByteOr < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemStraightSlash , new ByteOr < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemStraightSlash , new ByteOr < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemStraightSlash , new ByteOr < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemStraightSlash , new ByteOr < unsigned long long , unsigned long long >);

    //basic assignment expressions code_generator_6

    add_to_command_table_2( 1 , 1 , LexemEqually , new Equally < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemEqually , new Equally < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemEqually , new Equally < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemEqually , new Equally < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemEqually , new Equally < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemEqually , new Equally < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemEqually , new Equally < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemEqually , new Equally < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemEqually , new Equally < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemEqually , new Equally < signed char , unsigned long long >);
    add_to_command_table_2( 1 , 11 , LexemEqually , new Equally < signed char , float >);
    add_to_command_table_2( 1 , 12 , LexemEqually , new Equally < signed char , double >);
    add_to_command_table_2( 1 , 13 , LexemEqually , new Equally < signed char , long double >);
    add_to_command_table_2( 2 , 1 , LexemEqually , new Equally < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemEqually , new Equally < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemEqually , new Equally < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemEqually , new Equally < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemEqually , new Equally < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemEqually , new Equally < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemEqually , new Equally < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemEqually , new Equally < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemEqually , new Equally < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemEqually , new Equally < unsigned char , unsigned long long >);
    add_to_command_table_2( 2 , 11 , LexemEqually , new Equally < unsigned char , float >);
    add_to_command_table_2( 2 , 12 , LexemEqually , new Equally < unsigned char , double >);
    add_to_command_table_2( 2 , 13 , LexemEqually , new Equally < unsigned char , long double >);
    add_to_command_table_2( 3 , 1 , LexemEqually , new Equally < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemEqually , new Equally < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemEqually , new Equally < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemEqually , new Equally < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemEqually , new Equally < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemEqually , new Equally < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemEqually , new Equally < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemEqually , new Equally < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemEqually , new Equally < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemEqually , new Equally < signed short , unsigned long long >);
    add_to_command_table_2( 3 , 11 , LexemEqually , new Equally < signed short , float >);
    add_to_command_table_2( 3 , 12 , LexemEqually , new Equally < signed short , double >);
    add_to_command_table_2( 3 , 13 , LexemEqually , new Equally < signed short , long double >);
    add_to_command_table_2( 4 , 1 , LexemEqually , new Equally < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemEqually , new Equally < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemEqually , new Equally < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemEqually , new Equally < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemEqually , new Equally < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemEqually , new Equally < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemEqually , new Equally < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemEqually , new Equally < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemEqually , new Equally < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemEqually , new Equally < unsigned short , unsigned long long >);
    add_to_command_table_2( 4 , 11 , LexemEqually , new Equally < unsigned short , float >);
    add_to_command_table_2( 4 , 12 , LexemEqually , new Equally < unsigned short , double >);
    add_to_command_table_2( 4 , 13 , LexemEqually , new Equally < unsigned short , long double >);
    add_to_command_table_2( 5 , 1 , LexemEqually , new Equally < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemEqually , new Equally < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemEqually , new Equally < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemEqually , new Equally < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemEqually , new Equally < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemEqually , new Equally < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemEqually , new Equally < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemEqually , new Equally < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemEqually , new Equally < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemEqually , new Equally < signed int , unsigned long long >);
    add_to_command_table_2( 5 , 11 , LexemEqually , new Equally < signed int , float >);
    add_to_command_table_2( 5 , 12 , LexemEqually , new Equally < signed int , double >);
    add_to_command_table_2( 5 , 13 , LexemEqually , new Equally < signed int , long double >);
    add_to_command_table_2( 6 , 1 , LexemEqually , new Equally < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemEqually , new Equally < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemEqually , new Equally < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemEqually , new Equally < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemEqually , new Equally < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemEqually , new Equally < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemEqually , new Equally < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemEqually , new Equally < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemEqually , new Equally < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemEqually , new Equally < unsigned int , unsigned long long >);
    add_to_command_table_2( 6 , 11 , LexemEqually , new Equally < unsigned int , float >);
    add_to_command_table_2( 6 , 12 , LexemEqually , new Equally < unsigned int , double >);
    add_to_command_table_2( 6 , 13 , LexemEqually , new Equally < unsigned int , long double >);
    add_to_command_table_2( 7 , 1 , LexemEqually , new Equally < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemEqually , new Equally < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemEqually , new Equally < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemEqually , new Equally < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemEqually , new Equally < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemEqually , new Equally < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemEqually , new Equally < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemEqually , new Equally < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemEqually , new Equally < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemEqually , new Equally < signed long , unsigned long long >);
    add_to_command_table_2( 7 , 11 , LexemEqually , new Equally < signed long , float >);
    add_to_command_table_2( 7 , 12 , LexemEqually , new Equally < signed long , double >);
    add_to_command_table_2( 7 , 13 , LexemEqually , new Equally < signed long , long double >);
    add_to_command_table_2( 8 , 1 , LexemEqually , new Equally < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemEqually , new Equally < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemEqually , new Equally < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemEqually , new Equally < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemEqually , new Equally < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemEqually , new Equally < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemEqually , new Equally < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemEqually , new Equally < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemEqually , new Equally < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemEqually , new Equally < unsigned long , unsigned long long >);
    add_to_command_table_2( 8 , 11 , LexemEqually , new Equally < unsigned long , float >);
    add_to_command_table_2( 8 , 12 , LexemEqually , new Equally < unsigned long , double >);
    add_to_command_table_2( 8 , 13 , LexemEqually , new Equally < unsigned long , long double >);
    add_to_command_table_2( 9 , 1 , LexemEqually , new Equally < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemEqually , new Equally < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemEqually , new Equally < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemEqually , new Equally < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemEqually , new Equally < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemEqually , new Equally < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemEqually , new Equally < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemEqually , new Equally < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemEqually , new Equally < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemEqually , new Equally < signed long long , unsigned long long >);
    add_to_command_table_2( 9 , 11 , LexemEqually , new Equally < signed long long , float >);
    add_to_command_table_2( 9 , 12 , LexemEqually , new Equally < signed long long , double >);
    add_to_command_table_2( 9 , 13 , LexemEqually , new Equally < signed long long , long double >);
    add_to_command_table_2( 10 , 1 , LexemEqually , new Equally < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemEqually , new Equally < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemEqually , new Equally < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemEqually , new Equally < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemEqually , new Equally < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemEqually , new Equally < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemEqually , new Equally < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemEqually , new Equally < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemEqually , new Equally < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemEqually , new Equally < unsigned long long , unsigned long long >);
    add_to_command_table_2( 10 , 11 , LexemEqually , new Equally < unsigned long long , float >);
    add_to_command_table_2( 10 , 12 , LexemEqually , new Equally < unsigned long long , double >);
    add_to_command_table_2( 10 , 13 , LexemEqually , new Equally < unsigned long long , long double >);
    add_to_command_table_2( 11 , 1 , LexemEqually , new Equally < float , signed char >);
    add_to_command_table_2( 11 , 2 , LexemEqually , new Equally < float , unsigned char >);
    add_to_command_table_2( 11 , 3 , LexemEqually , new Equally < float , signed short >);
    add_to_command_table_2( 11 , 4 , LexemEqually , new Equally < float , unsigned short >);
    add_to_command_table_2( 11 , 5 , LexemEqually , new Equally < float , signed int >);
    add_to_command_table_2( 11 , 6 , LexemEqually , new Equally < float , unsigned int >);
    add_to_command_table_2( 11 , 7 , LexemEqually , new Equally < float , signed long >);
    add_to_command_table_2( 11 , 8 , LexemEqually , new Equally < float , unsigned long >);
    add_to_command_table_2( 11 , 9 , LexemEqually , new Equally < float , signed long long >);
    add_to_command_table_2( 11 , 10 , LexemEqually , new Equally < float , unsigned long long >);
    add_to_command_table_2( 11 , 11 , LexemEqually , new Equally < float , float >);
    add_to_command_table_2( 11 , 12 , LexemEqually , new Equally < float , double >);
    add_to_command_table_2( 11 , 13 , LexemEqually , new Equally < float , long double >);
    add_to_command_table_2( 12 , 1 , LexemEqually , new Equally < double , signed char >);
    add_to_command_table_2( 12 , 2 , LexemEqually , new Equally < double , unsigned char >);
    add_to_command_table_2( 12 , 3 , LexemEqually , new Equally < double , signed short >);
    add_to_command_table_2( 12 , 4 , LexemEqually , new Equally < double , unsigned short >);
    add_to_command_table_2( 12 , 5 , LexemEqually , new Equally < double , signed int >);
    add_to_command_table_2( 12 , 6 , LexemEqually , new Equally < double , unsigned int >);
    add_to_command_table_2( 12 , 7 , LexemEqually , new Equally < double , signed long >);
    add_to_command_table_2( 12 , 8 , LexemEqually , new Equally < double , unsigned long >);
    add_to_command_table_2( 12 , 9 , LexemEqually , new Equally < double , signed long long >);
    add_to_command_table_2( 12 , 10 , LexemEqually , new Equally < double , unsigned long long >);
    add_to_command_table_2( 12 , 11 , LexemEqually , new Equally < double , float >);
    add_to_command_table_2( 12 , 12 , LexemEqually , new Equally < double , double >);
    add_to_command_table_2( 12 , 13 , LexemEqually , new Equally < double , long double >);
    add_to_command_table_2( 13 , 1 , LexemEqually , new Equally < long double , signed char >);
    add_to_command_table_2( 13 , 2 , LexemEqually , new Equally < long double , unsigned char >);
    add_to_command_table_2( 13 , 3 , LexemEqually , new Equally < long double , signed short >);
    add_to_command_table_2( 13 , 4 , LexemEqually , new Equally < long double , unsigned short >);
    add_to_command_table_2( 13 , 5 , LexemEqually , new Equally < long double , signed int >);
    add_to_command_table_2( 13 , 6 , LexemEqually , new Equally < long double , unsigned int >);
    add_to_command_table_2( 13 , 7 , LexemEqually , new Equally < long double , signed long >);
    add_to_command_table_2( 13 , 8 , LexemEqually , new Equally < long double , unsigned long >);
    add_to_command_table_2( 13 , 9 , LexemEqually , new Equally < long double , signed long long >);
    add_to_command_table_2( 13 , 10 , LexemEqually , new Equally < long double , unsigned long long >);
    add_to_command_table_2( 13 , 11 , LexemEqually , new Equally < long double , float >);
    add_to_command_table_2( 13 , 12 , LexemEqually , new Equally < long double , double >);
    add_to_command_table_2( 13 , 13 , LexemEqually , new Equally < long double , long double >);
    add_to_command_table_2( 1 , 1 , LexemPlusEqual , new AddEqual < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemPlusEqual , new AddEqual < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemPlusEqual , new AddEqual < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemPlusEqual , new AddEqual < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemPlusEqual , new AddEqual < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemPlusEqual , new AddEqual < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemPlusEqual , new AddEqual < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemPlusEqual , new AddEqual < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemPlusEqual , new AddEqual < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemPlusEqual , new AddEqual < signed char , unsigned long long >);
    add_to_command_table_2( 1 , 11 , LexemPlusEqual , new AddEqual < signed char , float >);
    add_to_command_table_2( 1 , 12 , LexemPlusEqual , new AddEqual < signed char , double >);
    add_to_command_table_2( 1 , 13 , LexemPlusEqual , new AddEqual < signed char , long double >);
    add_to_command_table_2( 2 , 1 , LexemPlusEqual , new AddEqual < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemPlusEqual , new AddEqual < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemPlusEqual , new AddEqual < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemPlusEqual , new AddEqual < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemPlusEqual , new AddEqual < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemPlusEqual , new AddEqual < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemPlusEqual , new AddEqual < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemPlusEqual , new AddEqual < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemPlusEqual , new AddEqual < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemPlusEqual , new AddEqual < unsigned char , unsigned long long >);
    add_to_command_table_2( 2 , 11 , LexemPlusEqual , new AddEqual < unsigned char , float >);
    add_to_command_table_2( 2 , 12 , LexemPlusEqual , new AddEqual < unsigned char , double >);
    add_to_command_table_2( 2 , 13 , LexemPlusEqual , new AddEqual < unsigned char , long double >);
    add_to_command_table_2( 3 , 1 , LexemPlusEqual , new AddEqual < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemPlusEqual , new AddEqual < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemPlusEqual , new AddEqual < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemPlusEqual , new AddEqual < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemPlusEqual , new AddEqual < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemPlusEqual , new AddEqual < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemPlusEqual , new AddEqual < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemPlusEqual , new AddEqual < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemPlusEqual , new AddEqual < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemPlusEqual , new AddEqual < signed short , unsigned long long >);
    add_to_command_table_2( 3 , 11 , LexemPlusEqual , new AddEqual < signed short , float >);
    add_to_command_table_2( 3 , 12 , LexemPlusEqual , new AddEqual < signed short , double >);
    add_to_command_table_2( 3 , 13 , LexemPlusEqual , new AddEqual < signed short , long double >);
    add_to_command_table_2( 4 , 1 , LexemPlusEqual , new AddEqual < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemPlusEqual , new AddEqual < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemPlusEqual , new AddEqual < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemPlusEqual , new AddEqual < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemPlusEqual , new AddEqual < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemPlusEqual , new AddEqual < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemPlusEqual , new AddEqual < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemPlusEqual , new AddEqual < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemPlusEqual , new AddEqual < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemPlusEqual , new AddEqual < unsigned short , unsigned long long >);
    add_to_command_table_2( 4 , 11 , LexemPlusEqual , new AddEqual < unsigned short , float >);
    add_to_command_table_2( 4 , 12 , LexemPlusEqual , new AddEqual < unsigned short , double >);
    add_to_command_table_2( 4 , 13 , LexemPlusEqual , new AddEqual < unsigned short , long double >);
    add_to_command_table_2( 5 , 1 , LexemPlusEqual , new AddEqual < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemPlusEqual , new AddEqual < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemPlusEqual , new AddEqual < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemPlusEqual , new AddEqual < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemPlusEqual , new AddEqual < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemPlusEqual , new AddEqual < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemPlusEqual , new AddEqual < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemPlusEqual , new AddEqual < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemPlusEqual , new AddEqual < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemPlusEqual , new AddEqual < signed int , unsigned long long >);
    add_to_command_table_2( 5 , 11 , LexemPlusEqual , new AddEqual < signed int , float >);
    add_to_command_table_2( 5 , 12 , LexemPlusEqual , new AddEqual < signed int , double >);
    add_to_command_table_2( 5 , 13 , LexemPlusEqual , new AddEqual < signed int , long double >);
    add_to_command_table_2( 6 , 1 , LexemPlusEqual , new AddEqual < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemPlusEqual , new AddEqual < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemPlusEqual , new AddEqual < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemPlusEqual , new AddEqual < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemPlusEqual , new AddEqual < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemPlusEqual , new AddEqual < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemPlusEqual , new AddEqual < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemPlusEqual , new AddEqual < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemPlusEqual , new AddEqual < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemPlusEqual , new AddEqual < unsigned int , unsigned long long >);
    add_to_command_table_2( 6 , 11 , LexemPlusEqual , new AddEqual < unsigned int , float >);
    add_to_command_table_2( 6 , 12 , LexemPlusEqual , new AddEqual < unsigned int , double >);
    add_to_command_table_2( 6 , 13 , LexemPlusEqual , new AddEqual < unsigned int , long double >);
    add_to_command_table_2( 7 , 1 , LexemPlusEqual , new AddEqual < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemPlusEqual , new AddEqual < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemPlusEqual , new AddEqual < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemPlusEqual , new AddEqual < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemPlusEqual , new AddEqual < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemPlusEqual , new AddEqual < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemPlusEqual , new AddEqual < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemPlusEqual , new AddEqual < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemPlusEqual , new AddEqual < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemPlusEqual , new AddEqual < signed long , unsigned long long >);
    add_to_command_table_2( 7 , 11 , LexemPlusEqual , new AddEqual < signed long , float >);
    add_to_command_table_2( 7 , 12 , LexemPlusEqual , new AddEqual < signed long , double >);
    add_to_command_table_2( 7 , 13 , LexemPlusEqual , new AddEqual < signed long , long double >);
    add_to_command_table_2( 8 , 1 , LexemPlusEqual , new AddEqual < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemPlusEqual , new AddEqual < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemPlusEqual , new AddEqual < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemPlusEqual , new AddEqual < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemPlusEqual , new AddEqual < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemPlusEqual , new AddEqual < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemPlusEqual , new AddEqual < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemPlusEqual , new AddEqual < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemPlusEqual , new AddEqual < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemPlusEqual , new AddEqual < unsigned long , unsigned long long >);
    add_to_command_table_2( 8 , 11 , LexemPlusEqual , new AddEqual < unsigned long , float >);
    add_to_command_table_2( 8 , 12 , LexemPlusEqual , new AddEqual < unsigned long , double >);
    add_to_command_table_2( 8 , 13 , LexemPlusEqual , new AddEqual < unsigned long , long double >);
    add_to_command_table_2( 9 , 1 , LexemPlusEqual , new AddEqual < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemPlusEqual , new AddEqual < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemPlusEqual , new AddEqual < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemPlusEqual , new AddEqual < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemPlusEqual , new AddEqual < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemPlusEqual , new AddEqual < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemPlusEqual , new AddEqual < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemPlusEqual , new AddEqual < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemPlusEqual , new AddEqual < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemPlusEqual , new AddEqual < signed long long , unsigned long long >);
    add_to_command_table_2( 9 , 11 , LexemPlusEqual , new AddEqual < signed long long , float >);
    add_to_command_table_2( 9 , 12 , LexemPlusEqual , new AddEqual < signed long long , double >);
    add_to_command_table_2( 9 , 13 , LexemPlusEqual , new AddEqual < signed long long , long double >);
    add_to_command_table_2( 10 , 1 , LexemPlusEqual , new AddEqual < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemPlusEqual , new AddEqual < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemPlusEqual , new AddEqual < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemPlusEqual , new AddEqual < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemPlusEqual , new AddEqual < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemPlusEqual , new AddEqual < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemPlusEqual , new AddEqual < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemPlusEqual , new AddEqual < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemPlusEqual , new AddEqual < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemPlusEqual , new AddEqual < unsigned long long , unsigned long long >);
    add_to_command_table_2( 10 , 11 , LexemPlusEqual , new AddEqual < unsigned long long , float >);
    add_to_command_table_2( 10 , 12 , LexemPlusEqual , new AddEqual < unsigned long long , double >);
    add_to_command_table_2( 10 , 13 , LexemPlusEqual , new AddEqual < unsigned long long , long double >);
    add_to_command_table_2( 11 , 1 , LexemPlusEqual , new AddEqual < float , signed char >);
    add_to_command_table_2( 11 , 2 , LexemPlusEqual , new AddEqual < float , unsigned char >);
    add_to_command_table_2( 11 , 3 , LexemPlusEqual , new AddEqual < float , signed short >);
    add_to_command_table_2( 11 , 4 , LexemPlusEqual , new AddEqual < float , unsigned short >);
    add_to_command_table_2( 11 , 5 , LexemPlusEqual , new AddEqual < float , signed int >);
    add_to_command_table_2( 11 , 6 , LexemPlusEqual , new AddEqual < float , unsigned int >);
    add_to_command_table_2( 11 , 7 , LexemPlusEqual , new AddEqual < float , signed long >);
    add_to_command_table_2( 11 , 8 , LexemPlusEqual , new AddEqual < float , unsigned long >);
    add_to_command_table_2( 11 , 9 , LexemPlusEqual , new AddEqual < float , signed long long >);
    add_to_command_table_2( 11 , 10 , LexemPlusEqual , new AddEqual < float , unsigned long long >);
    add_to_command_table_2( 11 , 11 , LexemPlusEqual , new AddEqual < float , float >);
    add_to_command_table_2( 11 , 12 , LexemPlusEqual , new AddEqual < float , double >);
    add_to_command_table_2( 11 , 13 , LexemPlusEqual , new AddEqual < float , long double >);
    add_to_command_table_2( 12 , 1 , LexemPlusEqual , new AddEqual < double , signed char >);
    add_to_command_table_2( 12 , 2 , LexemPlusEqual , new AddEqual < double , unsigned char >);
    add_to_command_table_2( 12 , 3 , LexemPlusEqual , new AddEqual < double , signed short >);
    add_to_command_table_2( 12 , 4 , LexemPlusEqual , new AddEqual < double , unsigned short >);
    add_to_command_table_2( 12 , 5 , LexemPlusEqual , new AddEqual < double , signed int >);
    add_to_command_table_2( 12 , 6 , LexemPlusEqual , new AddEqual < double , unsigned int >);
    add_to_command_table_2( 12 , 7 , LexemPlusEqual , new AddEqual < double , signed long >);
    add_to_command_table_2( 12 , 8 , LexemPlusEqual , new AddEqual < double , unsigned long >);
    add_to_command_table_2( 12 , 9 , LexemPlusEqual , new AddEqual < double , signed long long >);
    add_to_command_table_2( 12 , 10 , LexemPlusEqual , new AddEqual < double , unsigned long long >);
    add_to_command_table_2( 12 , 11 , LexemPlusEqual , new AddEqual < double , float >);
    add_to_command_table_2( 12 , 12 , LexemPlusEqual , new AddEqual < double , double >);
    add_to_command_table_2( 12 , 13 , LexemPlusEqual , new AddEqual < double , long double >);
    add_to_command_table_2( 13 , 1 , LexemPlusEqual , new AddEqual < long double , signed char >);
    add_to_command_table_2( 13 , 2 , LexemPlusEqual , new AddEqual < long double , unsigned char >);
    add_to_command_table_2( 13 , 3 , LexemPlusEqual , new AddEqual < long double , signed short >);
    add_to_command_table_2( 13 , 4 , LexemPlusEqual , new AddEqual < long double , unsigned short >);
    add_to_command_table_2( 13 , 5 , LexemPlusEqual , new AddEqual < long double , signed int >);
    add_to_command_table_2( 13 , 6 , LexemPlusEqual , new AddEqual < long double , unsigned int >);
    add_to_command_table_2( 13 , 7 , LexemPlusEqual , new AddEqual < long double , signed long >);
    add_to_command_table_2( 13 , 8 , LexemPlusEqual , new AddEqual < long double , unsigned long >);
    add_to_command_table_2( 13 , 9 , LexemPlusEqual , new AddEqual < long double , signed long long >);
    add_to_command_table_2( 13 , 10 , LexemPlusEqual , new AddEqual < long double , unsigned long long >);
    add_to_command_table_2( 13 , 11 , LexemPlusEqual , new AddEqual < long double , float >);
    add_to_command_table_2( 13 , 12 , LexemPlusEqual , new AddEqual < long double , double >);
    add_to_command_table_2( 13 , 13 , LexemPlusEqual , new AddEqual < long double , long double >);
    add_to_command_table_2( 1 , 1 , LexemMinusEqual , new SubEqual < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemMinusEqual , new SubEqual < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemMinusEqual , new SubEqual < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemMinusEqual , new SubEqual < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemMinusEqual , new SubEqual < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemMinusEqual , new SubEqual < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemMinusEqual , new SubEqual < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemMinusEqual , new SubEqual < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemMinusEqual , new SubEqual < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemMinusEqual , new SubEqual < signed char , unsigned long long >);
    add_to_command_table_2( 1 , 11 , LexemMinusEqual , new SubEqual < signed char , float >);
    add_to_command_table_2( 1 , 12 , LexemMinusEqual , new SubEqual < signed char , double >);
    add_to_command_table_2( 1 , 13 , LexemMinusEqual , new SubEqual < signed char , long double >);
    add_to_command_table_2( 2 , 1 , LexemMinusEqual , new SubEqual < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemMinusEqual , new SubEqual < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemMinusEqual , new SubEqual < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemMinusEqual , new SubEqual < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemMinusEqual , new SubEqual < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemMinusEqual , new SubEqual < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemMinusEqual , new SubEqual < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemMinusEqual , new SubEqual < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemMinusEqual , new SubEqual < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemMinusEqual , new SubEqual < unsigned char , unsigned long long >);
    add_to_command_table_2( 2 , 11 , LexemMinusEqual , new SubEqual < unsigned char , float >);
    add_to_command_table_2( 2 , 12 , LexemMinusEqual , new SubEqual < unsigned char , double >);
    add_to_command_table_2( 2 , 13 , LexemMinusEqual , new SubEqual < unsigned char , long double >);
    add_to_command_table_2( 3 , 1 , LexemMinusEqual , new SubEqual < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemMinusEqual , new SubEqual < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemMinusEqual , new SubEqual < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemMinusEqual , new SubEqual < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemMinusEqual , new SubEqual < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemMinusEqual , new SubEqual < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemMinusEqual , new SubEqual < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemMinusEqual , new SubEqual < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemMinusEqual , new SubEqual < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemMinusEqual , new SubEqual < signed short , unsigned long long >);
    add_to_command_table_2( 3 , 11 , LexemMinusEqual , new SubEqual < signed short , float >);
    add_to_command_table_2( 3 , 12 , LexemMinusEqual , new SubEqual < signed short , double >);
    add_to_command_table_2( 3 , 13 , LexemMinusEqual , new SubEqual < signed short , long double >);
    add_to_command_table_2( 4 , 1 , LexemMinusEqual , new SubEqual < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemMinusEqual , new SubEqual < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemMinusEqual , new SubEqual < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemMinusEqual , new SubEqual < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemMinusEqual , new SubEqual < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemMinusEqual , new SubEqual < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemMinusEqual , new SubEqual < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemMinusEqual , new SubEqual < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemMinusEqual , new SubEqual < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemMinusEqual , new SubEqual < unsigned short , unsigned long long >);
    add_to_command_table_2( 4 , 11 , LexemMinusEqual , new SubEqual < unsigned short , float >);
    add_to_command_table_2( 4 , 12 , LexemMinusEqual , new SubEqual < unsigned short , double >);
    add_to_command_table_2( 4 , 13 , LexemMinusEqual , new SubEqual < unsigned short , long double >);
    add_to_command_table_2( 5 , 1 , LexemMinusEqual , new SubEqual < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemMinusEqual , new SubEqual < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemMinusEqual , new SubEqual < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemMinusEqual , new SubEqual < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemMinusEqual , new SubEqual < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemMinusEqual , new SubEqual < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemMinusEqual , new SubEqual < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemMinusEqual , new SubEqual < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemMinusEqual , new SubEqual < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemMinusEqual , new SubEqual < signed int , unsigned long long >);
    add_to_command_table_2( 5 , 11 , LexemMinusEqual , new SubEqual < signed int , float >);
    add_to_command_table_2( 5 , 12 , LexemMinusEqual , new SubEqual < signed int , double >);
    add_to_command_table_2( 5 , 13 , LexemMinusEqual , new SubEqual < signed int , long double >);
    add_to_command_table_2( 6 , 1 , LexemMinusEqual , new SubEqual < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemMinusEqual , new SubEqual < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemMinusEqual , new SubEqual < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemMinusEqual , new SubEqual < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemMinusEqual , new SubEqual < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemMinusEqual , new SubEqual < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemMinusEqual , new SubEqual < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemMinusEqual , new SubEqual < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemMinusEqual , new SubEqual < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemMinusEqual , new SubEqual < unsigned int , unsigned long long >);
    add_to_command_table_2( 6 , 11 , LexemMinusEqual , new SubEqual < unsigned int , float >);
    add_to_command_table_2( 6 , 12 , LexemMinusEqual , new SubEqual < unsigned int , double >);
    add_to_command_table_2( 6 , 13 , LexemMinusEqual , new SubEqual < unsigned int , long double >);
    add_to_command_table_2( 7 , 1 , LexemMinusEqual , new SubEqual < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemMinusEqual , new SubEqual < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemMinusEqual , new SubEqual < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemMinusEqual , new SubEqual < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemMinusEqual , new SubEqual < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemMinusEqual , new SubEqual < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemMinusEqual , new SubEqual < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemMinusEqual , new SubEqual < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemMinusEqual , new SubEqual < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemMinusEqual , new SubEqual < signed long , unsigned long long >);
    add_to_command_table_2( 7 , 11 , LexemMinusEqual , new SubEqual < signed long , float >);
    add_to_command_table_2( 7 , 12 , LexemMinusEqual , new SubEqual < signed long , double >);
    add_to_command_table_2( 7 , 13 , LexemMinusEqual , new SubEqual < signed long , long double >);
    add_to_command_table_2( 8 , 1 , LexemMinusEqual , new SubEqual < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemMinusEqual , new SubEqual < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemMinusEqual , new SubEqual < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemMinusEqual , new SubEqual < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemMinusEqual , new SubEqual < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemMinusEqual , new SubEqual < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemMinusEqual , new SubEqual < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemMinusEqual , new SubEqual < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemMinusEqual , new SubEqual < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemMinusEqual , new SubEqual < unsigned long , unsigned long long >);
    add_to_command_table_2( 8 , 11 , LexemMinusEqual , new SubEqual < unsigned long , float >);
    add_to_command_table_2( 8 , 12 , LexemMinusEqual , new SubEqual < unsigned long , double >);
    add_to_command_table_2( 8 , 13 , LexemMinusEqual , new SubEqual < unsigned long , long double >);
    add_to_command_table_2( 9 , 1 , LexemMinusEqual , new SubEqual < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemMinusEqual , new SubEqual < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemMinusEqual , new SubEqual < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemMinusEqual , new SubEqual < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemMinusEqual , new SubEqual < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemMinusEqual , new SubEqual < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemMinusEqual , new SubEqual < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemMinusEqual , new SubEqual < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemMinusEqual , new SubEqual < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemMinusEqual , new SubEqual < signed long long , unsigned long long >);
    add_to_command_table_2( 9 , 11 , LexemMinusEqual , new SubEqual < signed long long , float >);
    add_to_command_table_2( 9 , 12 , LexemMinusEqual , new SubEqual < signed long long , double >);
    add_to_command_table_2( 9 , 13 , LexemMinusEqual , new SubEqual < signed long long , long double >);
    add_to_command_table_2( 10 , 1 , LexemMinusEqual , new SubEqual < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemMinusEqual , new SubEqual < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemMinusEqual , new SubEqual < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemMinusEqual , new SubEqual < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemMinusEqual , new SubEqual < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemMinusEqual , new SubEqual < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemMinusEqual , new SubEqual < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemMinusEqual , new SubEqual < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemMinusEqual , new SubEqual < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemMinusEqual , new SubEqual < unsigned long long , unsigned long long >);
    add_to_command_table_2( 10 , 11 , LexemMinusEqual , new SubEqual < unsigned long long , float >);
    add_to_command_table_2( 10 , 12 , LexemMinusEqual , new SubEqual < unsigned long long , double >);
    add_to_command_table_2( 10 , 13 , LexemMinusEqual , new SubEqual < unsigned long long , long double >);
    add_to_command_table_2( 11 , 1 , LexemMinusEqual , new SubEqual < float , signed char >);
    add_to_command_table_2( 11 , 2 , LexemMinusEqual , new SubEqual < float , unsigned char >);
    add_to_command_table_2( 11 , 3 , LexemMinusEqual , new SubEqual < float , signed short >);
    add_to_command_table_2( 11 , 4 , LexemMinusEqual , new SubEqual < float , unsigned short >);
    add_to_command_table_2( 11 , 5 , LexemMinusEqual , new SubEqual < float , signed int >);
    add_to_command_table_2( 11 , 6 , LexemMinusEqual , new SubEqual < float , unsigned int >);
    add_to_command_table_2( 11 , 7 , LexemMinusEqual , new SubEqual < float , signed long >);
    add_to_command_table_2( 11 , 8 , LexemMinusEqual , new SubEqual < float , unsigned long >);
    add_to_command_table_2( 11 , 9 , LexemMinusEqual , new SubEqual < float , signed long long >);
    add_to_command_table_2( 11 , 10 , LexemMinusEqual , new SubEqual < float , unsigned long long >);
    add_to_command_table_2( 11 , 11 , LexemMinusEqual , new SubEqual < float , float >);
    add_to_command_table_2( 11 , 12 , LexemMinusEqual , new SubEqual < float , double >);
    add_to_command_table_2( 11 , 13 , LexemMinusEqual , new SubEqual < float , long double >);
    add_to_command_table_2( 12 , 1 , LexemMinusEqual , new SubEqual < double , signed char >);
    add_to_command_table_2( 12 , 2 , LexemMinusEqual , new SubEqual < double , unsigned char >);
    add_to_command_table_2( 12 , 3 , LexemMinusEqual , new SubEqual < double , signed short >);
    add_to_command_table_2( 12 , 4 , LexemMinusEqual , new SubEqual < double , unsigned short >);
    add_to_command_table_2( 12 , 5 , LexemMinusEqual , new SubEqual < double , signed int >);
    add_to_command_table_2( 12 , 6 , LexemMinusEqual , new SubEqual < double , unsigned int >);
    add_to_command_table_2( 12 , 7 , LexemMinusEqual , new SubEqual < double , signed long >);
    add_to_command_table_2( 12 , 8 , LexemMinusEqual , new SubEqual < double , unsigned long >);
    add_to_command_table_2( 12 , 9 , LexemMinusEqual , new SubEqual < double , signed long long >);
    add_to_command_table_2( 12 , 10 , LexemMinusEqual , new SubEqual < double , unsigned long long >);
    add_to_command_table_2( 12 , 11 , LexemMinusEqual , new SubEqual < double , float >);
    add_to_command_table_2( 12 , 12 , LexemMinusEqual , new SubEqual < double , double >);
    add_to_command_table_2( 12 , 13 , LexemMinusEqual , new SubEqual < double , long double >);
    add_to_command_table_2( 13 , 1 , LexemMinusEqual , new SubEqual < long double , signed char >);
    add_to_command_table_2( 13 , 2 , LexemMinusEqual , new SubEqual < long double , unsigned char >);
    add_to_command_table_2( 13 , 3 , LexemMinusEqual , new SubEqual < long double , signed short >);
    add_to_command_table_2( 13 , 4 , LexemMinusEqual , new SubEqual < long double , unsigned short >);
    add_to_command_table_2( 13 , 5 , LexemMinusEqual , new SubEqual < long double , signed int >);
    add_to_command_table_2( 13 , 6 , LexemMinusEqual , new SubEqual < long double , unsigned int >);
    add_to_command_table_2( 13 , 7 , LexemMinusEqual , new SubEqual < long double , signed long >);
    add_to_command_table_2( 13 , 8 , LexemMinusEqual , new SubEqual < long double , unsigned long >);
    add_to_command_table_2( 13 , 9 , LexemMinusEqual , new SubEqual < long double , signed long long >);
    add_to_command_table_2( 13 , 10 , LexemMinusEqual , new SubEqual < long double , unsigned long long >);
    add_to_command_table_2( 13 , 11 , LexemMinusEqual , new SubEqual < long double , float >);
    add_to_command_table_2( 13 , 12 , LexemMinusEqual , new SubEqual < long double , double >);
    add_to_command_table_2( 13 , 13 , LexemMinusEqual , new SubEqual < long double , long double >);
    add_to_command_table_2( 1 , 1 , LexemAsteriskEqual , new MulEqual < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemAsteriskEqual , new MulEqual < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemAsteriskEqual , new MulEqual < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemAsteriskEqual , new MulEqual < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemAsteriskEqual , new MulEqual < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemAsteriskEqual , new MulEqual < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemAsteriskEqual , new MulEqual < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemAsteriskEqual , new MulEqual < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemAsteriskEqual , new MulEqual < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemAsteriskEqual , new MulEqual < signed char , unsigned long long >);
    add_to_command_table_2( 1 , 11 , LexemAsteriskEqual , new MulEqual < signed char , float >);
    add_to_command_table_2( 1 , 12 , LexemAsteriskEqual , new MulEqual < signed char , double >);
    add_to_command_table_2( 1 , 13 , LexemAsteriskEqual , new MulEqual < signed char , long double >);
    add_to_command_table_2( 2 , 1 , LexemAsteriskEqual , new MulEqual < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemAsteriskEqual , new MulEqual < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemAsteriskEqual , new MulEqual < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemAsteriskEqual , new MulEqual < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemAsteriskEqual , new MulEqual < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemAsteriskEqual , new MulEqual < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemAsteriskEqual , new MulEqual < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemAsteriskEqual , new MulEqual < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemAsteriskEqual , new MulEqual < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemAsteriskEqual , new MulEqual < unsigned char , unsigned long long >);
    add_to_command_table_2( 2 , 11 , LexemAsteriskEqual , new MulEqual < unsigned char , float >);
    add_to_command_table_2( 2 , 12 , LexemAsteriskEqual , new MulEqual < unsigned char , double >);
    add_to_command_table_2( 2 , 13 , LexemAsteriskEqual , new MulEqual < unsigned char , long double >);
    add_to_command_table_2( 3 , 1 , LexemAsteriskEqual , new MulEqual < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemAsteriskEqual , new MulEqual < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemAsteriskEqual , new MulEqual < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemAsteriskEqual , new MulEqual < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemAsteriskEqual , new MulEqual < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemAsteriskEqual , new MulEqual < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemAsteriskEqual , new MulEqual < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemAsteriskEqual , new MulEqual < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemAsteriskEqual , new MulEqual < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemAsteriskEqual , new MulEqual < signed short , unsigned long long >);
    add_to_command_table_2( 3 , 11 , LexemAsteriskEqual , new MulEqual < signed short , float >);
    add_to_command_table_2( 3 , 12 , LexemAsteriskEqual , new MulEqual < signed short , double >);
    add_to_command_table_2( 3 , 13 , LexemAsteriskEqual , new MulEqual < signed short , long double >);
    add_to_command_table_2( 4 , 1 , LexemAsteriskEqual , new MulEqual < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemAsteriskEqual , new MulEqual < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemAsteriskEqual , new MulEqual < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemAsteriskEqual , new MulEqual < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemAsteriskEqual , new MulEqual < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemAsteriskEqual , new MulEqual < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemAsteriskEqual , new MulEqual < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemAsteriskEqual , new MulEqual < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemAsteriskEqual , new MulEqual < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemAsteriskEqual , new MulEqual < unsigned short , unsigned long long >);
    add_to_command_table_2( 4 , 11 , LexemAsteriskEqual , new MulEqual < unsigned short , float >);
    add_to_command_table_2( 4 , 12 , LexemAsteriskEqual , new MulEqual < unsigned short , double >);
    add_to_command_table_2( 4 , 13 , LexemAsteriskEqual , new MulEqual < unsigned short , long double >);
    add_to_command_table_2( 5 , 1 , LexemAsteriskEqual , new MulEqual < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemAsteriskEqual , new MulEqual < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemAsteriskEqual , new MulEqual < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemAsteriskEqual , new MulEqual < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemAsteriskEqual , new MulEqual < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemAsteriskEqual , new MulEqual < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemAsteriskEqual , new MulEqual < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemAsteriskEqual , new MulEqual < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemAsteriskEqual , new MulEqual < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemAsteriskEqual , new MulEqual < signed int , unsigned long long >);
    add_to_command_table_2( 5 , 11 , LexemAsteriskEqual , new MulEqual < signed int , float >);
    add_to_command_table_2( 5 , 12 , LexemAsteriskEqual , new MulEqual < signed int , double >);
    add_to_command_table_2( 5 , 13 , LexemAsteriskEqual , new MulEqual < signed int , long double >);
    add_to_command_table_2( 6 , 1 , LexemAsteriskEqual , new MulEqual < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemAsteriskEqual , new MulEqual < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemAsteriskEqual , new MulEqual < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemAsteriskEqual , new MulEqual < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemAsteriskEqual , new MulEqual < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemAsteriskEqual , new MulEqual < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemAsteriskEqual , new MulEqual < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemAsteriskEqual , new MulEqual < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemAsteriskEqual , new MulEqual < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemAsteriskEqual , new MulEqual < unsigned int , unsigned long long >);
    add_to_command_table_2( 6 , 11 , LexemAsteriskEqual , new MulEqual < unsigned int , float >);
    add_to_command_table_2( 6 , 12 , LexemAsteriskEqual , new MulEqual < unsigned int , double >);
    add_to_command_table_2( 6 , 13 , LexemAsteriskEqual , new MulEqual < unsigned int , long double >);
    add_to_command_table_2( 7 , 1 , LexemAsteriskEqual , new MulEqual < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemAsteriskEqual , new MulEqual < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemAsteriskEqual , new MulEqual < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemAsteriskEqual , new MulEqual < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemAsteriskEqual , new MulEqual < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemAsteriskEqual , new MulEqual < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemAsteriskEqual , new MulEqual < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemAsteriskEqual , new MulEqual < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemAsteriskEqual , new MulEqual < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemAsteriskEqual , new MulEqual < signed long , unsigned long long >);
    add_to_command_table_2( 7 , 11 , LexemAsteriskEqual , new MulEqual < signed long , float >);
    add_to_command_table_2( 7 , 12 , LexemAsteriskEqual , new MulEqual < signed long , double >);
    add_to_command_table_2( 7 , 13 , LexemAsteriskEqual , new MulEqual < signed long , long double >);
    add_to_command_table_2( 8 , 1 , LexemAsteriskEqual , new MulEqual < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemAsteriskEqual , new MulEqual < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemAsteriskEqual , new MulEqual < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemAsteriskEqual , new MulEqual < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemAsteriskEqual , new MulEqual < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemAsteriskEqual , new MulEqual < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemAsteriskEqual , new MulEqual < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemAsteriskEqual , new MulEqual < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemAsteriskEqual , new MulEqual < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemAsteriskEqual , new MulEqual < unsigned long , unsigned long long >);
    add_to_command_table_2( 8 , 11 , LexemAsteriskEqual , new MulEqual < unsigned long , float >);
    add_to_command_table_2( 8 , 12 , LexemAsteriskEqual , new MulEqual < unsigned long , double >);
    add_to_command_table_2( 8 , 13 , LexemAsteriskEqual , new MulEqual < unsigned long , long double >);
    add_to_command_table_2( 9 , 1 , LexemAsteriskEqual , new MulEqual < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemAsteriskEqual , new MulEqual < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemAsteriskEqual , new MulEqual < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemAsteriskEqual , new MulEqual < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemAsteriskEqual , new MulEqual < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemAsteriskEqual , new MulEqual < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemAsteriskEqual , new MulEqual < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemAsteriskEqual , new MulEqual < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemAsteriskEqual , new MulEqual < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemAsteriskEqual , new MulEqual < signed long long , unsigned long long >);
    add_to_command_table_2( 9 , 11 , LexemAsteriskEqual , new MulEqual < signed long long , float >);
    add_to_command_table_2( 9 , 12 , LexemAsteriskEqual , new MulEqual < signed long long , double >);
    add_to_command_table_2( 9 , 13 , LexemAsteriskEqual , new MulEqual < signed long long , long double >);
    add_to_command_table_2( 10 , 1 , LexemAsteriskEqual , new MulEqual < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemAsteriskEqual , new MulEqual < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemAsteriskEqual , new MulEqual < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemAsteriskEqual , new MulEqual < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemAsteriskEqual , new MulEqual < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemAsteriskEqual , new MulEqual < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemAsteriskEqual , new MulEqual < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemAsteriskEqual , new MulEqual < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemAsteriskEqual , new MulEqual < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemAsteriskEqual , new MulEqual < unsigned long long , unsigned long long >);
    add_to_command_table_2( 10 , 11 , LexemAsteriskEqual , new MulEqual < unsigned long long , float >);
    add_to_command_table_2( 10 , 12 , LexemAsteriskEqual , new MulEqual < unsigned long long , double >);
    add_to_command_table_2( 10 , 13 , LexemAsteriskEqual , new MulEqual < unsigned long long , long double >);
    add_to_command_table_2( 11 , 1 , LexemAsteriskEqual , new MulEqual < float , signed char >);
    add_to_command_table_2( 11 , 2 , LexemAsteriskEqual , new MulEqual < float , unsigned char >);
    add_to_command_table_2( 11 , 3 , LexemAsteriskEqual , new MulEqual < float , signed short >);
    add_to_command_table_2( 11 , 4 , LexemAsteriskEqual , new MulEqual < float , unsigned short >);
    add_to_command_table_2( 11 , 5 , LexemAsteriskEqual , new MulEqual < float , signed int >);
    add_to_command_table_2( 11 , 6 , LexemAsteriskEqual , new MulEqual < float , unsigned int >);
    add_to_command_table_2( 11 , 7 , LexemAsteriskEqual , new MulEqual < float , signed long >);
    add_to_command_table_2( 11 , 8 , LexemAsteriskEqual , new MulEqual < float , unsigned long >);
    add_to_command_table_2( 11 , 9 , LexemAsteriskEqual , new MulEqual < float , signed long long >);
    add_to_command_table_2( 11 , 10 , LexemAsteriskEqual , new MulEqual < float , unsigned long long >);
    add_to_command_table_2( 11 , 11 , LexemAsteriskEqual , new MulEqual < float , float >);
    add_to_command_table_2( 11 , 12 , LexemAsteriskEqual , new MulEqual < float , double >);
    add_to_command_table_2( 11 , 13 , LexemAsteriskEqual , new MulEqual < float , long double >);
    add_to_command_table_2( 12 , 1 , LexemAsteriskEqual , new MulEqual < double , signed char >);
    add_to_command_table_2( 12 , 2 , LexemAsteriskEqual , new MulEqual < double , unsigned char >);
    add_to_command_table_2( 12 , 3 , LexemAsteriskEqual , new MulEqual < double , signed short >);
    add_to_command_table_2( 12 , 4 , LexemAsteriskEqual , new MulEqual < double , unsigned short >);
    add_to_command_table_2( 12 , 5 , LexemAsteriskEqual , new MulEqual < double , signed int >);
    add_to_command_table_2( 12 , 6 , LexemAsteriskEqual , new MulEqual < double , unsigned int >);
    add_to_command_table_2( 12 , 7 , LexemAsteriskEqual , new MulEqual < double , signed long >);
    add_to_command_table_2( 12 , 8 , LexemAsteriskEqual , new MulEqual < double , unsigned long >);
    add_to_command_table_2( 12 , 9 , LexemAsteriskEqual , new MulEqual < double , signed long long >);
    add_to_command_table_2( 12 , 10 , LexemAsteriskEqual , new MulEqual < double , unsigned long long >);
    add_to_command_table_2( 12 , 11 , LexemAsteriskEqual , new MulEqual < double , float >);
    add_to_command_table_2( 12 , 12 , LexemAsteriskEqual , new MulEqual < double , double >);
    add_to_command_table_2( 12 , 13 , LexemAsteriskEqual , new MulEqual < double , long double >);
    add_to_command_table_2( 13 , 1 , LexemAsteriskEqual , new MulEqual < long double , signed char >);
    add_to_command_table_2( 13 , 2 , LexemAsteriskEqual , new MulEqual < long double , unsigned char >);
    add_to_command_table_2( 13 , 3 , LexemAsteriskEqual , new MulEqual < long double , signed short >);
    add_to_command_table_2( 13 , 4 , LexemAsteriskEqual , new MulEqual < long double , unsigned short >);
    add_to_command_table_2( 13 , 5 , LexemAsteriskEqual , new MulEqual < long double , signed int >);
    add_to_command_table_2( 13 , 6 , LexemAsteriskEqual , new MulEqual < long double , unsigned int >);
    add_to_command_table_2( 13 , 7 , LexemAsteriskEqual , new MulEqual < long double , signed long >);
    add_to_command_table_2( 13 , 8 , LexemAsteriskEqual , new MulEqual < long double , unsigned long >);
    add_to_command_table_2( 13 , 9 , LexemAsteriskEqual , new MulEqual < long double , signed long long >);
    add_to_command_table_2( 13 , 10 , LexemAsteriskEqual , new MulEqual < long double , unsigned long long >);
    add_to_command_table_2( 13 , 11 , LexemAsteriskEqual , new MulEqual < long double , float >);
    add_to_command_table_2( 13 , 12 , LexemAsteriskEqual , new MulEqual < long double , double >);
    add_to_command_table_2( 13 , 13 , LexemAsteriskEqual , new MulEqual < long double , long double >);
    add_to_command_table_2( 1 , 1 , LexemSlashEqual , new DivEqual < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemSlashEqual , new DivEqual < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemSlashEqual , new DivEqual < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemSlashEqual , new DivEqual < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemSlashEqual , new DivEqual < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemSlashEqual , new DivEqual < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemSlashEqual , new DivEqual < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemSlashEqual , new DivEqual < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemSlashEqual , new DivEqual < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemSlashEqual , new DivEqual < signed char , unsigned long long >);
    add_to_command_table_2( 1 , 11 , LexemSlashEqual , new DivEqual < signed char , float >);
    add_to_command_table_2( 1 , 12 , LexemSlashEqual , new DivEqual < signed char , double >);
    add_to_command_table_2( 1 , 13 , LexemSlashEqual , new DivEqual < signed char , long double >);
    add_to_command_table_2( 2 , 1 , LexemSlashEqual , new DivEqual < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemSlashEqual , new DivEqual < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemSlashEqual , new DivEqual < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemSlashEqual , new DivEqual < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemSlashEqual , new DivEqual < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemSlashEqual , new DivEqual < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemSlashEqual , new DivEqual < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemSlashEqual , new DivEqual < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemSlashEqual , new DivEqual < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemSlashEqual , new DivEqual < unsigned char , unsigned long long >);
    add_to_command_table_2( 2 , 11 , LexemSlashEqual , new DivEqual < unsigned char , float >);
    add_to_command_table_2( 2 , 12 , LexemSlashEqual , new DivEqual < unsigned char , double >);
    add_to_command_table_2( 2 , 13 , LexemSlashEqual , new DivEqual < unsigned char , long double >);
    add_to_command_table_2( 3 , 1 , LexemSlashEqual , new DivEqual < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemSlashEqual , new DivEqual < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemSlashEqual , new DivEqual < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemSlashEqual , new DivEqual < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemSlashEqual , new DivEqual < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemSlashEqual , new DivEqual < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemSlashEqual , new DivEqual < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemSlashEqual , new DivEqual < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemSlashEqual , new DivEqual < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemSlashEqual , new DivEqual < signed short , unsigned long long >);
    add_to_command_table_2( 3 , 11 , LexemSlashEqual , new DivEqual < signed short , float >);
    add_to_command_table_2( 3 , 12 , LexemSlashEqual , new DivEqual < signed short , double >);
    add_to_command_table_2( 3 , 13 , LexemSlashEqual , new DivEqual < signed short , long double >);
    add_to_command_table_2( 4 , 1 , LexemSlashEqual , new DivEqual < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemSlashEqual , new DivEqual < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemSlashEqual , new DivEqual < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemSlashEqual , new DivEqual < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemSlashEqual , new DivEqual < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemSlashEqual , new DivEqual < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemSlashEqual , new DivEqual < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemSlashEqual , new DivEqual < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemSlashEqual , new DivEqual < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemSlashEqual , new DivEqual < unsigned short , unsigned long long >);
    add_to_command_table_2( 4 , 11 , LexemSlashEqual , new DivEqual < unsigned short , float >);
    add_to_command_table_2( 4 , 12 , LexemSlashEqual , new DivEqual < unsigned short , double >);
    add_to_command_table_2( 4 , 13 , LexemSlashEqual , new DivEqual < unsigned short , long double >);
    add_to_command_table_2( 5 , 1 , LexemSlashEqual , new DivEqual < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemSlashEqual , new DivEqual < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemSlashEqual , new DivEqual < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemSlashEqual , new DivEqual < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemSlashEqual , new DivEqual < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemSlashEqual , new DivEqual < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemSlashEqual , new DivEqual < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemSlashEqual , new DivEqual < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemSlashEqual , new DivEqual < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemSlashEqual , new DivEqual < signed int , unsigned long long >);
    add_to_command_table_2( 5 , 11 , LexemSlashEqual , new DivEqual < signed int , float >);
    add_to_command_table_2( 5 , 12 , LexemSlashEqual , new DivEqual < signed int , double >);
    add_to_command_table_2( 5 , 13 , LexemSlashEqual , new DivEqual < signed int , long double >);
    add_to_command_table_2( 6 , 1 , LexemSlashEqual , new DivEqual < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemSlashEqual , new DivEqual < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemSlashEqual , new DivEqual < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemSlashEqual , new DivEqual < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemSlashEqual , new DivEqual < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemSlashEqual , new DivEqual < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemSlashEqual , new DivEqual < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemSlashEqual , new DivEqual < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemSlashEqual , new DivEqual < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemSlashEqual , new DivEqual < unsigned int , unsigned long long >);
    add_to_command_table_2( 6 , 11 , LexemSlashEqual , new DivEqual < unsigned int , float >);
    add_to_command_table_2( 6 , 12 , LexemSlashEqual , new DivEqual < unsigned int , double >);
    add_to_command_table_2( 6 , 13 , LexemSlashEqual , new DivEqual < unsigned int , long double >);
    add_to_command_table_2( 7 , 1 , LexemSlashEqual , new DivEqual < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemSlashEqual , new DivEqual < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemSlashEqual , new DivEqual < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemSlashEqual , new DivEqual < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemSlashEqual , new DivEqual < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemSlashEqual , new DivEqual < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemSlashEqual , new DivEqual < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemSlashEqual , new DivEqual < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemSlashEqual , new DivEqual < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemSlashEqual , new DivEqual < signed long , unsigned long long >);
    add_to_command_table_2( 7 , 11 , LexemSlashEqual , new DivEqual < signed long , float >);
    add_to_command_table_2( 7 , 12 , LexemSlashEqual , new DivEqual < signed long , double >);
    add_to_command_table_2( 7 , 13 , LexemSlashEqual , new DivEqual < signed long , long double >);
    add_to_command_table_2( 8 , 1 , LexemSlashEqual , new DivEqual < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemSlashEqual , new DivEqual < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemSlashEqual , new DivEqual < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemSlashEqual , new DivEqual < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemSlashEqual , new DivEqual < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemSlashEqual , new DivEqual < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemSlashEqual , new DivEqual < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemSlashEqual , new DivEqual < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemSlashEqual , new DivEqual < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemSlashEqual , new DivEqual < unsigned long , unsigned long long >);
    add_to_command_table_2( 8 , 11 , LexemSlashEqual , new DivEqual < unsigned long , float >);
    add_to_command_table_2( 8 , 12 , LexemSlashEqual , new DivEqual < unsigned long , double >);
    add_to_command_table_2( 8 , 13 , LexemSlashEqual , new DivEqual < unsigned long , long double >);
    add_to_command_table_2( 9 , 1 , LexemSlashEqual , new DivEqual < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemSlashEqual , new DivEqual < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemSlashEqual , new DivEqual < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemSlashEqual , new DivEqual < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemSlashEqual , new DivEqual < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemSlashEqual , new DivEqual < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemSlashEqual , new DivEqual < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemSlashEqual , new DivEqual < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemSlashEqual , new DivEqual < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemSlashEqual , new DivEqual < signed long long , unsigned long long >);
    add_to_command_table_2( 9 , 11 , LexemSlashEqual , new DivEqual < signed long long , float >);
    add_to_command_table_2( 9 , 12 , LexemSlashEqual , new DivEqual < signed long long , double >);
    add_to_command_table_2( 9 , 13 , LexemSlashEqual , new DivEqual < signed long long , long double >);
    add_to_command_table_2( 10 , 1 , LexemSlashEqual , new DivEqual < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemSlashEqual , new DivEqual < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemSlashEqual , new DivEqual < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemSlashEqual , new DivEqual < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemSlashEqual , new DivEqual < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemSlashEqual , new DivEqual < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemSlashEqual , new DivEqual < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemSlashEqual , new DivEqual < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemSlashEqual , new DivEqual < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemSlashEqual , new DivEqual < unsigned long long , unsigned long long >);
    add_to_command_table_2( 10 , 11 , LexemSlashEqual , new DivEqual < unsigned long long , float >);
    add_to_command_table_2( 10 , 12 , LexemSlashEqual , new DivEqual < unsigned long long , double >);
    add_to_command_table_2( 10 , 13 , LexemSlashEqual , new DivEqual < unsigned long long , long double >);
    add_to_command_table_2( 11 , 1 , LexemSlashEqual , new DivEqual < float , signed char >);
    add_to_command_table_2( 11 , 2 , LexemSlashEqual , new DivEqual < float , unsigned char >);
    add_to_command_table_2( 11 , 3 , LexemSlashEqual , new DivEqual < float , signed short >);
    add_to_command_table_2( 11 , 4 , LexemSlashEqual , new DivEqual < float , unsigned short >);
    add_to_command_table_2( 11 , 5 , LexemSlashEqual , new DivEqual < float , signed int >);
    add_to_command_table_2( 11 , 6 , LexemSlashEqual , new DivEqual < float , unsigned int >);
    add_to_command_table_2( 11 , 7 , LexemSlashEqual , new DivEqual < float , signed long >);
    add_to_command_table_2( 11 , 8 , LexemSlashEqual , new DivEqual < float , unsigned long >);
    add_to_command_table_2( 11 , 9 , LexemSlashEqual , new DivEqual < float , signed long long >);
    add_to_command_table_2( 11 , 10 , LexemSlashEqual , new DivEqual < float , unsigned long long >);
    add_to_command_table_2( 11 , 11 , LexemSlashEqual , new DivEqual < float , float >);
    add_to_command_table_2( 11 , 12 , LexemSlashEqual , new DivEqual < float , double >);
    add_to_command_table_2( 11 , 13 , LexemSlashEqual , new DivEqual < float , long double >);
    add_to_command_table_2( 12 , 1 , LexemSlashEqual , new DivEqual < double , signed char >);
    add_to_command_table_2( 12 , 2 , LexemSlashEqual , new DivEqual < double , unsigned char >);
    add_to_command_table_2( 12 , 3 , LexemSlashEqual , new DivEqual < double , signed short >);
    add_to_command_table_2( 12 , 4 , LexemSlashEqual , new DivEqual < double , unsigned short >);
    add_to_command_table_2( 12 , 5 , LexemSlashEqual , new DivEqual < double , signed int >);
    add_to_command_table_2( 12 , 6 , LexemSlashEqual , new DivEqual < double , unsigned int >);
    add_to_command_table_2( 12 , 7 , LexemSlashEqual , new DivEqual < double , signed long >);
    add_to_command_table_2( 12 , 8 , LexemSlashEqual , new DivEqual < double , unsigned long >);
    add_to_command_table_2( 12 , 9 , LexemSlashEqual , new DivEqual < double , signed long long >);
    add_to_command_table_2( 12 , 10 , LexemSlashEqual , new DivEqual < double , unsigned long long >);
    add_to_command_table_2( 12 , 11 , LexemSlashEqual , new DivEqual < double , float >);
    add_to_command_table_2( 12 , 12 , LexemSlashEqual , new DivEqual < double , double >);
    add_to_command_table_2( 12 , 13 , LexemSlashEqual , new DivEqual < double , long double >);
    add_to_command_table_2( 13 , 1 , LexemSlashEqual , new DivEqual < long double , signed char >);
    add_to_command_table_2( 13 , 2 , LexemSlashEqual , new DivEqual < long double , unsigned char >);
    add_to_command_table_2( 13 , 3 , LexemSlashEqual , new DivEqual < long double , signed short >);
    add_to_command_table_2( 13 , 4 , LexemSlashEqual , new DivEqual < long double , unsigned short >);
    add_to_command_table_2( 13 , 5 , LexemSlashEqual , new DivEqual < long double , signed int >);
    add_to_command_table_2( 13 , 6 , LexemSlashEqual , new DivEqual < long double , unsigned int >);
    add_to_command_table_2( 13 , 7 , LexemSlashEqual , new DivEqual < long double , signed long >);
    add_to_command_table_2( 13 , 8 , LexemSlashEqual , new DivEqual < long double , unsigned long >);
    add_to_command_table_2( 13 , 9 , LexemSlashEqual , new DivEqual < long double , signed long long >);
    add_to_command_table_2( 13 , 10 , LexemSlashEqual , new DivEqual < long double , unsigned long long >);
    add_to_command_table_2( 13 , 11 , LexemSlashEqual , new DivEqual < long double , float >);
    add_to_command_table_2( 13 , 12 , LexemSlashEqual , new DivEqual < long double , double >);
    add_to_command_table_2( 13 , 13 , LexemSlashEqual , new DivEqual < long double , long double >);

    //assignment expressions without decimal code_generator_7

    add_to_command_table_2( 1 , 1 , LexemMoveRightEqual , new MoveRightEqual < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemMoveRightEqual , new MoveRightEqual < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemMoveRightEqual , new MoveRightEqual < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemMoveRightEqual , new MoveRightEqual < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemMoveRightEqual , new MoveRightEqual < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemMoveRightEqual , new MoveRightEqual < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemMoveRightEqual , new MoveRightEqual < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemMoveRightEqual , new MoveRightEqual < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemMoveRightEqual , new MoveRightEqual < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemMoveRightEqual , new MoveRightEqual < signed char , unsigned long long >);
    add_to_command_table_2( 2 , 1 , LexemMoveRightEqual , new MoveRightEqual < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemMoveRightEqual , new MoveRightEqual < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemMoveRightEqual , new MoveRightEqual < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemMoveRightEqual , new MoveRightEqual < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemMoveRightEqual , new MoveRightEqual < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemMoveRightEqual , new MoveRightEqual < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemMoveRightEqual , new MoveRightEqual < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemMoveRightEqual , new MoveRightEqual < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemMoveRightEqual , new MoveRightEqual < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemMoveRightEqual , new MoveRightEqual < unsigned char , unsigned long long >);
    add_to_command_table_2( 3 , 1 , LexemMoveRightEqual , new MoveRightEqual < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemMoveRightEqual , new MoveRightEqual < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemMoveRightEqual , new MoveRightEqual < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemMoveRightEqual , new MoveRightEqual < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemMoveRightEqual , new MoveRightEqual < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemMoveRightEqual , new MoveRightEqual < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemMoveRightEqual , new MoveRightEqual < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemMoveRightEqual , new MoveRightEqual < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemMoveRightEqual , new MoveRightEqual < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemMoveRightEqual , new MoveRightEqual < signed short , unsigned long long >);
    add_to_command_table_2( 4 , 1 , LexemMoveRightEqual , new MoveRightEqual < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemMoveRightEqual , new MoveRightEqual < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemMoveRightEqual , new MoveRightEqual < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemMoveRightEqual , new MoveRightEqual < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemMoveRightEqual , new MoveRightEqual < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemMoveRightEqual , new MoveRightEqual < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemMoveRightEqual , new MoveRightEqual < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemMoveRightEqual , new MoveRightEqual < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemMoveRightEqual , new MoveRightEqual < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemMoveRightEqual , new MoveRightEqual < unsigned short , unsigned long long >);
    add_to_command_table_2( 5 , 1 , LexemMoveRightEqual , new MoveRightEqual < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemMoveRightEqual , new MoveRightEqual < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemMoveRightEqual , new MoveRightEqual < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemMoveRightEqual , new MoveRightEqual < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemMoveRightEqual , new MoveRightEqual < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemMoveRightEqual , new MoveRightEqual < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemMoveRightEqual , new MoveRightEqual < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemMoveRightEqual , new MoveRightEqual < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemMoveRightEqual , new MoveRightEqual < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemMoveRightEqual , new MoveRightEqual < signed int , unsigned long long >);
    add_to_command_table_2( 6 , 1 , LexemMoveRightEqual , new MoveRightEqual < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemMoveRightEqual , new MoveRightEqual < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemMoveRightEqual , new MoveRightEqual < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemMoveRightEqual , new MoveRightEqual < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemMoveRightEqual , new MoveRightEqual < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemMoveRightEqual , new MoveRightEqual < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemMoveRightEqual , new MoveRightEqual < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemMoveRightEqual , new MoveRightEqual < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemMoveRightEqual , new MoveRightEqual < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemMoveRightEqual , new MoveRightEqual < unsigned int , unsigned long long >);
    add_to_command_table_2( 7 , 1 , LexemMoveRightEqual , new MoveRightEqual < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemMoveRightEqual , new MoveRightEqual < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemMoveRightEqual , new MoveRightEqual < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemMoveRightEqual , new MoveRightEqual < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemMoveRightEqual , new MoveRightEqual < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemMoveRightEqual , new MoveRightEqual < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemMoveRightEqual , new MoveRightEqual < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemMoveRightEqual , new MoveRightEqual < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemMoveRightEqual , new MoveRightEqual < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemMoveRightEqual , new MoveRightEqual < signed long , unsigned long long >);
    add_to_command_table_2( 8 , 1 , LexemMoveRightEqual , new MoveRightEqual < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemMoveRightEqual , new MoveRightEqual < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemMoveRightEqual , new MoveRightEqual < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemMoveRightEqual , new MoveRightEqual < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemMoveRightEqual , new MoveRightEqual < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemMoveRightEqual , new MoveRightEqual < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemMoveRightEqual , new MoveRightEqual < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemMoveRightEqual , new MoveRightEqual < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemMoveRightEqual , new MoveRightEqual < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemMoveRightEqual , new MoveRightEqual < unsigned long , unsigned long long >);
    add_to_command_table_2( 9 , 1 , LexemMoveRightEqual , new MoveRightEqual < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemMoveRightEqual , new MoveRightEqual < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemMoveRightEqual , new MoveRightEqual < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemMoveRightEqual , new MoveRightEqual < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemMoveRightEqual , new MoveRightEqual < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemMoveRightEqual , new MoveRightEqual < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemMoveRightEqual , new MoveRightEqual < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemMoveRightEqual , new MoveRightEqual < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemMoveRightEqual , new MoveRightEqual < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemMoveRightEqual , new MoveRightEqual < signed long long , unsigned long long >);
    add_to_command_table_2( 10 , 1 , LexemMoveRightEqual , new MoveRightEqual < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemMoveRightEqual , new MoveRightEqual < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemMoveRightEqual , new MoveRightEqual < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemMoveRightEqual , new MoveRightEqual < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemMoveRightEqual , new MoveRightEqual < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemMoveRightEqual , new MoveRightEqual < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemMoveRightEqual , new MoveRightEqual < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemMoveRightEqual , new MoveRightEqual < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemMoveRightEqual , new MoveRightEqual < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemMoveRightEqual , new MoveRightEqual < unsigned long long , unsigned long long >);
    add_to_command_table_2( 1 , 1 , LexemMoveLeftEqual , new MoveLeftEqual < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemMoveLeftEqual , new MoveLeftEqual < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemMoveLeftEqual , new MoveLeftEqual < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemMoveLeftEqual , new MoveLeftEqual < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemMoveLeftEqual , new MoveLeftEqual < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemMoveLeftEqual , new MoveLeftEqual < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemMoveLeftEqual , new MoveLeftEqual < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemMoveLeftEqual , new MoveLeftEqual < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemMoveLeftEqual , new MoveLeftEqual < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemMoveLeftEqual , new MoveLeftEqual < signed char , unsigned long long >);
    add_to_command_table_2( 2 , 1 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned char , unsigned long long >);
    add_to_command_table_2( 3 , 1 , LexemMoveLeftEqual , new MoveLeftEqual < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemMoveLeftEqual , new MoveLeftEqual < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemMoveLeftEqual , new MoveLeftEqual < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemMoveLeftEqual , new MoveLeftEqual < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemMoveLeftEqual , new MoveLeftEqual < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemMoveLeftEqual , new MoveLeftEqual < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemMoveLeftEqual , new MoveLeftEqual < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemMoveLeftEqual , new MoveLeftEqual < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemMoveLeftEqual , new MoveLeftEqual < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemMoveLeftEqual , new MoveLeftEqual < signed short , unsigned long long >);
    add_to_command_table_2( 4 , 1 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned short , unsigned long long >);
    add_to_command_table_2( 5 , 1 , LexemMoveLeftEqual , new MoveLeftEqual < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemMoveLeftEqual , new MoveLeftEqual < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemMoveLeftEqual , new MoveLeftEqual < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemMoveLeftEqual , new MoveLeftEqual < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemMoveLeftEqual , new MoveLeftEqual < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemMoveLeftEqual , new MoveLeftEqual < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemMoveLeftEqual , new MoveLeftEqual < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemMoveLeftEqual , new MoveLeftEqual < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemMoveLeftEqual , new MoveLeftEqual < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemMoveLeftEqual , new MoveLeftEqual < signed int , unsigned long long >);
    add_to_command_table_2( 6 , 1 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned int , unsigned long long >);
    add_to_command_table_2( 7 , 1 , LexemMoveLeftEqual , new MoveLeftEqual < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemMoveLeftEqual , new MoveLeftEqual < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemMoveLeftEqual , new MoveLeftEqual < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemMoveLeftEqual , new MoveLeftEqual < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemMoveLeftEqual , new MoveLeftEqual < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemMoveLeftEqual , new MoveLeftEqual < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemMoveLeftEqual , new MoveLeftEqual < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemMoveLeftEqual , new MoveLeftEqual < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemMoveLeftEqual , new MoveLeftEqual < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemMoveLeftEqual , new MoveLeftEqual < signed long , unsigned long long >);
    add_to_command_table_2( 8 , 1 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long , unsigned long long >);
    add_to_command_table_2( 9 , 1 , LexemMoveLeftEqual , new MoveLeftEqual < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemMoveLeftEqual , new MoveLeftEqual < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemMoveLeftEqual , new MoveLeftEqual < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemMoveLeftEqual , new MoveLeftEqual < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemMoveLeftEqual , new MoveLeftEqual < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemMoveLeftEqual , new MoveLeftEqual < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemMoveLeftEqual , new MoveLeftEqual < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemMoveLeftEqual , new MoveLeftEqual < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemMoveLeftEqual , new MoveLeftEqual < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemMoveLeftEqual , new MoveLeftEqual < signed long long , unsigned long long >);
    add_to_command_table_2( 10 , 1 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemMoveLeftEqual , new MoveLeftEqual < unsigned long long , unsigned long long >);
    add_to_command_table_2( 1 , 1 , LexemPercentEqual , new ModEqual < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemPercentEqual , new ModEqual < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemPercentEqual , new ModEqual < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemPercentEqual , new ModEqual < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemPercentEqual , new ModEqual < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemPercentEqual , new ModEqual < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemPercentEqual , new ModEqual < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemPercentEqual , new ModEqual < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemPercentEqual , new ModEqual < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemPercentEqual , new ModEqual < signed char , unsigned long long >);
    add_to_command_table_2( 2 , 1 , LexemPercentEqual , new ModEqual < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemPercentEqual , new ModEqual < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemPercentEqual , new ModEqual < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemPercentEqual , new ModEqual < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemPercentEqual , new ModEqual < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemPercentEqual , new ModEqual < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemPercentEqual , new ModEqual < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemPercentEqual , new ModEqual < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemPercentEqual , new ModEqual < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemPercentEqual , new ModEqual < unsigned char , unsigned long long >);
    add_to_command_table_2( 3 , 1 , LexemPercentEqual , new ModEqual < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemPercentEqual , new ModEqual < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemPercentEqual , new ModEqual < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemPercentEqual , new ModEqual < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemPercentEqual , new ModEqual < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemPercentEqual , new ModEqual < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemPercentEqual , new ModEqual < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemPercentEqual , new ModEqual < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemPercentEqual , new ModEqual < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemPercentEqual , new ModEqual < signed short , unsigned long long >);
    add_to_command_table_2( 4 , 1 , LexemPercentEqual , new ModEqual < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemPercentEqual , new ModEqual < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemPercentEqual , new ModEqual < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemPercentEqual , new ModEqual < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemPercentEqual , new ModEqual < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemPercentEqual , new ModEqual < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemPercentEqual , new ModEqual < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemPercentEqual , new ModEqual < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemPercentEqual , new ModEqual < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemPercentEqual , new ModEqual < unsigned short , unsigned long long >);
    add_to_command_table_2( 5 , 1 , LexemPercentEqual , new ModEqual < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemPercentEqual , new ModEqual < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemPercentEqual , new ModEqual < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemPercentEqual , new ModEqual < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemPercentEqual , new ModEqual < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemPercentEqual , new ModEqual < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemPercentEqual , new ModEqual < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemPercentEqual , new ModEqual < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemPercentEqual , new ModEqual < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemPercentEqual , new ModEqual < signed int , unsigned long long >);
    add_to_command_table_2( 6 , 1 , LexemPercentEqual , new ModEqual < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemPercentEqual , new ModEqual < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemPercentEqual , new ModEqual < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemPercentEqual , new ModEqual < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemPercentEqual , new ModEqual < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemPercentEqual , new ModEqual < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemPercentEqual , new ModEqual < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemPercentEqual , new ModEqual < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemPercentEqual , new ModEqual < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemPercentEqual , new ModEqual < unsigned int , unsigned long long >);
    add_to_command_table_2( 7 , 1 , LexemPercentEqual , new ModEqual < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemPercentEqual , new ModEqual < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemPercentEqual , new ModEqual < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemPercentEqual , new ModEqual < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemPercentEqual , new ModEqual < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemPercentEqual , new ModEqual < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemPercentEqual , new ModEqual < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemPercentEqual , new ModEqual < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemPercentEqual , new ModEqual < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemPercentEqual , new ModEqual < signed long , unsigned long long >);
    add_to_command_table_2( 8 , 1 , LexemPercentEqual , new ModEqual < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemPercentEqual , new ModEqual < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemPercentEqual , new ModEqual < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemPercentEqual , new ModEqual < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemPercentEqual , new ModEqual < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemPercentEqual , new ModEqual < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemPercentEqual , new ModEqual < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemPercentEqual , new ModEqual < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemPercentEqual , new ModEqual < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemPercentEqual , new ModEqual < unsigned long , unsigned long long >);
    add_to_command_table_2( 9 , 1 , LexemPercentEqual , new ModEqual < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemPercentEqual , new ModEqual < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemPercentEqual , new ModEqual < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemPercentEqual , new ModEqual < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemPercentEqual , new ModEqual < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemPercentEqual , new ModEqual < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemPercentEqual , new ModEqual < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemPercentEqual , new ModEqual < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemPercentEqual , new ModEqual < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemPercentEqual , new ModEqual < signed long long , unsigned long long >);
    add_to_command_table_2( 10 , 1 , LexemPercentEqual , new ModEqual < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemPercentEqual , new ModEqual < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemPercentEqual , new ModEqual < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemPercentEqual , new ModEqual < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemPercentEqual , new ModEqual < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemPercentEqual , new ModEqual < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemPercentEqual , new ModEqual < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemPercentEqual , new ModEqual < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemPercentEqual , new ModEqual < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemPercentEqual , new ModEqual < unsigned long long , unsigned long long >);
    add_to_command_table_2( 1 , 1 , LexemAmpersandEqual , new LogicalAndEqual < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemAmpersandEqual , new LogicalAndEqual < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemAmpersandEqual , new LogicalAndEqual < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemAmpersandEqual , new LogicalAndEqual < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemAmpersandEqual , new LogicalAndEqual < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemAmpersandEqual , new LogicalAndEqual < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemAmpersandEqual , new LogicalAndEqual < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemAmpersandEqual , new LogicalAndEqual < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemAmpersandEqual , new LogicalAndEqual < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemAmpersandEqual , new LogicalAndEqual < signed char , unsigned long long >);
    add_to_command_table_2( 2 , 1 , LexemAmpersandEqual , new LogicalAndEqual < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemAmpersandEqual , new LogicalAndEqual < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemAmpersandEqual , new LogicalAndEqual < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemAmpersandEqual , new LogicalAndEqual < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemAmpersandEqual , new LogicalAndEqual < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemAmpersandEqual , new LogicalAndEqual < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemAmpersandEqual , new LogicalAndEqual < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemAmpersandEqual , new LogicalAndEqual < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemAmpersandEqual , new LogicalAndEqual < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemAmpersandEqual , new LogicalAndEqual < unsigned char , unsigned long long >);
    add_to_command_table_2( 3 , 1 , LexemAmpersandEqual , new LogicalAndEqual < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemAmpersandEqual , new LogicalAndEqual < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemAmpersandEqual , new LogicalAndEqual < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemAmpersandEqual , new LogicalAndEqual < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemAmpersandEqual , new LogicalAndEqual < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemAmpersandEqual , new LogicalAndEqual < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemAmpersandEqual , new LogicalAndEqual < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemAmpersandEqual , new LogicalAndEqual < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemAmpersandEqual , new LogicalAndEqual < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemAmpersandEqual , new LogicalAndEqual < signed short , unsigned long long >);
    add_to_command_table_2( 4 , 1 , LexemAmpersandEqual , new LogicalAndEqual < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemAmpersandEqual , new LogicalAndEqual < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemAmpersandEqual , new LogicalAndEqual < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemAmpersandEqual , new LogicalAndEqual < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemAmpersandEqual , new LogicalAndEqual < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemAmpersandEqual , new LogicalAndEqual < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemAmpersandEqual , new LogicalAndEqual < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemAmpersandEqual , new LogicalAndEqual < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemAmpersandEqual , new LogicalAndEqual < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemAmpersandEqual , new LogicalAndEqual < unsigned short , unsigned long long >);
    add_to_command_table_2( 5 , 1 , LexemAmpersandEqual , new LogicalAndEqual < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemAmpersandEqual , new LogicalAndEqual < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemAmpersandEqual , new LogicalAndEqual < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemAmpersandEqual , new LogicalAndEqual < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemAmpersandEqual , new LogicalAndEqual < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemAmpersandEqual , new LogicalAndEqual < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemAmpersandEqual , new LogicalAndEqual < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemAmpersandEqual , new LogicalAndEqual < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemAmpersandEqual , new LogicalAndEqual < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemAmpersandEqual , new LogicalAndEqual < signed int , unsigned long long >);
    add_to_command_table_2( 6 , 1 , LexemAmpersandEqual , new LogicalAndEqual < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemAmpersandEqual , new LogicalAndEqual < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemAmpersandEqual , new LogicalAndEqual < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemAmpersandEqual , new LogicalAndEqual < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemAmpersandEqual , new LogicalAndEqual < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemAmpersandEqual , new LogicalAndEqual < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemAmpersandEqual , new LogicalAndEqual < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemAmpersandEqual , new LogicalAndEqual < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemAmpersandEqual , new LogicalAndEqual < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemAmpersandEqual , new LogicalAndEqual < unsigned int , unsigned long long >);
    add_to_command_table_2( 7 , 1 , LexemAmpersandEqual , new LogicalAndEqual < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemAmpersandEqual , new LogicalAndEqual < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemAmpersandEqual , new LogicalAndEqual < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemAmpersandEqual , new LogicalAndEqual < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemAmpersandEqual , new LogicalAndEqual < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemAmpersandEqual , new LogicalAndEqual < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemAmpersandEqual , new LogicalAndEqual < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemAmpersandEqual , new LogicalAndEqual < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemAmpersandEqual , new LogicalAndEqual < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemAmpersandEqual , new LogicalAndEqual < signed long , unsigned long long >);
    add_to_command_table_2( 8 , 1 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long , unsigned long long >);
    add_to_command_table_2( 9 , 1 , LexemAmpersandEqual , new LogicalAndEqual < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemAmpersandEqual , new LogicalAndEqual < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemAmpersandEqual , new LogicalAndEqual < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemAmpersandEqual , new LogicalAndEqual < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemAmpersandEqual , new LogicalAndEqual < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemAmpersandEqual , new LogicalAndEqual < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemAmpersandEqual , new LogicalAndEqual < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemAmpersandEqual , new LogicalAndEqual < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemAmpersandEqual , new LogicalAndEqual < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemAmpersandEqual , new LogicalAndEqual < signed long long , unsigned long long >);
    add_to_command_table_2( 10 , 1 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemAmpersandEqual , new LogicalAndEqual < unsigned long long , unsigned long long >);
    add_to_command_table_2( 1 , 1 , LexemSuffixEqual , new LogicalXorEqual < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemSuffixEqual , new LogicalXorEqual < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemSuffixEqual , new LogicalXorEqual < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemSuffixEqual , new LogicalXorEqual < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemSuffixEqual , new LogicalXorEqual < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemSuffixEqual , new LogicalXorEqual < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemSuffixEqual , new LogicalXorEqual < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemSuffixEqual , new LogicalXorEqual < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemSuffixEqual , new LogicalXorEqual < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemSuffixEqual , new LogicalXorEqual < signed char , unsigned long long >);
    add_to_command_table_2( 2 , 1 , LexemSuffixEqual , new LogicalXorEqual < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemSuffixEqual , new LogicalXorEqual < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemSuffixEqual , new LogicalXorEqual < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemSuffixEqual , new LogicalXorEqual < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemSuffixEqual , new LogicalXorEqual < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemSuffixEqual , new LogicalXorEqual < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemSuffixEqual , new LogicalXorEqual < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemSuffixEqual , new LogicalXorEqual < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemSuffixEqual , new LogicalXorEqual < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemSuffixEqual , new LogicalXorEqual < unsigned char , unsigned long long >);
    add_to_command_table_2( 3 , 1 , LexemSuffixEqual , new LogicalXorEqual < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemSuffixEqual , new LogicalXorEqual < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemSuffixEqual , new LogicalXorEqual < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemSuffixEqual , new LogicalXorEqual < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemSuffixEqual , new LogicalXorEqual < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemSuffixEqual , new LogicalXorEqual < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemSuffixEqual , new LogicalXorEqual < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemSuffixEqual , new LogicalXorEqual < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemSuffixEqual , new LogicalXorEqual < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemSuffixEqual , new LogicalXorEqual < signed short , unsigned long long >);
    add_to_command_table_2( 4 , 1 , LexemSuffixEqual , new LogicalXorEqual < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemSuffixEqual , new LogicalXorEqual < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemSuffixEqual , new LogicalXorEqual < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemSuffixEqual , new LogicalXorEqual < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemSuffixEqual , new LogicalXorEqual < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemSuffixEqual , new LogicalXorEqual < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemSuffixEqual , new LogicalXorEqual < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemSuffixEqual , new LogicalXorEqual < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemSuffixEqual , new LogicalXorEqual < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemSuffixEqual , new LogicalXorEqual < unsigned short , unsigned long long >);
    add_to_command_table_2( 5 , 1 , LexemSuffixEqual , new LogicalXorEqual < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemSuffixEqual , new LogicalXorEqual < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemSuffixEqual , new LogicalXorEqual < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemSuffixEqual , new LogicalXorEqual < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemSuffixEqual , new LogicalXorEqual < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemSuffixEqual , new LogicalXorEqual < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemSuffixEqual , new LogicalXorEqual < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemSuffixEqual , new LogicalXorEqual < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemSuffixEqual , new LogicalXorEqual < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemSuffixEqual , new LogicalXorEqual < signed int , unsigned long long >);
    add_to_command_table_2( 6 , 1 , LexemSuffixEqual , new LogicalXorEqual < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemSuffixEqual , new LogicalXorEqual < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemSuffixEqual , new LogicalXorEqual < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemSuffixEqual , new LogicalXorEqual < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemSuffixEqual , new LogicalXorEqual < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemSuffixEqual , new LogicalXorEqual < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemSuffixEqual , new LogicalXorEqual < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemSuffixEqual , new LogicalXorEqual < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemSuffixEqual , new LogicalXorEqual < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemSuffixEqual , new LogicalXorEqual < unsigned int , unsigned long long >);
    add_to_command_table_2( 7 , 1 , LexemSuffixEqual , new LogicalXorEqual < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemSuffixEqual , new LogicalXorEqual < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemSuffixEqual , new LogicalXorEqual < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemSuffixEqual , new LogicalXorEqual < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemSuffixEqual , new LogicalXorEqual < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemSuffixEqual , new LogicalXorEqual < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemSuffixEqual , new LogicalXorEqual < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemSuffixEqual , new LogicalXorEqual < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemSuffixEqual , new LogicalXorEqual < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemSuffixEqual , new LogicalXorEqual < signed long , unsigned long long >);
    add_to_command_table_2( 8 , 1 , LexemSuffixEqual , new LogicalXorEqual < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemSuffixEqual , new LogicalXorEqual < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemSuffixEqual , new LogicalXorEqual < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemSuffixEqual , new LogicalXorEqual < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemSuffixEqual , new LogicalXorEqual < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemSuffixEqual , new LogicalXorEqual < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemSuffixEqual , new LogicalXorEqual < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemSuffixEqual , new LogicalXorEqual < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemSuffixEqual , new LogicalXorEqual < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemSuffixEqual , new LogicalXorEqual < unsigned long , unsigned long long >);
    add_to_command_table_2( 9 , 1 , LexemSuffixEqual , new LogicalXorEqual < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemSuffixEqual , new LogicalXorEqual < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemSuffixEqual , new LogicalXorEqual < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemSuffixEqual , new LogicalXorEqual < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemSuffixEqual , new LogicalXorEqual < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemSuffixEqual , new LogicalXorEqual < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemSuffixEqual , new LogicalXorEqual < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemSuffixEqual , new LogicalXorEqual < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemSuffixEqual , new LogicalXorEqual < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemSuffixEqual , new LogicalXorEqual < signed long long , unsigned long long >);
    add_to_command_table_2( 10 , 1 , LexemSuffixEqual , new LogicalXorEqual < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemSuffixEqual , new LogicalXorEqual < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemSuffixEqual , new LogicalXorEqual < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemSuffixEqual , new LogicalXorEqual < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemSuffixEqual , new LogicalXorEqual < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemSuffixEqual , new LogicalXorEqual < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemSuffixEqual , new LogicalXorEqual < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemSuffixEqual , new LogicalXorEqual < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemSuffixEqual , new LogicalXorEqual < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemSuffixEqual , new LogicalXorEqual < unsigned long long , unsigned long long >);
    add_to_command_table_2( 1 , 1 , LexemStraightSlashEqual , new LogicalOrEqual < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemStraightSlashEqual , new LogicalOrEqual < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemStraightSlashEqual , new LogicalOrEqual < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemStraightSlashEqual , new LogicalOrEqual < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemStraightSlashEqual , new LogicalOrEqual < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemStraightSlashEqual , new LogicalOrEqual < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemStraightSlashEqual , new LogicalOrEqual < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemStraightSlashEqual , new LogicalOrEqual < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemStraightSlashEqual , new LogicalOrEqual < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemStraightSlashEqual , new LogicalOrEqual < signed char , unsigned long long >);
    add_to_command_table_2( 2 , 1 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned char , unsigned long long >);
    add_to_command_table_2( 3 , 1 , LexemStraightSlashEqual , new LogicalOrEqual < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemStraightSlashEqual , new LogicalOrEqual < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemStraightSlashEqual , new LogicalOrEqual < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemStraightSlashEqual , new LogicalOrEqual < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemStraightSlashEqual , new LogicalOrEqual < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemStraightSlashEqual , new LogicalOrEqual < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemStraightSlashEqual , new LogicalOrEqual < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemStraightSlashEqual , new LogicalOrEqual < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemStraightSlashEqual , new LogicalOrEqual < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemStraightSlashEqual , new LogicalOrEqual < signed short , unsigned long long >);
    add_to_command_table_2( 4 , 1 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned short , unsigned long long >);
    add_to_command_table_2( 5 , 1 , LexemStraightSlashEqual , new LogicalOrEqual < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemStraightSlashEqual , new LogicalOrEqual < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemStraightSlashEqual , new LogicalOrEqual < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemStraightSlashEqual , new LogicalOrEqual < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemStraightSlashEqual , new LogicalOrEqual < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemStraightSlashEqual , new LogicalOrEqual < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemStraightSlashEqual , new LogicalOrEqual < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemStraightSlashEqual , new LogicalOrEqual < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemStraightSlashEqual , new LogicalOrEqual < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemStraightSlashEqual , new LogicalOrEqual < signed int , unsigned long long >);
    add_to_command_table_2( 6 , 1 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned int , unsigned long long >);
    add_to_command_table_2( 7 , 1 , LexemStraightSlashEqual , new LogicalOrEqual < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemStraightSlashEqual , new LogicalOrEqual < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemStraightSlashEqual , new LogicalOrEqual < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemStraightSlashEqual , new LogicalOrEqual < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemStraightSlashEqual , new LogicalOrEqual < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemStraightSlashEqual , new LogicalOrEqual < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemStraightSlashEqual , new LogicalOrEqual < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemStraightSlashEqual , new LogicalOrEqual < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemStraightSlashEqual , new LogicalOrEqual < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemStraightSlashEqual , new LogicalOrEqual < signed long , unsigned long long >);
    add_to_command_table_2( 8 , 1 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long , unsigned long long >);
    add_to_command_table_2( 9 , 1 , LexemStraightSlashEqual , new LogicalOrEqual < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemStraightSlashEqual , new LogicalOrEqual < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemStraightSlashEqual , new LogicalOrEqual < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemStraightSlashEqual , new LogicalOrEqual < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemStraightSlashEqual , new LogicalOrEqual < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemStraightSlashEqual , new LogicalOrEqual < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemStraightSlashEqual , new LogicalOrEqual < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemStraightSlashEqual , new LogicalOrEqual < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemStraightSlashEqual , new LogicalOrEqual < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemStraightSlashEqual , new LogicalOrEqual < signed long long , unsigned long long >);
    add_to_command_table_2( 10 , 1 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemStraightSlashEqual , new LogicalOrEqual < unsigned long long , unsigned long long >);

    //comma lexeme code_generator_8

    add_to_command_table_2( 1 , 1 , LexemComma , new Comma < signed char , signed char >);
    add_to_command_table_2( 1 , 2 , LexemComma , new Comma < signed char , unsigned char >);
    add_to_command_table_2( 1 , 3 , LexemComma , new Comma < signed char , signed short >);
    add_to_command_table_2( 1 , 4 , LexemComma , new Comma < signed char , unsigned short >);
    add_to_command_table_2( 1 , 5 , LexemComma , new Comma < signed char , signed int >);
    add_to_command_table_2( 1 , 6 , LexemComma , new Comma < signed char , unsigned int >);
    add_to_command_table_2( 1 , 7 , LexemComma , new Comma < signed char , signed long >);
    add_to_command_table_2( 1 , 8 , LexemComma , new Comma < signed char , unsigned long >);
    add_to_command_table_2( 1 , 9 , LexemComma , new Comma < signed char , signed long long >);
    add_to_command_table_2( 1 , 10 , LexemComma , new Comma < signed char , unsigned long long >);
    add_to_command_table_2( 1 , 11 , LexemComma , new Comma < signed char , float >);
    add_to_command_table_2( 1 , 12 , LexemComma , new Comma < signed char , double >);
    add_to_command_table_2( 1 , 13 , LexemComma , new Comma < signed char , long double >);
    add_to_command_table_2( 2 , 1 , LexemComma , new Comma < unsigned char , signed char >);
    add_to_command_table_2( 2 , 2 , LexemComma , new Comma < unsigned char , unsigned char >);
    add_to_command_table_2( 2 , 3 , LexemComma , new Comma < unsigned char , signed short >);
    add_to_command_table_2( 2 , 4 , LexemComma , new Comma < unsigned char , unsigned short >);
    add_to_command_table_2( 2 , 5 , LexemComma , new Comma < unsigned char , signed int >);
    add_to_command_table_2( 2 , 6 , LexemComma , new Comma < unsigned char , unsigned int >);
    add_to_command_table_2( 2 , 7 , LexemComma , new Comma < unsigned char , signed long >);
    add_to_command_table_2( 2 , 8 , LexemComma , new Comma < unsigned char , unsigned long >);
    add_to_command_table_2( 2 , 9 , LexemComma , new Comma < unsigned char , signed long long >);
    add_to_command_table_2( 2 , 10 , LexemComma , new Comma < unsigned char , unsigned long long >);
    add_to_command_table_2( 2 , 11 , LexemComma , new Comma < unsigned char , float >);
    add_to_command_table_2( 2 , 12 , LexemComma , new Comma < unsigned char , double >);
    add_to_command_table_2( 2 , 13 , LexemComma , new Comma < unsigned char , long double >);
    add_to_command_table_2( 3 , 1 , LexemComma , new Comma < signed short , signed char >);
    add_to_command_table_2( 3 , 2 , LexemComma , new Comma < signed short , unsigned char >);
    add_to_command_table_2( 3 , 3 , LexemComma , new Comma < signed short , signed short >);
    add_to_command_table_2( 3 , 4 , LexemComma , new Comma < signed short , unsigned short >);
    add_to_command_table_2( 3 , 5 , LexemComma , new Comma < signed short , signed int >);
    add_to_command_table_2( 3 , 6 , LexemComma , new Comma < signed short , unsigned int >);
    add_to_command_table_2( 3 , 7 , LexemComma , new Comma < signed short , signed long >);
    add_to_command_table_2( 3 , 8 , LexemComma , new Comma < signed short , unsigned long >);
    add_to_command_table_2( 3 , 9 , LexemComma , new Comma < signed short , signed long long >);
    add_to_command_table_2( 3 , 10 , LexemComma , new Comma < signed short , unsigned long long >);
    add_to_command_table_2( 3 , 11 , LexemComma , new Comma < signed short , float >);
    add_to_command_table_2( 3 , 12 , LexemComma , new Comma < signed short , double >);
    add_to_command_table_2( 3 , 13 , LexemComma , new Comma < signed short , long double >);
    add_to_command_table_2( 4 , 1 , LexemComma , new Comma < unsigned short , signed char >);
    add_to_command_table_2( 4 , 2 , LexemComma , new Comma < unsigned short , unsigned char >);
    add_to_command_table_2( 4 , 3 , LexemComma , new Comma < unsigned short , signed short >);
    add_to_command_table_2( 4 , 4 , LexemComma , new Comma < unsigned short , unsigned short >);
    add_to_command_table_2( 4 , 5 , LexemComma , new Comma < unsigned short , signed int >);
    add_to_command_table_2( 4 , 6 , LexemComma , new Comma < unsigned short , unsigned int >);
    add_to_command_table_2( 4 , 7 , LexemComma , new Comma < unsigned short , signed long >);
    add_to_command_table_2( 4 , 8 , LexemComma , new Comma < unsigned short , unsigned long >);
    add_to_command_table_2( 4 , 9 , LexemComma , new Comma < unsigned short , signed long long >);
    add_to_command_table_2( 4 , 10 , LexemComma , new Comma < unsigned short , unsigned long long >);
    add_to_command_table_2( 4 , 11 , LexemComma , new Comma < unsigned short , float >);
    add_to_command_table_2( 4 , 12 , LexemComma , new Comma < unsigned short , double >);
    add_to_command_table_2( 4 , 13 , LexemComma , new Comma < unsigned short , long double >);
    add_to_command_table_2( 5 , 1 , LexemComma , new Comma < signed int , signed char >);
    add_to_command_table_2( 5 , 2 , LexemComma , new Comma < signed int , unsigned char >);
    add_to_command_table_2( 5 , 3 , LexemComma , new Comma < signed int , signed short >);
    add_to_command_table_2( 5 , 4 , LexemComma , new Comma < signed int , unsigned short >);
    add_to_command_table_2( 5 , 5 , LexemComma , new Comma < signed int , signed int >);
    add_to_command_table_2( 5 , 6 , LexemComma , new Comma < signed int , unsigned int >);
    add_to_command_table_2( 5 , 7 , LexemComma , new Comma < signed int , signed long >);
    add_to_command_table_2( 5 , 8 , LexemComma , new Comma < signed int , unsigned long >);
    add_to_command_table_2( 5 , 9 , LexemComma , new Comma < signed int , signed long long >);
    add_to_command_table_2( 5 , 10 , LexemComma , new Comma < signed int , unsigned long long >);
    add_to_command_table_2( 5 , 11 , LexemComma , new Comma < signed int , float >);
    add_to_command_table_2( 5 , 12 , LexemComma , new Comma < signed int , double >);
    add_to_command_table_2( 5 , 13 , LexemComma , new Comma < signed int , long double >);
    add_to_command_table_2( 6 , 1 , LexemComma , new Comma < unsigned int , signed char >);
    add_to_command_table_2( 6 , 2 , LexemComma , new Comma < unsigned int , unsigned char >);
    add_to_command_table_2( 6 , 3 , LexemComma , new Comma < unsigned int , signed short >);
    add_to_command_table_2( 6 , 4 , LexemComma , new Comma < unsigned int , unsigned short >);
    add_to_command_table_2( 6 , 5 , LexemComma , new Comma < unsigned int , signed int >);
    add_to_command_table_2( 6 , 6 , LexemComma , new Comma < unsigned int , unsigned int >);
    add_to_command_table_2( 6 , 7 , LexemComma , new Comma < unsigned int , signed long >);
    add_to_command_table_2( 6 , 8 , LexemComma , new Comma < unsigned int , unsigned long >);
    add_to_command_table_2( 6 , 9 , LexemComma , new Comma < unsigned int , signed long long >);
    add_to_command_table_2( 6 , 10 , LexemComma , new Comma < unsigned int , unsigned long long >);
    add_to_command_table_2( 6 , 11 , LexemComma , new Comma < unsigned int , float >);
    add_to_command_table_2( 6 , 12 , LexemComma , new Comma < unsigned int , double >);
    add_to_command_table_2( 6 , 13 , LexemComma , new Comma < unsigned int , long double >);
    add_to_command_table_2( 7 , 1 , LexemComma , new Comma < signed long , signed char >);
    add_to_command_table_2( 7 , 2 , LexemComma , new Comma < signed long , unsigned char >);
    add_to_command_table_2( 7 , 3 , LexemComma , new Comma < signed long , signed short >);
    add_to_command_table_2( 7 , 4 , LexemComma , new Comma < signed long , unsigned short >);
    add_to_command_table_2( 7 , 5 , LexemComma , new Comma < signed long , signed int >);
    add_to_command_table_2( 7 , 6 , LexemComma , new Comma < signed long , unsigned int >);
    add_to_command_table_2( 7 , 7 , LexemComma , new Comma < signed long , signed long >);
    add_to_command_table_2( 7 , 8 , LexemComma , new Comma < signed long , unsigned long >);
    add_to_command_table_2( 7 , 9 , LexemComma , new Comma < signed long , signed long long >);
    add_to_command_table_2( 7 , 10 , LexemComma , new Comma < signed long , unsigned long long >);
    add_to_command_table_2( 7 , 11 , LexemComma , new Comma < signed long , float >);
    add_to_command_table_2( 7 , 12 , LexemComma , new Comma < signed long , double >);
    add_to_command_table_2( 7 , 13 , LexemComma , new Comma < signed long , long double >);
    add_to_command_table_2( 8 , 1 , LexemComma , new Comma < unsigned long , signed char >);
    add_to_command_table_2( 8 , 2 , LexemComma , new Comma < unsigned long , unsigned char >);
    add_to_command_table_2( 8 , 3 , LexemComma , new Comma < unsigned long , signed short >);
    add_to_command_table_2( 8 , 4 , LexemComma , new Comma < unsigned long , unsigned short >);
    add_to_command_table_2( 8 , 5 , LexemComma , new Comma < unsigned long , signed int >);
    add_to_command_table_2( 8 , 6 , LexemComma , new Comma < unsigned long , unsigned int >);
    add_to_command_table_2( 8 , 7 , LexemComma , new Comma < unsigned long , signed long >);
    add_to_command_table_2( 8 , 8 , LexemComma , new Comma < unsigned long , unsigned long >);
    add_to_command_table_2( 8 , 9 , LexemComma , new Comma < unsigned long , signed long long >);
    add_to_command_table_2( 8 , 10 , LexemComma , new Comma < unsigned long , unsigned long long >);
    add_to_command_table_2( 8 , 11 , LexemComma , new Comma < unsigned long , float >);
    add_to_command_table_2( 8 , 12 , LexemComma , new Comma < unsigned long , double >);
    add_to_command_table_2( 8 , 13 , LexemComma , new Comma < unsigned long , long double >);
    add_to_command_table_2( 9 , 1 , LexemComma , new Comma < signed long long , signed char >);
    add_to_command_table_2( 9 , 2 , LexemComma , new Comma < signed long long , unsigned char >);
    add_to_command_table_2( 9 , 3 , LexemComma , new Comma < signed long long , signed short >);
    add_to_command_table_2( 9 , 4 , LexemComma , new Comma < signed long long , unsigned short >);
    add_to_command_table_2( 9 , 5 , LexemComma , new Comma < signed long long , signed int >);
    add_to_command_table_2( 9 , 6 , LexemComma , new Comma < signed long long , unsigned int >);
    add_to_command_table_2( 9 , 7 , LexemComma , new Comma < signed long long , signed long >);
    add_to_command_table_2( 9 , 8 , LexemComma , new Comma < signed long long , unsigned long >);
    add_to_command_table_2( 9 , 9 , LexemComma , new Comma < signed long long , signed long long >);
    add_to_command_table_2( 9 , 10 , LexemComma , new Comma < signed long long , unsigned long long >);
    add_to_command_table_2( 9 , 11 , LexemComma , new Comma < signed long long , float >);
    add_to_command_table_2( 9 , 12 , LexemComma , new Comma < signed long long , double >);
    add_to_command_table_2( 9 , 13 , LexemComma , new Comma < signed long long , long double >);
    add_to_command_table_2( 10 , 1 , LexemComma , new Comma < unsigned long long , signed char >);
    add_to_command_table_2( 10 , 2 , LexemComma , new Comma < unsigned long long , unsigned char >);
    add_to_command_table_2( 10 , 3 , LexemComma , new Comma < unsigned long long , signed short >);
    add_to_command_table_2( 10 , 4 , LexemComma , new Comma < unsigned long long , unsigned short >);
    add_to_command_table_2( 10 , 5 , LexemComma , new Comma < unsigned long long , signed int >);
    add_to_command_table_2( 10 , 6 , LexemComma , new Comma < unsigned long long , unsigned int >);
    add_to_command_table_2( 10 , 7 , LexemComma , new Comma < unsigned long long , signed long >);
    add_to_command_table_2( 10 , 8 , LexemComma , new Comma < unsigned long long , unsigned long >);
    add_to_command_table_2( 10 , 9 , LexemComma , new Comma < unsigned long long , signed long long >);
    add_to_command_table_2( 10 , 10 , LexemComma , new Comma < unsigned long long , unsigned long long >);
    add_to_command_table_2( 10 , 11 , LexemComma , new Comma < unsigned long long , float >);
    add_to_command_table_2( 10 , 12 , LexemComma , new Comma < unsigned long long , double >);
    add_to_command_table_2( 10 , 13 , LexemComma , new Comma < unsigned long long , long double >);
    add_to_command_table_2( 11 , 1 , LexemComma , new Comma < float , signed char >);
    add_to_command_table_2( 11 , 2 , LexemComma , new Comma < float , unsigned char >);
    add_to_command_table_2( 11 , 3 , LexemComma , new Comma < float , signed short >);
    add_to_command_table_2( 11 , 4 , LexemComma , new Comma < float , unsigned short >);
    add_to_command_table_2( 11 , 5 , LexemComma , new Comma < float , signed int >);
    add_to_command_table_2( 11 , 6 , LexemComma , new Comma < float , unsigned int >);
    add_to_command_table_2( 11 , 7 , LexemComma , new Comma < float , signed long >);
    add_to_command_table_2( 11 , 8 , LexemComma , new Comma < float , unsigned long >);
    add_to_command_table_2( 11 , 9 , LexemComma , new Comma < float , signed long long >);
    add_to_command_table_2( 11 , 10 , LexemComma , new Comma < float , unsigned long long >);
    add_to_command_table_2( 11 , 11 , LexemComma , new Comma < float , float >);
    add_to_command_table_2( 11 , 12 , LexemComma , new Comma < float , double >);
    add_to_command_table_2( 11 , 13 , LexemComma , new Comma < float , long double >);
    add_to_command_table_2( 12 , 1 , LexemComma , new Comma < double , signed char >);
    add_to_command_table_2( 12 , 2 , LexemComma , new Comma < double , unsigned char >);
    add_to_command_table_2( 12 , 3 , LexemComma , new Comma < double , signed short >);
    add_to_command_table_2( 12 , 4 , LexemComma , new Comma < double , unsigned short >);
    add_to_command_table_2( 12 , 5 , LexemComma , new Comma < double , signed int >);
    add_to_command_table_2( 12 , 6 , LexemComma , new Comma < double , unsigned int >);
    add_to_command_table_2( 12 , 7 , LexemComma , new Comma < double , signed long >);
    add_to_command_table_2( 12 , 8 , LexemComma , new Comma < double , unsigned long >);
    add_to_command_table_2( 12 , 9 , LexemComma , new Comma < double , signed long long >);
    add_to_command_table_2( 12 , 10 , LexemComma , new Comma < double , unsigned long long >);
    add_to_command_table_2( 12 , 11 , LexemComma , new Comma < double , float >);
    add_to_command_table_2( 12 , 12 , LexemComma , new Comma < double , double >);
    add_to_command_table_2( 12 , 13 , LexemComma , new Comma < double , long double >);
    add_to_command_table_2( 13 , 1 , LexemComma , new Comma < long double , signed char >);
    add_to_command_table_2( 13 , 2 , LexemComma , new Comma < long double , unsigned char >);
    add_to_command_table_2( 13 , 3 , LexemComma , new Comma < long double , signed short >);
    add_to_command_table_2( 13 , 4 , LexemComma , new Comma < long double , unsigned short >);
    add_to_command_table_2( 13 , 5 , LexemComma , new Comma < long double , signed int >);
    add_to_command_table_2( 13 , 6 , LexemComma , new Comma < long double , unsigned int >);
    add_to_command_table_2( 13 , 7 , LexemComma , new Comma < long double , signed long >);
    add_to_command_table_2( 13 , 8 , LexemComma , new Comma < long double , unsigned long >);
    add_to_command_table_2( 13 , 9 , LexemComma , new Comma < long double , signed long long >);
    add_to_command_table_2( 13 , 10 , LexemComma , new Comma < long double , unsigned long long >);
    add_to_command_table_2( 13 , 11 , LexemComma , new Comma < long double , float >);
    add_to_command_table_2( 13 , 12 , LexemComma , new Comma < long double , double >);
    add_to_command_table_2( 13 , 13 , LexemComma , new Comma < long double , long double >);

    //unary code_generator_9

    add_to_command_table_1( 1 , LexemPlus , new UnaryPlus < signed char >);
    add_to_command_table_1( 2 , LexemPlus , new UnaryPlus < unsigned char >);
    add_to_command_table_1( 3 , LexemPlus , new UnaryPlus < signed short >);
    add_to_command_table_1( 4 , LexemPlus , new UnaryPlus < unsigned short >);
    add_to_command_table_1( 5 , LexemPlus , new UnaryPlus < signed int >);
    add_to_command_table_1( 6 , LexemPlus , new UnaryPlus < unsigned int >);
    add_to_command_table_1( 7 , LexemPlus , new UnaryPlus < signed long >);
    add_to_command_table_1( 8 , LexemPlus , new UnaryPlus < unsigned long >);
    add_to_command_table_1( 9 , LexemPlus , new UnaryPlus < signed long long >);
    add_to_command_table_1( 10 , LexemPlus , new UnaryPlus < unsigned long long >);
    add_to_command_table_1( 11 , LexemPlus , new UnaryPlus < float >);
    add_to_command_table_1( 12 , LexemPlus , new UnaryPlus < double >);
    add_to_command_table_1( 13 , LexemPlus , new UnaryPlus < long double >);
    add_to_command_table_1( 1 , LexemMinus , new UnaryMinus < signed char >);
    add_to_command_table_1( 2 , LexemMinus , new UnaryMinus < unsigned char >);
    add_to_command_table_1( 3 , LexemMinus , new UnaryMinus < signed short >);
    add_to_command_table_1( 4 , LexemMinus , new UnaryMinus < unsigned short >);
    add_to_command_table_1( 5 , LexemMinus , new UnaryMinus < signed int >);
    add_to_command_table_1( 6 , LexemMinus , new UnaryMinus < unsigned int >);
    add_to_command_table_1( 7 , LexemMinus , new UnaryMinus < signed long >);
    add_to_command_table_1( 8 , LexemMinus , new UnaryMinus < unsigned long >);
    add_to_command_table_1( 9 , LexemMinus , new UnaryMinus < signed long long >);
    add_to_command_table_1( 10 , LexemMinus , new UnaryMinus < unsigned long long >);
    add_to_command_table_1( 11 , LexemMinus , new UnaryMinus < float >);
    add_to_command_table_1( 12 , LexemMinus , new UnaryMinus < double >);
    add_to_command_table_1( 13 , LexemMinus , new UnaryMinus < long double >);
    add_to_command_table_1( 1 , LexemPlusPlus , new PrefixIncrement < signed char >);
    add_to_command_table_1( 2 , LexemPlusPlus , new PrefixIncrement < unsigned char >);
    add_to_command_table_1( 3 , LexemPlusPlus , new PrefixIncrement < signed short >);
    add_to_command_table_1( 4 , LexemPlusPlus , new PrefixIncrement < unsigned short >);
    add_to_command_table_1( 5 , LexemPlusPlus , new PrefixIncrement < signed int >);
    add_to_command_table_1( 6 , LexemPlusPlus , new PrefixIncrement < unsigned int >);
    add_to_command_table_1( 7 , LexemPlusPlus , new PrefixIncrement < signed long >);
    add_to_command_table_1( 8 , LexemPlusPlus , new PrefixIncrement < unsigned long >);
    add_to_command_table_1( 9 , LexemPlusPlus , new PrefixIncrement < signed long long >);
    add_to_command_table_1( 10 , LexemPlusPlus , new PrefixIncrement < unsigned long long >);
    add_to_command_table_1( 11 , LexemPlusPlus , new PrefixIncrement < float >);
    add_to_command_table_1( 12 , LexemPlusPlus , new PrefixIncrement < double >);
    add_to_command_table_1( 13 , LexemPlusPlus , new PrefixIncrement < long double >);
    add_to_command_table_1( 1 , LexemMinusMinus , new PrefixDecrement < signed char >);
    add_to_command_table_1( 2 , LexemMinusMinus , new PrefixDecrement < unsigned char >);
    add_to_command_table_1( 3 , LexemMinusMinus , new PrefixDecrement < signed short >);
    add_to_command_table_1( 4 , LexemMinusMinus , new PrefixDecrement < unsigned short >);
    add_to_command_table_1( 5 , LexemMinusMinus , new PrefixDecrement < signed int >);
    add_to_command_table_1( 6 , LexemMinusMinus , new PrefixDecrement < unsigned int >);
    add_to_command_table_1( 7 , LexemMinusMinus , new PrefixDecrement < signed long >);
    add_to_command_table_1( 8 , LexemMinusMinus , new PrefixDecrement < unsigned long >);
    add_to_command_table_1( 9 , LexemMinusMinus , new PrefixDecrement < signed long long >);
    add_to_command_table_1( 10 , LexemMinusMinus , new PrefixDecrement < unsigned long long >);
    add_to_command_table_1( 11 , LexemMinusMinus , new PrefixDecrement < float >);
    add_to_command_table_1( 12 , LexemMinusMinus , new PrefixDecrement < double >);
    add_to_command_table_1( 13 , LexemMinusMinus , new PrefixDecrement < long double >);
    add_to_command_table_1( 1 , LexemPlusPlus_Post , new PostfixIncrement < signed char >);
    add_to_command_table_1( 2 , LexemPlusPlus_Post , new PostfixIncrement < unsigned char >);
    add_to_command_table_1( 3 , LexemPlusPlus_Post , new PostfixIncrement < signed short >);
    add_to_command_table_1( 4 , LexemPlusPlus_Post , new PostfixIncrement < unsigned short >);
    add_to_command_table_1( 5 , LexemPlusPlus_Post , new PostfixIncrement < signed int >);
    add_to_command_table_1( 6 , LexemPlusPlus_Post , new PostfixIncrement < unsigned int >);
    add_to_command_table_1( 7 , LexemPlusPlus_Post , new PostfixIncrement < signed long >);
    add_to_command_table_1( 8 , LexemPlusPlus_Post , new PostfixIncrement < unsigned long >);
    add_to_command_table_1( 9 , LexemPlusPlus_Post , new PostfixIncrement < signed long long >);
    add_to_command_table_1( 10 , LexemPlusPlus_Post , new PostfixIncrement < unsigned long long >);
    add_to_command_table_1( 11 , LexemPlusPlus_Post , new PostfixIncrement < float >);
    add_to_command_table_1( 12 , LexemPlusPlus_Post , new PostfixIncrement < double >);
    add_to_command_table_1( 13 , LexemPlusPlus_Post , new PostfixIncrement < long double >);
    add_to_command_table_1( 1 , LexemMinusMinus_Post , new PostfixDecrement < signed char >);
    add_to_command_table_1( 2 , LexemMinusMinus_Post , new PostfixDecrement < unsigned char >);
    add_to_command_table_1( 3 , LexemMinusMinus_Post , new PostfixDecrement < signed short >);
    add_to_command_table_1( 4 , LexemMinusMinus_Post , new PostfixDecrement < unsigned short >);
    add_to_command_table_1( 5 , LexemMinusMinus_Post , new PostfixDecrement < signed int >);
    add_to_command_table_1( 6 , LexemMinusMinus_Post , new PostfixDecrement < unsigned int >);
    add_to_command_table_1( 7 , LexemMinusMinus_Post , new PostfixDecrement < signed long >);
    add_to_command_table_1( 8 , LexemMinusMinus_Post , new PostfixDecrement < unsigned long >);
    add_to_command_table_1( 9 , LexemMinusMinus_Post , new PostfixDecrement < signed long long >);
    add_to_command_table_1( 10 , LexemMinusMinus_Post , new PostfixDecrement < unsigned long long >);
    add_to_command_table_1( 11 , LexemMinusMinus_Post , new PostfixDecrement < float >);
    add_to_command_table_1( 12 , LexemMinusMinus_Post , new PostfixDecrement < double >);
    add_to_command_table_1( 13 , LexemMinusMinus_Post , new PostfixDecrement < long double >);
    add_to_command_table_1( 1 , LexemTilde , new ByteNot < signed char >);
    add_to_command_table_1( 2 , LexemTilde , new ByteNot < unsigned char >);
    add_to_command_table_1( 3 , LexemTilde , new ByteNot < signed short >);
    add_to_command_table_1( 4 , LexemTilde , new ByteNot < unsigned short >);
    add_to_command_table_1( 5 , LexemTilde , new ByteNot < signed int >);
    add_to_command_table_1( 6 , LexemTilde , new ByteNot < unsigned int >);
    add_to_command_table_1( 7 , LexemTilde , new ByteNot < signed long >);
    add_to_command_table_1( 8 , LexemTilde , new ByteNot < unsigned long >);
    add_to_command_table_1( 9 , LexemTilde , new ByteNot < signed long long >);
    add_to_command_table_1( 10 , LexemTilde , new ByteNot < unsigned long long >);
    add_to_command_table_1( 1 , LexemExclamationMark , new Not < signed char >);
    add_to_command_table_1( 2 , LexemExclamationMark , new Not < unsigned char >);
    add_to_command_table_1( 3 , LexemExclamationMark , new Not < signed short >);
    add_to_command_table_1( 4 , LexemExclamationMark , new Not < unsigned short >);
    add_to_command_table_1( 5 , LexemExclamationMark , new Not < signed int >);
    add_to_command_table_1( 6 , LexemExclamationMark , new Not < unsigned int >);
    add_to_command_table_1( 7 , LexemExclamationMark , new Not < signed long >);
    add_to_command_table_1( 8 , LexemExclamationMark , new Not < unsigned long >);
    add_to_command_table_1( 9 , LexemExclamationMark , new Not < signed long long >);
    add_to_command_table_1( 10 , LexemExclamationMark , new Not < unsigned long long >);
    add_to_command_table_1( 1 , LexemSizeof , new SizeofExpression < signed char >);
    add_to_command_table_1( 2 , LexemSizeof , new SizeofExpression < unsigned char >);
    add_to_command_table_1( 3 , LexemSizeof , new SizeofExpression < signed short >);
    add_to_command_table_1( 4 , LexemSizeof , new SizeofExpression < unsigned short >);
    add_to_command_table_1( 5 , LexemSizeof , new SizeofExpression < signed int >);
    add_to_command_table_1( 6 , LexemSizeof , new SizeofExpression < unsigned int >);
    add_to_command_table_1( 7 , LexemSizeof , new SizeofExpression < signed long >);
    add_to_command_table_1( 8 , LexemSizeof , new SizeofExpression < unsigned long >);
    add_to_command_table_1( 9 , LexemSizeof , new SizeofExpression < signed long long >);
    add_to_command_table_1( 10 , LexemSizeof , new SizeofExpression < unsigned long long >);
    add_to_command_table_1( 11 , LexemSizeof , new SizeofExpression < float >);
    add_to_command_table_1( 12 , LexemSizeof , new SizeofExpression < double >);
    add_to_command_table_1( 13 , LexemSizeof , new SizeofExpression < long double >);

    add_to_type_cast_table( 1 , 1 , new TypeCast < signed char , signed char >);
    add_to_type_cast_table( 1 , 2 , new TypeCast < signed char , unsigned char >);
    add_to_type_cast_table( 1 , 3 , new TypeCast < signed char , signed short >);
    add_to_type_cast_table( 1 , 4 , new TypeCast < signed char , unsigned short >);
    add_to_type_cast_table( 1 , 5 , new TypeCast < signed char , signed int >);
    add_to_type_cast_table( 1 , 6 , new TypeCast < signed char , unsigned int >);
    add_to_type_cast_table( 1 , 7 , new TypeCast < signed char , signed long >);
    add_to_type_cast_table( 1 , 8 , new TypeCast < signed char , unsigned long >);
    add_to_type_cast_table( 1 , 9 , new TypeCast < signed char , signed long long >);
    add_to_type_cast_table( 1 , 10 , new TypeCast < signed char , unsigned long long >);
    add_to_type_cast_table( 1 , 11 , new TypeCast < signed char , float >);
    add_to_type_cast_table( 1 , 12 , new TypeCast < signed char , double >);
    add_to_type_cast_table( 1 , 13 , new TypeCast < signed char , long double >);
    add_to_type_cast_table( 2 , 1 , new TypeCast < unsigned char , signed char >);
    add_to_type_cast_table( 2 , 2 , new TypeCast < unsigned char , unsigned char >);
    add_to_type_cast_table( 2 , 3 , new TypeCast < unsigned char , signed short >);
    add_to_type_cast_table( 2 , 4 , new TypeCast < unsigned char , unsigned short >);
    add_to_type_cast_table( 2 , 5 , new TypeCast < unsigned char , signed int >);
    add_to_type_cast_table( 2 , 6 , new TypeCast < unsigned char , unsigned int >);
    add_to_type_cast_table( 2 , 7 , new TypeCast < unsigned char , signed long >);
    add_to_type_cast_table( 2 , 8 , new TypeCast < unsigned char , unsigned long >);
    add_to_type_cast_table( 2 , 9 , new TypeCast < unsigned char , signed long long >);
    add_to_type_cast_table( 2 , 10 , new TypeCast < unsigned char , unsigned long long >);
    add_to_type_cast_table( 2 , 11 , new TypeCast < unsigned char , float >);
    add_to_type_cast_table( 2 , 12 , new TypeCast < unsigned char , double >);
    add_to_type_cast_table( 2 , 13 , new TypeCast < unsigned char , long double >);
    add_to_type_cast_table( 3 , 1 , new TypeCast < signed short , signed char >);
    add_to_type_cast_table( 3 , 2 , new TypeCast < signed short , unsigned char >);
    add_to_type_cast_table( 3 , 3 , new TypeCast < signed short , signed short >);
    add_to_type_cast_table( 3 , 4 , new TypeCast < signed short , unsigned short >);
    add_to_type_cast_table( 3 , 5 , new TypeCast < signed short , signed int >);
    add_to_type_cast_table( 3 , 6 , new TypeCast < signed short , unsigned int >);
    add_to_type_cast_table( 3 , 7 , new TypeCast < signed short , signed long >);
    add_to_type_cast_table( 3 , 8 , new TypeCast < signed short , unsigned long >);
    add_to_type_cast_table( 3 , 9 , new TypeCast < signed short , signed long long >);
    add_to_type_cast_table( 3 , 10 , new TypeCast < signed short , unsigned long long >);
    add_to_type_cast_table( 3 , 11 , new TypeCast < signed short , float >);
    add_to_type_cast_table( 3 , 12 , new TypeCast < signed short , double >);
    add_to_type_cast_table( 3 , 13 , new TypeCast < signed short , long double >);
    add_to_type_cast_table( 4 , 1 , new TypeCast < unsigned short , signed char >);
    add_to_type_cast_table( 4 , 2 , new TypeCast < unsigned short , unsigned char >);
    add_to_type_cast_table( 4 , 3 , new TypeCast < unsigned short , signed short >);
    add_to_type_cast_table( 4 , 4 , new TypeCast < unsigned short , unsigned short >);
    add_to_type_cast_table( 4 , 5 , new TypeCast < unsigned short , signed int >);
    add_to_type_cast_table( 4 , 6 , new TypeCast < unsigned short , unsigned int >);
    add_to_type_cast_table( 4 , 7 , new TypeCast < unsigned short , signed long >);
    add_to_type_cast_table( 4 , 8 , new TypeCast < unsigned short , unsigned long >);
    add_to_type_cast_table( 4 , 9 , new TypeCast < unsigned short , signed long long >);
    add_to_type_cast_table( 4 , 10 , new TypeCast < unsigned short , unsigned long long >);
    add_to_type_cast_table( 4 , 11 , new TypeCast < unsigned short , float >);
    add_to_type_cast_table( 4 , 12 , new TypeCast < unsigned short , double >);
    add_to_type_cast_table( 4 , 13 , new TypeCast < unsigned short , long double >);
    add_to_type_cast_table( 5 , 1 , new TypeCast < signed int , signed char >);
    add_to_type_cast_table( 5 , 2 , new TypeCast < signed int , unsigned char >);
    add_to_type_cast_table( 5 , 3 , new TypeCast < signed int , signed short >);
    add_to_type_cast_table( 5 , 4 , new TypeCast < signed int , unsigned short >);
    add_to_type_cast_table( 5 , 5 , new TypeCast < signed int , signed int >);
    add_to_type_cast_table( 5 , 6 , new TypeCast < signed int , unsigned int >);
    add_to_type_cast_table( 5 , 7 , new TypeCast < signed int , signed long >);
    add_to_type_cast_table( 5 , 8 , new TypeCast < signed int , unsigned long >);
    add_to_type_cast_table( 5 , 9 , new TypeCast < signed int , signed long long >);
    add_to_type_cast_table( 5 , 10 , new TypeCast < signed int , unsigned long long >);
    add_to_type_cast_table( 5 , 11 , new TypeCast < signed int , float >);
    add_to_type_cast_table( 5 , 12 , new TypeCast < signed int , double >);
    add_to_type_cast_table( 5 , 13 , new TypeCast < signed int , long double >);
    add_to_type_cast_table( 6 , 1 , new TypeCast < unsigned int , signed char >);
    add_to_type_cast_table( 6 , 2 , new TypeCast < unsigned int , unsigned char >);
    add_to_type_cast_table( 6 , 3 , new TypeCast < unsigned int , signed short >);
    add_to_type_cast_table( 6 , 4 , new TypeCast < unsigned int , unsigned short >);
    add_to_type_cast_table( 6 , 5 , new TypeCast < unsigned int , signed int >);
    add_to_type_cast_table( 6 , 6 , new TypeCast < unsigned int , unsigned int >);
    add_to_type_cast_table( 6 , 7 , new TypeCast < unsigned int , signed long >);
    add_to_type_cast_table( 6 , 8 , new TypeCast < unsigned int , unsigned long >);
    add_to_type_cast_table( 6 , 9 , new TypeCast < unsigned int , signed long long >);
    add_to_type_cast_table( 6 , 10 , new TypeCast < unsigned int , unsigned long long >);
    add_to_type_cast_table( 6 , 11 , new TypeCast < unsigned int , float >);
    add_to_type_cast_table( 6 , 12 , new TypeCast < unsigned int , double >);
    add_to_type_cast_table( 6 , 13 , new TypeCast < unsigned int , long double >);
    add_to_type_cast_table( 7 , 1 , new TypeCast < signed long , signed char >);
    add_to_type_cast_table( 7 , 2 , new TypeCast < signed long , unsigned char >);
    add_to_type_cast_table( 7 , 3 , new TypeCast < signed long , signed short >);
    add_to_type_cast_table( 7 , 4 , new TypeCast < signed long , unsigned short >);
    add_to_type_cast_table( 7 , 5 , new TypeCast < signed long , signed int >);
    add_to_type_cast_table( 7 , 6 , new TypeCast < signed long , unsigned int >);
    add_to_type_cast_table( 7 , 7 , new TypeCast < signed long , signed long >);
    add_to_type_cast_table( 7 , 8 , new TypeCast < signed long , unsigned long >);
    add_to_type_cast_table( 7 , 9 , new TypeCast < signed long , signed long long >);
    add_to_type_cast_table( 7 , 10 , new TypeCast < signed long , unsigned long long >);
    add_to_type_cast_table( 7 , 11 , new TypeCast < signed long , float >);
    add_to_type_cast_table( 7 , 12 , new TypeCast < signed long , double >);
    add_to_type_cast_table( 7 , 13 , new TypeCast < signed long , long double >);
    add_to_type_cast_table( 8 , 1 , new TypeCast < unsigned long , signed char >);
    add_to_type_cast_table( 8 , 2 , new TypeCast < unsigned long , unsigned char >);
    add_to_type_cast_table( 8 , 3 , new TypeCast < unsigned long , signed short >);
    add_to_type_cast_table( 8 , 4 , new TypeCast < unsigned long , unsigned short >);
    add_to_type_cast_table( 8 , 5 , new TypeCast < unsigned long , signed int >);
    add_to_type_cast_table( 8 , 6 , new TypeCast < unsigned long , unsigned int >);
    add_to_type_cast_table( 8 , 7 , new TypeCast < unsigned long , signed long >);
    add_to_type_cast_table( 8 , 8 , new TypeCast < unsigned long , unsigned long >);
    add_to_type_cast_table( 8 , 9 , new TypeCast < unsigned long , signed long long >);
    add_to_type_cast_table( 8 , 10 , new TypeCast < unsigned long , unsigned long long >);
    add_to_type_cast_table( 8 , 11 , new TypeCast < unsigned long , float >);
    add_to_type_cast_table( 8 , 12 , new TypeCast < unsigned long , double >);
    add_to_type_cast_table( 8 , 13 , new TypeCast < unsigned long , long double >);
    add_to_type_cast_table( 9 , 1 , new TypeCast < signed long long , signed char >);
    add_to_type_cast_table( 9 , 2 , new TypeCast < signed long long , unsigned char >);
    add_to_type_cast_table( 9 , 3 , new TypeCast < signed long long , signed short >);
    add_to_type_cast_table( 9 , 4 , new TypeCast < signed long long , unsigned short >);
    add_to_type_cast_table( 9 , 5 , new TypeCast < signed long long , signed int >);
    add_to_type_cast_table( 9 , 6 , new TypeCast < signed long long , unsigned int >);
    add_to_type_cast_table( 9 , 7 , new TypeCast < signed long long , signed long >);
    add_to_type_cast_table( 9 , 8 , new TypeCast < signed long long , unsigned long >);
    add_to_type_cast_table( 9 , 9 , new TypeCast < signed long long , signed long long >);
    add_to_type_cast_table( 9 , 10 , new TypeCast < signed long long , unsigned long long >);
    add_to_type_cast_table( 9 , 11 , new TypeCast < signed long long , float >);
    add_to_type_cast_table( 9 , 12 , new TypeCast < signed long long , double >);
    add_to_type_cast_table( 9 , 13 , new TypeCast < signed long long , long double >);
    add_to_type_cast_table( 10 , 1 , new TypeCast < unsigned long long , signed char >);
    add_to_type_cast_table( 10 , 2 , new TypeCast < unsigned long long , unsigned char >);
    add_to_type_cast_table( 10 , 3 , new TypeCast < unsigned long long , signed short >);
    add_to_type_cast_table( 10 , 4 , new TypeCast < unsigned long long , unsigned short >);
    add_to_type_cast_table( 10 , 5 , new TypeCast < unsigned long long , signed int >);
    add_to_type_cast_table( 10 , 6 , new TypeCast < unsigned long long , unsigned int >);
    add_to_type_cast_table( 10 , 7 , new TypeCast < unsigned long long , signed long >);
    add_to_type_cast_table( 10 , 8 , new TypeCast < unsigned long long , unsigned long >);
    add_to_type_cast_table( 10 , 9 , new TypeCast < unsigned long long , signed long long >);
    add_to_type_cast_table( 10 , 10 , new TypeCast < unsigned long long , unsigned long long >);
    add_to_type_cast_table( 10 , 11 , new TypeCast < unsigned long long , float >);
    add_to_type_cast_table( 10 , 12 , new TypeCast < unsigned long long , double >);
    add_to_type_cast_table( 10 , 13 , new TypeCast < unsigned long long , long double >);
    add_to_type_cast_table( 11 , 1 , new TypeCast < float , signed char >);
    add_to_type_cast_table( 11 , 2 , new TypeCast < float , unsigned char >);
    add_to_type_cast_table( 11 , 3 , new TypeCast < float , signed short >);
    add_to_type_cast_table( 11 , 4 , new TypeCast < float , unsigned short >);
    add_to_type_cast_table( 11 , 5 , new TypeCast < float , signed int >);
    add_to_type_cast_table( 11 , 6 , new TypeCast < float , unsigned int >);
    add_to_type_cast_table( 11 , 7 , new TypeCast < float , signed long >);
    add_to_type_cast_table( 11 , 8 , new TypeCast < float , unsigned long >);
    add_to_type_cast_table( 11 , 9 , new TypeCast < float , signed long long >);
    add_to_type_cast_table( 11 , 10 , new TypeCast < float , unsigned long long >);
    add_to_type_cast_table( 11 , 11 , new TypeCast < float , float >);
    add_to_type_cast_table( 11 , 12 , new TypeCast < float , double >);
    add_to_type_cast_table( 11 , 13 , new TypeCast < float , long double >);
    add_to_type_cast_table( 12 , 1 , new TypeCast < double , signed char >);
    add_to_type_cast_table( 12 , 2 , new TypeCast < double , unsigned char >);
    add_to_type_cast_table( 12 , 3 , new TypeCast < double , signed short >);
    add_to_type_cast_table( 12 , 4 , new TypeCast < double , unsigned short >);
    add_to_type_cast_table( 12 , 5 , new TypeCast < double , signed int >);
    add_to_type_cast_table( 12 , 6 , new TypeCast < double , unsigned int >);
    add_to_type_cast_table( 12 , 7 , new TypeCast < double , signed long >);
    add_to_type_cast_table( 12 , 8 , new TypeCast < double , unsigned long >);
    add_to_type_cast_table( 12 , 9 , new TypeCast < double , signed long long >);
    add_to_type_cast_table( 12 , 10 , new TypeCast < double , unsigned long long >);
    add_to_type_cast_table( 12 , 11 , new TypeCast < double , float >);
    add_to_type_cast_table( 12 , 12 , new TypeCast < double , double >);
    add_to_type_cast_table( 12 , 13 , new TypeCast < double , long double >);
    add_to_type_cast_table( 13 , 1 , new TypeCast < long double , signed char >);
    add_to_type_cast_table( 13 , 2 , new TypeCast < long double , unsigned char >);
    add_to_type_cast_table( 13 , 3 , new TypeCast < long double , signed short >);
    add_to_type_cast_table( 13 , 4 , new TypeCast < long double , unsigned short >);
    add_to_type_cast_table( 13 , 5 , new TypeCast < long double , signed int >);
    add_to_type_cast_table( 13 , 6 , new TypeCast < long double , unsigned int >);
    add_to_type_cast_table( 13 , 7 , new TypeCast < long double , signed long >);
    add_to_type_cast_table( 13 , 8 , new TypeCast < long double , unsigned long >);
    add_to_type_cast_table( 13 , 9 , new TypeCast < long double , signed long long >);
    add_to_type_cast_table( 13 , 10 , new TypeCast < long double , unsigned long long >);
    add_to_type_cast_table( 13 , 11 , new TypeCast < long double , float >);
    add_to_type_cast_table( 13 , 12 , new TypeCast < long double , double >);
    add_to_type_cast_table( 13 , 13 , new TypeCast < long double , long double >);

    add_to_command_table_3( 1 , 1 , new Conditional < signed char , signed char , signed char >);
    add_to_command_table_3( 1 , 2 , new Conditional < signed char , unsigned char , unsigned char >);
    add_to_command_table_3( 1 , 3 , new Conditional < signed char , signed short , signed short >);
    add_to_command_table_3( 1 , 4 , new Conditional < signed char , unsigned short , unsigned short >);
    add_to_command_table_3( 1 , 5 , new Conditional < signed char , signed int , signed int >);
    add_to_command_table_3( 1 , 6 , new Conditional < signed char , unsigned int , unsigned int >);
    add_to_command_table_3( 1 , 7 , new Conditional < signed char , signed long , signed long >);
    add_to_command_table_3( 1 , 8 , new Conditional < signed char , unsigned long , unsigned long >);
    add_to_command_table_3( 1 , 9 , new Conditional < signed char , signed long long , signed long long >);
    add_to_command_table_3( 1 , 10 , new Conditional < signed char , unsigned long long , unsigned long long >);
    add_to_command_table_3( 1 , 11 , new Conditional < signed char , float , float >);
    add_to_command_table_3( 1 , 12 , new Conditional < signed char , double , double >);
    add_to_command_table_3( 1 , 13 , new Conditional < signed char , long double , long double >);
    add_to_command_table_3( 2 , 1 , new Conditional < unsigned char , signed char , signed char >);
    add_to_command_table_3( 2 , 2 , new Conditional < unsigned char , unsigned char , unsigned char >);
    add_to_command_table_3( 2 , 3 , new Conditional < unsigned char , signed short , signed short >);
    add_to_command_table_3( 2 , 4 , new Conditional < unsigned char , unsigned short , unsigned short >);
    add_to_command_table_3( 2 , 5 , new Conditional < unsigned char , signed int , signed int >);
    add_to_command_table_3( 2 , 6 , new Conditional < unsigned char , unsigned int , unsigned int >);
    add_to_command_table_3( 2 , 7 , new Conditional < unsigned char , signed long , signed long >);
    add_to_command_table_3( 2 , 8 , new Conditional < unsigned char , unsigned long , unsigned long >);
    add_to_command_table_3( 2 , 9 , new Conditional < unsigned char , signed long long , signed long long >);
    add_to_command_table_3( 2 , 10 , new Conditional < unsigned char , unsigned long long , unsigned long long >);
    add_to_command_table_3( 2 , 11 , new Conditional < unsigned char , float , float >);
    add_to_command_table_3( 2 , 12 , new Conditional < unsigned char , double , double >);
    add_to_command_table_3( 2 , 13 , new Conditional < unsigned char , long double , long double >);
    add_to_command_table_3( 3 , 1 , new Conditional < signed short , signed char , signed char >);
    add_to_command_table_3( 3 , 2 , new Conditional < signed short , unsigned char , unsigned char >);
    add_to_command_table_3( 3 , 3 , new Conditional < signed short , signed short , signed short >);
    add_to_command_table_3( 3 , 4 , new Conditional < signed short , unsigned short , unsigned short >);
    add_to_command_table_3( 3 , 5 , new Conditional < signed short , signed int , signed int >);
    add_to_command_table_3( 3 , 6 , new Conditional < signed short , unsigned int , unsigned int >);
    add_to_command_table_3( 3 , 7 , new Conditional < signed short , signed long , signed long >);
    add_to_command_table_3( 3 , 8 , new Conditional < signed short , unsigned long , unsigned long >);
    add_to_command_table_3( 3 , 9 , new Conditional < signed short , signed long long , signed long long >);
    add_to_command_table_3( 3 , 10 , new Conditional < signed short , unsigned long long , unsigned long long >);
    add_to_command_table_3( 3 , 11 , new Conditional < signed short , float , float >);
    add_to_command_table_3( 3 , 12 , new Conditional < signed short , double , double >);
    add_to_command_table_3( 3 , 13 , new Conditional < signed short , long double , long double >);
    add_to_command_table_3( 4 , 1 , new Conditional < unsigned short , signed char , signed char >);
    add_to_command_table_3( 4 , 2 , new Conditional < unsigned short , unsigned char , unsigned char >);
    add_to_command_table_3( 4 , 3 , new Conditional < unsigned short , signed short , signed short >);
    add_to_command_table_3( 4 , 4 , new Conditional < unsigned short , unsigned short , unsigned short >);
    add_to_command_table_3( 4 , 5 , new Conditional < unsigned short , signed int , signed int >);
    add_to_command_table_3( 4 , 6 , new Conditional < unsigned short , unsigned int , unsigned int >);
    add_to_command_table_3( 4 , 7 , new Conditional < unsigned short , signed long , signed long >);
    add_to_command_table_3( 4 , 8 , new Conditional < unsigned short , unsigned long , unsigned long >);
    add_to_command_table_3( 4 , 9 , new Conditional < unsigned short , signed long long , signed long long >);
    add_to_command_table_3( 4 , 10 , new Conditional < unsigned short , unsigned long long , unsigned long long >);
    add_to_command_table_3( 4 , 11 , new Conditional < unsigned short , float , float >);
    add_to_command_table_3( 4 , 12 , new Conditional < unsigned short , double , double >);
    add_to_command_table_3( 4 , 13 , new Conditional < unsigned short , long double , long double >);
    add_to_command_table_3( 5 , 1 , new Conditional < signed int , signed char , signed char >);
    add_to_command_table_3( 5 , 2 , new Conditional < signed int , unsigned char , unsigned char >);
    add_to_command_table_3( 5 , 3 , new Conditional < signed int , signed short , signed short >);
    add_to_command_table_3( 5 , 4 , new Conditional < signed int , unsigned short , unsigned short >);
    add_to_command_table_3( 5 , 5 , new Conditional < signed int , signed int , signed int >);
    add_to_command_table_3( 5 , 6 , new Conditional < signed int , unsigned int , unsigned int >);
    add_to_command_table_3( 5 , 7 , new Conditional < signed int , signed long , signed long >);
    add_to_command_table_3( 5 , 8 , new Conditional < signed int , unsigned long , unsigned long >);
    add_to_command_table_3( 5 , 9 , new Conditional < signed int , signed long long , signed long long >);
    add_to_command_table_3( 5 , 10 , new Conditional < signed int , unsigned long long , unsigned long long >);
    add_to_command_table_3( 5 , 11 , new Conditional < signed int , float , float >);
    add_to_command_table_3( 5 , 12 , new Conditional < signed int , double , double >);
    add_to_command_table_3( 5 , 13 , new Conditional < signed int , long double , long double >);
    add_to_command_table_3( 6 , 1 , new Conditional < unsigned int , signed char , signed char >);
    add_to_command_table_3( 6 , 2 , new Conditional < unsigned int , unsigned char , unsigned char >);
    add_to_command_table_3( 6 , 3 , new Conditional < unsigned int , signed short , signed short >);
    add_to_command_table_3( 6 , 4 , new Conditional < unsigned int , unsigned short , unsigned short >);
    add_to_command_table_3( 6 , 5 , new Conditional < unsigned int , signed int , signed int >);
    add_to_command_table_3( 6 , 6 , new Conditional < unsigned int , unsigned int , unsigned int >);
    add_to_command_table_3( 6 , 7 , new Conditional < unsigned int , signed long , signed long >);
    add_to_command_table_3( 6 , 8 , new Conditional < unsigned int , unsigned long , unsigned long >);
    add_to_command_table_3( 6 , 9 , new Conditional < unsigned int , signed long long , signed long long >);
    add_to_command_table_3( 6 , 10 , new Conditional < unsigned int , unsigned long long , unsigned long long >);
    add_to_command_table_3( 6 , 11 , new Conditional < unsigned int , float , float >);
    add_to_command_table_3( 6 , 12 , new Conditional < unsigned int , double , double >);
    add_to_command_table_3( 6 , 13 , new Conditional < unsigned int , long double , long double >);
    add_to_command_table_3( 7 , 1 , new Conditional < signed long , signed char , signed char >);
    add_to_command_table_3( 7 , 2 , new Conditional < signed long , unsigned char , unsigned char >);
    add_to_command_table_3( 7 , 3 , new Conditional < signed long , signed short , signed short >);
    add_to_command_table_3( 7 , 4 , new Conditional < signed long , unsigned short , unsigned short >);
    add_to_command_table_3( 7 , 5 , new Conditional < signed long , signed int , signed int >);
    add_to_command_table_3( 7 , 6 , new Conditional < signed long , unsigned int , unsigned int >);
    add_to_command_table_3( 7 , 7 , new Conditional < signed long , signed long , signed long >);
    add_to_command_table_3( 7 , 8 , new Conditional < signed long , unsigned long , unsigned long >);
    add_to_command_table_3( 7 , 9 , new Conditional < signed long , signed long long , signed long long >);
    add_to_command_table_3( 7 , 10 , new Conditional < signed long , unsigned long long , unsigned long long >);
    add_to_command_table_3( 7 , 11 , new Conditional < signed long , float , float >);
    add_to_command_table_3( 7 , 12 , new Conditional < signed long , double , double >);
    add_to_command_table_3( 7 , 13 , new Conditional < signed long , long double , long double >);
    add_to_command_table_3( 8 , 1 , new Conditional < unsigned long , signed char , signed char >);
    add_to_command_table_3( 8 , 2 , new Conditional < unsigned long , unsigned char , unsigned char >);
    add_to_command_table_3( 8 , 3 , new Conditional < unsigned long , signed short , signed short >);
    add_to_command_table_3( 8 , 4 , new Conditional < unsigned long , unsigned short , unsigned short >);
    add_to_command_table_3( 8 , 5 , new Conditional < unsigned long , signed int , signed int >);
    add_to_command_table_3( 8 , 6 , new Conditional < unsigned long , unsigned int , unsigned int >);
    add_to_command_table_3( 8 , 7 , new Conditional < unsigned long , signed long , signed long >);
    add_to_command_table_3( 8 , 8 , new Conditional < unsigned long , unsigned long , unsigned long >);
    add_to_command_table_3( 8 , 9 , new Conditional < unsigned long , signed long long , signed long long >);
    add_to_command_table_3( 8 , 10 , new Conditional < unsigned long , unsigned long long , unsigned long long >);
    add_to_command_table_3( 8 , 11 , new Conditional < unsigned long , float , float >);
    add_to_command_table_3( 8 , 12 , new Conditional < unsigned long , double , double >);
    add_to_command_table_3( 8 , 13 , new Conditional < unsigned long , long double , long double >);
    add_to_command_table_3( 9 , 1 , new Conditional < signed long long , signed char , signed char >);
    add_to_command_table_3( 9 , 2 , new Conditional < signed long long , unsigned char , unsigned char >);
    add_to_command_table_3( 9 , 3 , new Conditional < signed long long , signed short , signed short >);
    add_to_command_table_3( 9 , 4 , new Conditional < signed long long , unsigned short , unsigned short >);
    add_to_command_table_3( 9 , 5 , new Conditional < signed long long , signed int , signed int >);
    add_to_command_table_3( 9 , 6 , new Conditional < signed long long , unsigned int , unsigned int >);
    add_to_command_table_3( 9 , 7 , new Conditional < signed long long , signed long , signed long >);
    add_to_command_table_3( 9 , 8 , new Conditional < signed long long , unsigned long , unsigned long >);
    add_to_command_table_3( 9 , 9 , new Conditional < signed long long , signed long long , signed long long >);
    add_to_command_table_3( 9 , 10 , new Conditional < signed long long , unsigned long long , unsigned long long >);
    add_to_command_table_3( 9 , 11 , new Conditional < signed long long , float , float >);
    add_to_command_table_3( 9 , 12 , new Conditional < signed long long , double , double >);
    add_to_command_table_3( 9 , 13 , new Conditional < signed long long , long double , long double >);
    add_to_command_table_3( 10 , 1 , new Conditional < unsigned long long , signed char , signed char >);
    add_to_command_table_3( 10 , 2 , new Conditional < unsigned long long , unsigned char , unsigned char >);
    add_to_command_table_3( 10 , 3 , new Conditional < unsigned long long , signed short , signed short >);
    add_to_command_table_3( 10 , 4 , new Conditional < unsigned long long , unsigned short , unsigned short >);
    add_to_command_table_3( 10 , 5 , new Conditional < unsigned long long , signed int , signed int >);
    add_to_command_table_3( 10 , 6 , new Conditional < unsigned long long , unsigned int , unsigned int >);
    add_to_command_table_3( 10 , 7 , new Conditional < unsigned long long , signed long , signed long >);
    add_to_command_table_3( 10 , 8 , new Conditional < unsigned long long , unsigned long , unsigned long >);
    add_to_command_table_3( 10 , 9 , new Conditional < unsigned long long , signed long long , signed long long >);
    add_to_command_table_3( 10 , 10 , new Conditional < unsigned long long , unsigned long long , unsigned long long >);
    add_to_command_table_3( 10 , 11 , new Conditional < unsigned long long , float , float >);
    add_to_command_table_3( 10 , 12 , new Conditional < unsigned long long , double , double >);
    add_to_command_table_3( 10 , 13 , new Conditional < unsigned long long , long double , long double >);
    add_to_command_table_3( 11 , 1 , new Conditional < float , signed char , signed char >);
    add_to_command_table_3( 11 , 2 , new Conditional < float , unsigned char , unsigned char >);
    add_to_command_table_3( 11 , 3 , new Conditional < float , signed short , signed short >);
    add_to_command_table_3( 11 , 4 , new Conditional < float , unsigned short , unsigned short >);
    add_to_command_table_3( 11 , 5 , new Conditional < float , signed int , signed int >);
    add_to_command_table_3( 11 , 6 , new Conditional < float , unsigned int , unsigned int >);
    add_to_command_table_3( 11 , 7 , new Conditional < float , signed long , signed long >);
    add_to_command_table_3( 11 , 8 , new Conditional < float , unsigned long , unsigned long >);
    add_to_command_table_3( 11 , 9 , new Conditional < float , signed long long , signed long long >);
    add_to_command_table_3( 11 , 10 , new Conditional < float , unsigned long long , unsigned long long >);
    add_to_command_table_3( 11 , 11 , new Conditional < float , float , float >);
    add_to_command_table_3( 11 , 12 , new Conditional < float , double , double >);
    add_to_command_table_3( 11 , 13 , new Conditional < float , long double , long double >);
    add_to_command_table_3( 12 , 1 , new Conditional < double , signed char , signed char >);
    add_to_command_table_3( 12 , 2 , new Conditional < double , unsigned char , unsigned char >);
    add_to_command_table_3( 12 , 3 , new Conditional < double , signed short , signed short >);
    add_to_command_table_3( 12 , 4 , new Conditional < double , unsigned short , unsigned short >);
    add_to_command_table_3( 12 , 5 , new Conditional < double , signed int , signed int >);
    add_to_command_table_3( 12 , 6 , new Conditional < double , unsigned int , unsigned int >);
    add_to_command_table_3( 12 , 7 , new Conditional < double , signed long , signed long >);
    add_to_command_table_3( 12 , 8 , new Conditional < double , unsigned long , unsigned long >);
    add_to_command_table_3( 12 , 9 , new Conditional < double , signed long long , signed long long >);
    add_to_command_table_3( 12 , 10 , new Conditional < double , unsigned long long , unsigned long long >);
    add_to_command_table_3( 12 , 11 , new Conditional < double , float , float >);
    add_to_command_table_3( 12 , 12 , new Conditional < double , double , double >);
    add_to_command_table_3( 12 , 13 , new Conditional < double , long double , long double >);
    add_to_command_table_3( 13 , 1 , new Conditional < long double , signed char , signed char >);
    add_to_command_table_3( 13 , 2 , new Conditional < long double , unsigned char , unsigned char >);
    add_to_command_table_3( 13 , 3 , new Conditional < long double , signed short , signed short >);
    add_to_command_table_3( 13 , 4 , new Conditional < long double , unsigned short , unsigned short >);
    add_to_command_table_3( 13 , 5 , new Conditional < long double , signed int , signed int >);
    add_to_command_table_3( 13 , 6 , new Conditional < long double , unsigned int , unsigned int >);
    add_to_command_table_3( 13 , 7 , new Conditional < long double , signed long , signed long >);
    add_to_command_table_3( 13 , 8 , new Conditional < long double , unsigned long , unsigned long >);
    add_to_command_table_3( 13 , 9 , new Conditional < long double , signed long long , signed long long >);
    add_to_command_table_3( 13 , 10 , new Conditional < long double , unsigned long long , unsigned long long >);
    add_to_command_table_3( 13 , 11 , new Conditional < long double , float , float >);
    add_to_command_table_3( 13 , 12 , new Conditional < long double , double , double >);
    add_to_command_table_3( 13 , 13 , new Conditional < long double , long double , long double >);

    add_to_command_table_1( 1 , LexemLeftBracket , new Addressing < signed char >);
    add_to_command_table_1( 2 , LexemLeftBracket , new Addressing < unsigned char >);
    add_to_command_table_1( 3 , LexemLeftBracket , new Addressing < signed short >);
    add_to_command_table_1( 4 , LexemLeftBracket , new Addressing < unsigned short >);
    add_to_command_table_1( 5 , LexemLeftBracket , new Addressing < signed int >);
    add_to_command_table_1( 6 , LexemLeftBracket , new Addressing < unsigned int >);
    add_to_command_table_1( 7 , LexemLeftBracket , new Addressing < signed long >);
    add_to_command_table_1( 8 , LexemLeftBracket , new Addressing < unsigned long >);
    add_to_command_table_1( 9 , LexemLeftBracket , new Addressing < signed long long >);
    add_to_command_table_1( 10 , LexemLeftBracket , new Addressing < unsigned long long >);
}

//#endif //INTERPRET_TYPES_H
